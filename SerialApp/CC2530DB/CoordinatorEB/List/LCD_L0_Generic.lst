###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         14/Jun/2016  16:18:38 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Cor #
#                          e\LCD_L0_Generic.c                                 #
#    Command line       =  -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\..\..\..\Tools\CC2530D #
#                          B\f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func      #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\..\..\..\Tools\CC2530D #
#                          B\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0            #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1001                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโ #
#                          ลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5. #
#                          1a\Components\uCGUI\Core\LCD_L0_Generic.c -D       #
#                          HAL_UART=TRUE -D SERIAL_APP_PORT=0 -D COOR -D      #
#                          LCD_SUPPORTED -D NV_INIT -lC                       #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\ -lA   #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\       #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\Obj\ -e     #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\ -I                    #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\Public\ -I             #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \uCGUI\Core\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ2 #
#                          10\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\uCGUI\MultiLayer\ -I              #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \uCGUI\Config\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสม #
#                          ฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Pr #
#                          ojects\zstack\Utilities\SerialApp\CC2530DB\..\Coor #
#                          dinator\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Z #
#                          igBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Utilities\SerialApp\CC2530DB\..\..\..\ZMai #
#                          n\TI2530DB\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ21 #
#                          0\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje #
#                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\. #
#                          .\..\Components\hal\include\ -I                    #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \hal\target\CC2530EB\ -I                           #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ #
#                          210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\high_level\ -I               #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\ -I                           #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\single_chip\ -I               #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mt\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBe #
#                          eอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zst #
#                          ack\Utilities\SerialApp\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \services\saddr\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื #
#                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ #
#                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\.. #
#                          \..\..\..\Components\services\sdata\ -I            #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\af\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210 #
#                          \ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projec #
#                          ts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\.. #
#                          \..\Components\stack\nwk\ -I                       #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\sapi\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ2 #
#                          10\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\stack\sec\ -I                     #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\sys\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ21 #
#                          0\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje #
#                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\. #
#                          .\..\Components\stack\zdo\ -I                      #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \zmac\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Zig #
#                          Beeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\z #
#                          stack\Utilities\SerialApp\CC2530DB\..\..\..\..\..\ #
#                          Components\zmac\f8w\ -Ohz --require_prototypes     #
#    List file          =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\LCD_L0 #
#                          _Generic.lst                                       #
#    Object file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\Obj\LCD_L0_ #
#                          Generic.r51                                        #
#                                                                             #
#                                                                             #
###############################################################################

F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Core\LCD_L0_Generic.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              ตC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : LCD_L0_Generic.c
     16          Purpose     : Color conversion routines for LCD-drivers
     17                        This file may not be compiled by itself, but needs
     18                        to be included in every LCD driver
     19          ---------------------------END-OF-HEADER------------------------------
     20          */
     21          
     22          #ifndef LCD_INCLUDEDRIVER_H     /* includes only for stand-alone compilation, not as included file */
     23            #include <stddef.h>           /* needed for definition of NULL */
     24            #include "LCD_Private.h"      /* private modul definitions & config */
     25            #include "GUI_Private.h"
     26            #include "GUIDebug.h"
     27          #endif
     28          
     29          /*********************************************************************
     30          *
     31          *       Defines
     32          *
     33          **********************************************************************
     34          */
     35          
     36          #define FIXEDPALETTE LCD_FIXEDPALETTE
     37          
     38          #if   FIXEDPALETTE == -1     /* User defined color conversion routines */
     39            #define COLOR2INDEX(Color) LCD_Color2Index_User(Color)
     40            #define INDEX2COLOR(Index) LCD_Index2Color_User(Index)
     41            #define GETINDEXMASK()     LCD_GetIndexMask_User()
     42          #elif FIXEDPALETTE == 0      /* User defined colors (LCD_PHYSCOLORS) */
     43            #define COLOR2INDEX(Color) LCD_Color2Index_0(Color, &LCD_PhysPal)
     44            #define INDEX2COLOR(Index) LCD_Index2Color_0(Index, &LCD_PhysPal)
     45            #define GETINDEXMASK()     LCD_GetIndexMask_0()
     46          #elif FIXEDPALETTE == 1
     47            #define COLOR2INDEX(Color) LCD_Color2Index_1(Color)
     48            #define INDEX2COLOR(Index) LCD_Index2Color_1(Index)
     49            #define GETINDEXMASK()     LCD_GetIndexMask_1()
     50          #elif FIXEDPALETTE == 2
     51            #define COLOR2INDEX(Color) LCD_Color2Index_2(Color)
     52            #define INDEX2COLOR(Index) LCD_Index2Color_2(Index)
     53            #define GETINDEXMASK()     LCD_GetIndexMask_2()
     54          #elif FIXEDPALETTE == 4
     55            #define COLOR2INDEX(Color) LCD_Color2Index_4(Color)
     56            #define INDEX2COLOR(Index) LCD_Index2Color_4(Index)
     57            #define GETINDEXMASK()     LCD_GetIndexMask_4()
     58          #elif (FIXEDPALETTE == 111) && (LCD_SWAP_RB==0)
     59            #define COLOR2INDEX(Color) LCD_Color2Index_111(Color)
     60            #define INDEX2COLOR(Index) LCD_Index2Color_111(Index)
     61            #define GETINDEXMASK()     LCD_GetIndexMask_111()
     62          #elif (FIXEDPALETTE == 111) && (LCD_SWAP_RB)
     63            #define COLOR2INDEX(Color) LCD_Color2Index_M111(Color)
     64            #define INDEX2COLOR(Index) LCD_Index2Color_M111(Index)
     65            #define GETINDEXMASK()     LCD_GetIndexMask_M111()
     66          #elif (FIXEDPALETTE == 222) && (LCD_SWAP_RB==0)
     67            #define COLOR2INDEX(Color) LCD_Color2Index_222(Color)
     68            #define INDEX2COLOR(Index) LCD_Index2Color_222(Index)
     69            #define GETINDEXMASK()     LCD_GetIndexMask_222()
     70          #elif (FIXEDPALETTE == 222) && (LCD_SWAP_RB==1)
     71            #define COLOR2INDEX(Color) LCD_Color2Index_M222(Color)
     72            #define INDEX2COLOR(Index) LCD_Index2Color_M222(Index)
     73            #define GETINDEXMASK()     LCD_GetIndexMask_M222()
     74          #elif (FIXEDPALETTE == 233) && (LCD_SWAP_RB==0)
     75            #define COLOR2INDEX(Color) LCD_Color2Index_233(Color)
     76            #define INDEX2COLOR(Index) LCD_Index2Color_233(Index)
     77            #define GETINDEXMASK()     LCD_GetIndexMask_233()
     78          #elif (FIXEDPALETTE == 233) && (LCD_SWAP_RB==1)
     79            #define COLOR2INDEX(Color) LCD_Color2Index_M233(Color)
     80            #define INDEX2COLOR(Index) LCD_Index2Color_M233(Index)
     81            #define GETINDEXMASK()     LCD_GetIndexMask_M233()
     82          #elif (FIXEDPALETTE == 323) && (LCD_SWAP_RB==0)
     83            #define COLOR2INDEX(Color) LCD_Color2Index_323(Color)
     84            #define INDEX2COLOR(Index) LCD_Index2Color_323(Index)
     85            #define GETINDEXMASK()     LCD_GetIndexMask_323()
     86          #elif (FIXEDPALETTE == 323) && (LCD_SWAP_RB==1)
     87            #define COLOR2INDEX(Color) LCD_Color2Index_M323(Color)
     88            #define INDEX2COLOR(Index) LCD_Index2Color_M323(Index)
     89            #define GETINDEXMASK()     LCD_GetIndexMask_M323()
     90          #elif (FIXEDPALETTE == 332) && (LCD_SWAP_RB==0)
     91            #define COLOR2INDEX(Color) LCD_Color2Index_332(Color)
     92            #define INDEX2COLOR(Index) LCD_Index2Color_332(Index)
     93            #define GETINDEXMASK()     LCD_GetIndexMask_332()
     94          #elif (FIXEDPALETTE == 332) && (LCD_SWAP_RB==1)
     95            #define COLOR2INDEX(Color) LCD_Color2Index_M332(Color)
     96            #define INDEX2COLOR(Index) LCD_Index2Color_M332(Index)
     97            #define GETINDEXMASK()     LCD_GetIndexMask_M332()
     98          #elif (FIXEDPALETTE == 444121)
     99            #define COLOR2INDEX(Color) LCD_Color2Index_444_12_1(Color)
    100            #define INDEX2COLOR(Index) LCD_Index2Color_444_12_1(Index)
    101            #define GETINDEXMASK()     LCD_GetIndexMask_444_12_1()
    102          #elif (FIXEDPALETTE == 44412) && (LCD_SWAP_RB==0)
    103            #define COLOR2INDEX(Color) LCD_Color2Index_444_12(Color)
    104            #define INDEX2COLOR(Index) LCD_Index2Color_444_12(Index)
    105            #define GETINDEXMASK()     LCD_GetIndexMask_444_12()
    106          #elif (FIXEDPALETTE == 44416)  && (LCD_SWAP_RB==0)
    107            #define COLOR2INDEX(Color) LCD_Color2Index_444_16(Color)
    108            #define INDEX2COLOR(Index) LCD_Index2Color_444_16(Index)
    109            #define GETINDEXMASK()     LCD_GetIndexMask_444_16()
    110          #elif (FIXEDPALETTE == 44412)  && (LCD_SWAP_RB==1)
    111            #define COLOR2INDEX(Color) LCD_Color2Index_M444_12(Color)
    112            #define INDEX2COLOR(Index) LCD_Index2Color_M444_12(Index)
    113            #define GETINDEXMASK()     LCD_GetIndexMask_M444_12()
    114          #elif (FIXEDPALETTE == 44416)  && (LCD_SWAP_RB==1)
    115            #define COLOR2INDEX(Color) LCD_Color2Index_M444_16(Color)
    116            #define INDEX2COLOR(Index) LCD_Index2Color_M444_16(Index)
    117            #define GETINDEXMASK()     LCD_GetIndexMask_M444_16()
    118          #elif (FIXEDPALETTE == 555)  && (LCD_SWAP_RB==0)
    119            #define COLOR2INDEX(Color) LCD_Color2Index_555(Color)
    120            #define INDEX2COLOR(Index) LCD_Index2Color_555(Index)
    121            #define GETINDEXMASK()     LCD_GetIndexMask_555()
    122          #elif (FIXEDPALETTE == 555)  && (LCD_SWAP_RB)
    123            #define COLOR2INDEX(Color) LCD_Color2Index_M555(Color)
    124            #define INDEX2COLOR(Index) LCD_Index2Color_M555(Index)
    125            #define GETINDEXMASK()     LCD_GetIndexMask_M555()
    126          #elif (FIXEDPALETTE == 556) && (LCD_SWAP_RB==0)
    127            #define COLOR2INDEX(Color) LCD_Color2Index_556(Color)
    128            #define INDEX2COLOR(Index) LCD_Index2Color_556(Index)
    129            #define GETINDEXMASK()     LCD_GetIndexMask_556()
    130          #elif (FIXEDPALETTE == 556) && (LCD_SWAP_RB)
    131            #define COLOR2INDEX(Color) LCD_Color2Index_M556(Color)
    132            #define INDEX2COLOR(Index) LCD_Index2Color_M556(Index)
    133            #define GETINDEXMASK()     LCD_GetIndexMask_M556()
    134          #elif (FIXEDPALETTE == 565) && (LCD_SWAP_RB==0)
    135            #define COLOR2INDEX(Color) LCD_Color2Index_565(Color)
    136            #define INDEX2COLOR(Index) LCD_Index2Color_565(Index)
    137            #define GETINDEXMASK()     LCD_GetIndexMask_565()
    138          #elif (FIXEDPALETTE == 565) && (LCD_SWAP_RB)
    139            #define COLOR2INDEX(Color) LCD_Color2Index_M565(Color)
    140            #define INDEX2COLOR(Index) LCD_Index2Color_M565(Index)
    141            #define GETINDEXMASK()     LCD_GetIndexMask_M565()
    142          #elif (FIXEDPALETTE == 655) && (LCD_SWAP_RB==0)
    143            #define COLOR2INDEX(Color) LCD_Color2Index_655(Color)
    144            #define INDEX2COLOR(Index) LCD_Index2Color_655(Index)
    145            #define GETINDEXMASK()     LCD_GetIndexMask_655()
    146          #elif (FIXEDPALETTE == 655) && (LCD_SWAP_RB)
    147            #define COLOR2INDEX(Color) LCD_Color2Index_M655(Color)
    148            #define INDEX2COLOR(Index) LCD_Index2Color_M655(Index)
    149            #define GETINDEXMASK()     LCD_GetIndexMask_M655()
    150          #elif FIXEDPALETTE == 8666
    151            #define COLOR2INDEX(Color) LCD_Color2Index_8666(Color)
    152            #define INDEX2COLOR(Index) LCD_Index2Color_8666(Index)
    153            #define GETINDEXMASK()     LCD_GetIndexMask_8666()
    154          #elif FIXEDPALETTE == 86661
    155            #define COLOR2INDEX(Color) LCD_Color2Index_8666_1(Color)
    156            #define INDEX2COLOR(Index) LCD_Index2Color_8666_1(Index)
    157            #define GETINDEXMASK()     LCD_GetIndexMask_8666_1()
    158          #else
    159            #error Unsupported color mode
    160          #endif
    161          
    162          /*********************************************************************
    163          *
    164          *       Static data
    165          *
    166          **********************************************************************
    167          */
    168          
    169          #if (LCD_FIXEDPALETTE==0)
    170            #if !LCD_PHYSCOLORS_IN_RAM
    171              const
    172            #endif
    173            LCD_COLOR       LCD_PhysColors[]   = { LCD_PHYSCOLORS };
    174            const LCD_PHYSPALETTE LCD_PhysPal  = { LCD_NUM_COLORS, &LCD_PhysColors[0] };
    175          #endif
    176          
    177          /*********************************************************************
    178          *
    179          *       Public code
    180          *
    181          **********************************************************************
    182          */
    183          /*********************************************************************
    184          *
    185          *           LCD_L0_Color2Index
    186          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    187          unsigned int LCD_L0_Color2Index(LCD_COLOR Color) {
   \                     LCD_L0_Color2Index:
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
    188            unsigned int Index;
    189            Index = COLOR2INDEX(Color);
    190            #if LCD_REVERSE
    191              Index ^= ((1<<LCD_BITSPERPIXEL)-1);
    192            #endif
    193            return Index;
   \   000005                ; Setup parameters for call to function LCD_Color2Index_M565
   \   000005   12....       LCALL   ??LCD_Color2Index_M565?relay
   \   000008   7F04         MOV     R7,#0x4
   \   00000A   02....       LJMP    ?BANKED_LEAVE_XDATA
    194          }
    195          
    196          /*********************************************************************
    197          *
    198          *       LCD_L0_Index2Color
    199          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    200          LCD_COLOR LCD_L0_Index2Color(int Index) {
   \                     LCD_L0_Index2Color:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    201            #if LCD_REVERSE
    202              Index ^= ((1<<LCD_BITSPERPIXEL)-1);
    203            #endif
    204            return INDEX2COLOR(Index);
   \   000004                ; Setup parameters for call to function LCD_Index2Color_M565
   \   000004   12....       LCALL   ??LCD_Index2Color_M565?relay
   \   000007                REQUIRE ?Subroutine0
   \   000007                ; // Fall through to label ?Subroutine0
    205          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    206          
    207          /*********************************************************************
    208          *
    209          *       LCD_L0_GetIndexMask
    210          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    211          unsigned int LCD_L0_GetIndexMask(void) {
   \                     LCD_L0_GetIndexMask:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    212            return GETINDEXMASK();
   \   000004                ; Setup parameters for call to function LCD_GetIndexMask_M565
   \   000004   12....       LCALL   ??LCD_GetIndexMask_M565?relay
   \   000007   80..         SJMP    ?Subroutine0
    213          }
    214          
    215          /*********************************************************************
    216          *
    217          *       LCD_L0_GetRect
    218          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    219          void LCD_L0_GetRect(LCD_RECT *pRect) {
   \                     LCD_L0_GetRect:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    220            pRect->x0 = 0;
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   E4           CLR     A
   \   000009   12....       LCALL   ?Subroutine1 & 0xFFFF
    221            pRect->y0 = 0;
   \                     ??CrossCallReturnLabel_0:
   \   00000C   12....       LCALL   ?Subroutine1 & 0xFFFF
    222            pRect->x1 = LCD_XSIZE - 1;
   \                     ??CrossCallReturnLabel_1:
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   74EF         MOV     A,#-0x11
   \   000013   F0           MOVX    @DPTR,A
   \   000014   A3           INC     DPTR
   \   000015   E4           CLR     A
   \   000016   F0           MOVX    @DPTR,A
    223            pRect->y1 = LCD_YSIZE - 1;
   \   000017   8A82         MOV     DPL,R2
   \   000019   8B83         MOV     DPH,R3
   \   00001B   A3           INC     DPTR
   \   00001C   A3           INC     DPTR
   \   00001D   A3           INC     DPTR
   \   00001E   A3           INC     DPTR
   \   00001F   A3           INC     DPTR
   \   000020   A3           INC     DPTR
   \   000021   743F         MOV     A,#0x3f
   \   000023   F0           MOVX    @DPTR,A
   \   000024   A3           INC     DPTR
   \   000025   7401         MOV     A,#0x1
   \   000027   F0           MOVX    @DPTR,A
    224          }
   \   000028   80..         SJMP    ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   A3           INC     DPTR
   \   000002   F0           MOVX    @DPTR,A
   \   000003   8A82         MOV     DPL,R2
   \   000005   8B83         MOV     DPH,R3
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_L0_Color2Index?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_L0_Color2Index

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_L0_Index2Color?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_L0_Index2Color

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_L0_GetIndexMask?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_L0_GetIndexMask

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_L0_GetRect?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_L0_GetRect
    225          
    226          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                   ISTACK PSTACK XSTACK
     --------                   ------ ------ ------
     LCD_L0_Color2Index             0      0     12
       -> LCD_Color2Index_M565      0      0     24
     LCD_L0_GetIndexMask            2      0      0
       -> LCD_GetIndexMask_M565     4      0      0
     LCD_L0_GetRect                 2      0      0
     LCD_L0_Index2Color             2      0      0
       -> LCD_Index2Color_M565      4      0      0


   Segment part sizes:

     Function/Label              Bytes
     --------------              -----
     LCD_L0_Color2Index            13
     LCD_L0_Index2Color             7
     ?Subroutine0                   7
     LCD_L0_GetIndexMask            9
     LCD_L0_GetRect                42
     ?Subroutine1                  10
     ??LCD_L0_Color2Index?relay     6
     ??LCD_L0_Index2Color?relay     6
     ??LCD_L0_GetIndexMask?relay    6
     ??LCD_L0_GetRect?relay         6

 
 88 bytes in segment BANKED_CODE
 24 bytes in segment BANK_RELAYS
 
 112 bytes of CODE memory

Errors: none
Warnings: none
