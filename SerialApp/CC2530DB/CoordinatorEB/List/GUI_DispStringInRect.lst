###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         14/Jun/2016  16:18:12 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Cor #
#                          e\GUI_DispStringInRect.c                           #
#    Command line       =  -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\..\..\..\Tools\CC2530D #
#                          B\f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func      #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\..\..\..\Tools\CC2530D #
#                          B\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0            #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1001                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโ #
#                          ลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5. #
#                          1a\Components\uCGUI\Core\GUI_DispStringInRect.c    #
#                          -D HAL_UART=TRUE -D SERIAL_APP_PORT=0 -D COOR -D   #
#                          LCD_SUPPORTED -D NV_INIT -lC                       #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\ -lA   #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\       #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\Obj\ -e     #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\ -I                    #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\Public\ -I             #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \uCGUI\Core\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ2 #
#                          10\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\uCGUI\MultiLayer\ -I              #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \uCGUI\Config\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสม #
#                          ฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Pr #
#                          ojects\zstack\Utilities\SerialApp\CC2530DB\..\Coor #
#                          dinator\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Z #
#                          igBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Utilities\SerialApp\CC2530DB\..\..\..\ZMai #
#                          n\TI2530DB\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ21 #
#                          0\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje #
#                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\. #
#                          .\..\Components\hal\include\ -I                    #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \hal\target\CC2530EB\ -I                           #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ #
#                          210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\high_level\ -I               #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\ -I                           #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\single_chip\ -I               #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mt\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBe #
#                          eอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zst #
#                          ack\Utilities\SerialApp\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \services\saddr\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื #
#                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ #
#                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\.. #
#                          \..\..\..\Components\services\sdata\ -I            #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\af\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210 #
#                          \ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projec #
#                          ts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\.. #
#                          \..\Components\stack\nwk\ -I                       #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\sapi\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ2 #
#                          10\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\stack\sec\ -I                     #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\sys\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ21 #
#                          0\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje #
#                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\. #
#                          .\..\Components\stack\zdo\ -I                      #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \zmac\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Zig #
#                          Beeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\z #
#                          stack\Utilities\SerialApp\CC2530DB\..\..\..\..\..\ #
#                          Components\zmac\f8w\ -Ohz --require_prototypes     #
#    List file          =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\GUI_Di #
#                          spStringInRect.lst                                 #
#    Object file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\Obj\GUI_Dis #
#                          pStringInRect.r51                                  #
#                                                                             #
#                                                                             #
###############################################################################

F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Core\GUI_DispStringInRect.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              ตC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_DispStringInRect.c
     16          Purpose     : Implementation of GUI_DispStringInRect
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stddef.h>           /* needed for definition of NULL */
     21          #include <stdio.h>
     22          #include "GUI_Protected.h"

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1
     23          #if GUI_WINSUPPORT
     24            #include "WM.h"
     25          #endif
     26           
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       GUI__DispStringInRect
     36          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     37          void GUI__DispStringInRect(const char GUI_UNI_PTR *s, GUI_RECT* pRect, int TextAlign, int MaxNumChars) {
   \                     GUI__DispStringInRect:
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 20
   \   000005   74EC         MOV     A,#-0x14
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   EA           MOV     A,R2
   \   000011   F0           MOVX    @DPTR,A
   \   000012   A3           INC     DPTR
   \   000013   EB           MOV     A,R3
   \   000014   F0           MOVX    @DPTR,A
   \   000015   8C..         MOV     ?V0 + 2,R4
   \   000017   8D..         MOV     ?V0 + 3,R5
   \   000019   742C         MOV     A,#0x2c
   \   00001B   12....       LCALL   ?XSTACK_DISP0_8
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   F5..         MOV     ?V0 + 4,A
   \   000021   742E         MOV     A,#0x2e
   \   000023   12....       LCALL   ?XSTACK_DISP0_8
   \   000026   E0           MOVX    A,@DPTR
   \   000027   F5..         MOV     ?V0 + 14,A
   \   000029   A3           INC     DPTR
   \   00002A   E0           MOVX    A,@DPTR
   \   00002B   F5..         MOV     ?V0 + 15,A
     38            GUI_RECT r;
     39            GUI_RECT rLine;
     40            int y = 0;
   \   00002D   7E00         MOV     R6,#0x0
   \   00002F   7F00         MOV     R7,#0x0
     41            const char GUI_UNI_PTR *sOrg =s;
   \   000031   85..82       MOV     DPL,?XSP + 0
   \   000034   85..83       MOV     DPH,?XSP + 1
   \   000037   E0           MOVX    A,@DPTR
   \   000038   F8           MOV     R0,A
   \   000039   A3           INC     DPTR
   \   00003A   E0           MOVX    A,@DPTR
   \   00003B   F9           MOV     R1,A
   \   00003C   740A         MOV     A,#0xa
   \   00003E   12....       LCALL   ?XSTACK_DISP0_8
   \   000041   E8           MOV     A,R0
   \   000042   F0           MOVX    @DPTR,A
   \   000043   A3           INC     DPTR
   \   000044   E9           MOV     A,R1
   \   000045   F0           MOVX    @DPTR,A
     42            int FontYSize;
     43            int xLine = 0;
   \   000046   8E..         MOV     ?V0 + 0,R6
   \   000048   8E..         MOV     ?V0 + 1,R6
     44            int LineLen;
     45            int NumCharsRem;           /* Number of remaining characters */
     46            FontYSize = GUI_GetFontSizeY();
   \   00004A                ; Setup parameters for call to function GUI_GetFontSizeY
   \   00004A   12....       LCALL   ??GUI_GetFontSizeY?relay
   \   00004D   8A..         MOV     ?V0 + 6,R2
   \   00004F   8B..         MOV     ?V0 + 7,R3
     47            if (pRect) {
   \   000051   E5..         MOV     A,?V0 + 2
   \   000053   45..         ORL     A,?V0 + 3
   \   000055   601E         JZ      ??GUI__DispStringInRect_0
     48              r = *pRect;
   \   000057   85..82       MOV     DPL,?V0 + 2
   \   00005A   85..83       MOV     DPH,?V0 + 3
   \   00005D   C082         PUSH    DPL
   \   00005F   C083         PUSH    DPH
   \   000061   7402         MOV     A,#0x2
   \   000063   12....       LCALL   ?XSTACK_DISP0_8
   \   000066   AC82         MOV     R4,DPL
   \   000068   AD83         MOV     R5,DPH
   \   00006A   D083         POP     DPH
   \   00006C   D082         POP     DPL
   \   00006E   7408         MOV     A,#0x8
   \   000070   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
   \   000073   800C         SJMP    ??GUI__DispStringInRect_1
     49            } else {
     50              GUI_GetClientRect(&r);
   \                     ??GUI__DispStringInRect_0:
   \   000075                ; Setup parameters for call to function GUI_GetClientRect
   \   000075   7402         MOV     A,#0x2
   \   000077   12....       LCALL   ?XSTACK_DISP0_8
   \   00007A   AA82         MOV     R2,DPL
   \   00007C   AB83         MOV     R3,DPH
   \   00007E   12....       LCALL   ??GUI_GetClientRect?relay
     51            }
     52            /* handle vertical alignment */
     53            if ((TextAlign & GUI_TA_VERTICAL) == GUI_TA_TOP) {
   \                     ??GUI__DispStringInRect_1:
   \   000081   E5..         MOV     A,?V0 + 4
   \   000083   540C         ANL     A,#0xc
   \   000085   700C         JNZ     ??GUI__DispStringInRect_2
     54          		y = r.y0;
   \   000087   7404         MOV     A,#0x4
   \   000089   12....       LCALL   ?XSTACK_DISP0_8
   \   00008C   E0           MOVX    A,@DPTR
   \   00008D   FE           MOV     R6,A
   \   00008E   A3           INC     DPTR
   \   00008F   E0           MOVX    A,@DPTR
   \   000090   02....       LJMP    ??GUI__DispStringInRect_3 & 0xFFFF
     55            } else {
     56              int NumLines;
     57              /* Count the number of lines */
     58              for (NumCharsRem = MaxNumChars, NumLines = 1; NumCharsRem ;NumLines++) {
   \                     ??GUI__DispStringInRect_2:
   \   000093   85....       MOV     ?V0 + 10,?V0 + 14
   \   000096   85....       MOV     ?V0 + 11,?V0 + 15
   \   000099   75..01       MOV     ?V0 + 2,#0x1
   \   00009C   8E..         MOV     ?V0 + 3,R6
   \   00009E   800C         SJMP    ??GUI__DispStringInRect_4
   \                     ??GUI__DispStringInRect_5:
   \   0000A0   E5..         MOV     A,?V0 + 2
   \   0000A2   2401         ADD     A,#0x1
   \   0000A4   F5..         MOV     ?V0 + 2,A
   \   0000A6   E5..         MOV     A,?V0 + 3
   \   0000A8   3400         ADDC    A,#0x0
   \   0000AA   F5..         MOV     ?V0 + 3,A
   \                     ??GUI__DispStringInRect_4:
   \   0000AC   E5..         MOV     A,?V0 + 10
   \   0000AE   45..         ORL     A,?V0 + 11
   \   0000B0   6025         JZ      ??GUI__DispStringInRect_6
     59                LineLen = GUI__GetLineNumChars(s, NumCharsRem);
   \   0000B2                ; Setup parameters for call to function GUI__GetLineNumChars
   \   0000B2   12....       LCALL   ?Subroutine0 & 0xFFFF
     60                NumCharsRem -= LineLen;
     61                s += GUI_UC__NumChars2NumBytes(s, LineLen);
   \                     ??CrossCallReturnLabel_0:
   \   0000B5   12....       LCALL   ??GUI_UC__NumChars2NumBytes?relay
   \   0000B8   8A..         MOV     ?V0 + 8,R2
   \   0000BA   8B..         MOV     ?V0 + 9,R3
   \   0000BC   A8..         MOV     R0,?V0 + 8
   \   0000BE   A9..         MOV     R1,?V0 + 9
   \   0000C0   12....       LCALL   ?Subroutine1 & 0xFFFF
     62                if (GUI__HandleEOLine(&s))
   \                     ??CrossCallReturnLabel_2:
   \   0000C3                ; Setup parameters for call to function GUI__HandleEOLine
   \   0000C3   85..82       MOV     DPL,?XSP + 0
   \   0000C6   85..83       MOV     DPH,?XSP + 1
   \   0000C9   AA82         MOV     R2,DPL
   \   0000CB   AB83         MOV     R3,DPH
   \   0000CD   12....       LCALL   ??GUI__HandleEOLine?relay
   \   0000D0   8B..         MOV     ?V0 + 9,R3
   \   0000D2   EA           MOV     A,R2
   \   0000D3   45..         ORL     A,?V0 + 9
   \   0000D5   60C9         JZ      ??GUI__DispStringInRect_5
     63                  break;
     64              }
     65              /* Do the vertical alignment */
     66              switch (TextAlign & GUI_TA_VERTICAL) {
   \                     ??GUI__DispStringInRect_6:
   \   0000D7   E5..         MOV     A,?V0 + 4
   \   0000D9   540C         ANL     A,#0xc
   \   0000DB   24FC         ADD     A,#-0x4
   \   0000DD   600A         JZ      ??GUI__DispStringInRect_7
   \   0000DF   24FC         ADD     A,#-0x4
   \   0000E1   6006         JZ      ??GUI__DispStringInRect_7
   \   0000E3   24FC         ADD     A,#-0x4
   \   0000E5   6033         JZ      ??GUI__DispStringInRect_8
   \   0000E7   807D         SJMP    ??GUI__DispStringInRect_9
     67          	  case GUI_TA_BASELINE:
     68          	  case GUI_TA_BOTTOM:
     69          	  y = r.y1 -NumLines * FontYSize+1;
   \                     ??GUI__DispStringInRect_7:
   \   0000E9   7408         MOV     A,#0x8
   \   0000EB   12....       LCALL   ?XSTACK_DISP0_8
   \   0000EE   E5..         MOV     A,?V0 + 2
   \   0000F0   85..F0       MOV     B,?V0 + 6
   \   0000F3   A4           MUL     AB
   \   0000F4   C5..         XCH     A,?V0 + 2
   \   0000F6   A8F0         MOV     R0,B
   \   0000F8   85..F0       MOV     B,?V0 + 7
   \   0000FB   A4           MUL     AB
   \   0000FC   28           ADD     A,R0
   \   0000FD   F8           MOV     R0,A
   \   0000FE   85..F0       MOV     B,?V0 + 6
   \   000101   E5..         MOV     A,?V0 + 3
   \   000103   A4           MUL     AB
   \   000104   28           ADD     A,R0
   \   000105   F5..         MOV     ?V0 + 3,A
   \   000107   E0           MOVX    A,@DPTR
   \   000108   C3           CLR     C
   \   000109   95..         SUBB    A,?V0 + 2
   \   00010B   F8           MOV     R0,A
   \   00010C   A3           INC     DPTR
   \   00010D   E0           MOVX    A,@DPTR
   \   00010E   95..         SUBB    A,?V0 + 3
   \   000110   F9           MOV     R1,A
   \   000111   E8           MOV     A,R0
   \   000112   2401         ADD     A,#0x1
   \   000114   FE           MOV     R6,A
   \   000115   E9           MOV     A,R1
   \   000116   3400         ADDC    A,#0x0
   \   000118   804B         SJMP    ??GUI__DispStringInRect_3
     70                break;
     71          	  case GUI_TA_VCENTER:
     72          		  y = r.y0+(r.y1-r.y0+1 -NumLines * FontYSize) /2;
   \                     ??GUI__DispStringInRect_8:
   \   00011A   7404         MOV     A,#0x4
   \   00011C   12....       LCALL   ?XSTACK_DISP0_8
   \   00011F   E0           MOVX    A,@DPTR
   \   000120   FC           MOV     R4,A
   \   000121   A3           INC     DPTR
   \   000122   E0           MOVX    A,@DPTR
   \   000123   FD           MOV     R5,A
   \   000124   7408         MOV     A,#0x8
   \   000126   12....       LCALL   ?XSTACK_DISP0_8
   \   000129   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   00012C   08           INC     R0
   \   00012D   E9           MOV     A,R1
   \   00012E   3400         ADDC    A,#0x0
   \   000130   F9           MOV     R1,A
   \   000131   E5..         MOV     A,?V0 + 2
   \   000133   85..F0       MOV     B,?V0 + 6
   \   000136   A4           MUL     AB
   \   000137   C5..         XCH     A,?V0 + 2
   \   000139   AAF0         MOV     R2,B
   \   00013B   85..F0       MOV     B,?V0 + 7
   \   00013E   A4           MUL     AB
   \   00013F   2A           ADD     A,R2
   \   000140   FA           MOV     R2,A
   \   000141   85..F0       MOV     B,?V0 + 6
   \   000144   E5..         MOV     A,?V0 + 3
   \   000146   A4           MUL     AB
   \   000147   2A           ADD     A,R2
   \   000148   F5..         MOV     ?V0 + 3,A
   \   00014A   E8           MOV     A,R0
   \   00014B   C3           CLR     C
   \   00014C   95..         SUBB    A,?V0 + 2
   \   00014E   F8           MOV     R0,A
   \   00014F   E9           MOV     A,R1
   \   000150   95..         SUBB    A,?V0 + 3
   \   000152   F9           MOV     R1,A
   \   000153   7A02         MOV     R2,#0x2
   \   000155   7B00         MOV     R3,#0x0
   \   000157   12....       LCALL   ?S_DIV_MOD
   \   00015A   88..         MOV     ?V0 + 2,R0
   \   00015C   89..         MOV     ?V0 + 3,R1
   \   00015E   EC           MOV     A,R4
   \   00015F   25..         ADD     A,?V0 + 2
   \   000161   FE           MOV     R6,A
   \   000162   ED           MOV     A,R5
   \   000163   35..         ADDC    A,?V0 + 3
   \                     ??GUI__DispStringInRect_3:
   \   000165   FF           MOV     R7,A
     73                break;
     74          	  }
     75            }
     76            /* Output string */
     77            for (NumCharsRem = MaxNumChars, s = sOrg; NumCharsRem;) {
   \                     ??GUI__DispStringInRect_9:
   \   000166   85....       MOV     ?V0 + 10,?V0 + 14
   \   000169   85....       MOV     ?V0 + 11,?V0 + 15
   \   00016C   740A         MOV     A,#0xa
   \   00016E   12....       LCALL   ?XSTACK_DISP0_8
   \   000171   E0           MOVX    A,@DPTR
   \   000172   F8           MOV     R0,A
   \   000173   A3           INC     DPTR
   \   000174   E0           MOVX    A,@DPTR
   \   000175   F9           MOV     R1,A
   \   000176   85..82       MOV     DPL,?XSP + 0
   \   000179   85..83       MOV     DPH,?XSP + 1
   \   00017C   E8           MOV     A,R0
   \   00017D   F0           MOVX    @DPTR,A
   \   00017E   A3           INC     DPTR
   \   00017F   E9           MOV     A,R1
   \   000180   F0           MOVX    @DPTR,A
   \                     ??GUI__DispStringInRect_10:
   \   000181   E5..         MOV     A,?V0 + 10
   \   000183   45..         ORL     A,?V0 + 11
   \   000185   7003         JNZ     $+5
   \   000187   02....       LJMP    ??GUI__DispStringInRect_11 & 0xFFFF
     78              int xLineSize;
     79              LineLen = GUI__GetLineNumChars(s, NumCharsRem);
   \   00018A                ; Setup parameters for call to function GUI__GetLineNumChars
   \   00018A   12....       LCALL   ?Subroutine0 & 0xFFFF
     80              NumCharsRem -= LineLen;
     81              xLineSize = GUI__GetLineDistX(s, LineLen);
   \                     ??CrossCallReturnLabel_1:
   \   00018D   12....       LCALL   ??GUI__GetLineDistX?relay
   \   000190   8A..         MOV     ?V0 + 2,R2
   \   000192   8B..         MOV     ?V0 + 3,R3
   \   000194   AC..         MOV     R4,?V0 + 2
   \   000196   AD..         MOV     R5,?V0 + 3
     82              switch (TextAlign & GUI_TA_HORIZONTAL) {
   \   000198   E5..         MOV     A,?V0 + 4
   \   00019A   5403         ANL     A,#0x3
   \   00019C   604F         JZ      ??GUI__DispStringInRect_12
   \   00019E   14           DEC     A
   \   00019F   6058         JZ      ??GUI__DispStringInRect_13
   \   0001A1   14           DEC     A
   \   0001A2   7064         JNZ     ??GUI__DispStringInRect_14
     83              case GUI_TA_HCENTER:
     84                xLine = r.x0+(r.x1-r.x0-xLineSize)/2; break;
   \   0001A4   7402         MOV     A,#0x2
   \   0001A6   12....       LCALL   ?XSTACK_DISP0_8
   \   0001A9   C082         PUSH    DPL
   \   0001AB   C083         PUSH    DPH
   \   0001AD   7406         MOV     A,#0x6
   \   0001AF   12....       LCALL   ?XSTACK_DISP0_8
   \   0001B2   C082         PUSH    DPL
   \   0001B4   C083         PUSH    DPH
   \   0001B6   7402         MOV     A,#0x2
   \   0001B8   12....       LCALL   ?XSTACK_DISP0_8
   \   0001BB   E0           MOVX    A,@DPTR
   \   0001BC   F8           MOV     R0,A
   \   0001BD   A3           INC     DPTR
   \   0001BE   E0           MOVX    A,@DPTR
   \   0001BF   F9           MOV     R1,A
   \   0001C0   D083         POP     DPH
   \   0001C2   D082         POP     DPL
   \   0001C4   E0           MOVX    A,@DPTR
   \   0001C5   C3           CLR     C
   \   0001C6   98           SUBB    A,R0
   \   0001C7   F8           MOV     R0,A
   \   0001C8   A3           INC     DPTR
   \   0001C9   E0           MOVX    A,@DPTR
   \   0001CA   99           SUBB    A,R1
   \   0001CB   F9           MOV     R1,A
   \   0001CC   E8           MOV     A,R0
   \   0001CD   C3           CLR     C
   \   0001CE   9C           SUBB    A,R4
   \   0001CF   F8           MOV     R0,A
   \   0001D0   E9           MOV     A,R1
   \   0001D1   9D           SUBB    A,R5
   \   0001D2   F9           MOV     R1,A
   \   0001D3   7A02         MOV     R2,#0x2
   \   0001D5   7B00         MOV     R3,#0x0
   \   0001D7   12....       LCALL   ?S_DIV_MOD
   \   0001DA   88..         MOV     ?V0 + 0,R0
   \   0001DC   89..         MOV     ?V0 + 1,R1
   \   0001DE   D083         POP     DPH
   \   0001E0   D082         POP     DPL
   \   0001E2   E0           MOVX    A,@DPTR
   \   0001E3   25..         ADD     A,?V0 + 0
   \   0001E5   F5..         MOV     ?V0 + 0,A
   \   0001E7   A3           INC     DPTR
   \   0001E8   E0           MOVX    A,@DPTR
   \   0001E9   35..         ADDC    A,?V0 + 1
   \   0001EB   8019         SJMP    ??GUI__DispStringInRect_15
     85              case GUI_TA_LEFT:
     86                xLine = r.x0; break;
   \                     ??GUI__DispStringInRect_12:
   \   0001ED   7402         MOV     A,#0x2
   \   0001EF   12....       LCALL   ?XSTACK_DISP0_8
   \   0001F2   E0           MOVX    A,@DPTR
   \   0001F3   F5..         MOV     ?V0 + 0,A
   \   0001F5   A3           INC     DPTR
   \   0001F6   E0           MOVX    A,@DPTR
   \   0001F7   800D         SJMP    ??GUI__DispStringInRect_15
     87              case GUI_TA_RIGHT:
     88                xLine = r.x1 -xLineSize + 1;
   \                     ??GUI__DispStringInRect_13:
   \   0001F9   7406         MOV     A,#0x6
   \   0001FB   12....       LCALL   ?XSTACK_DISP0_8
   \   0001FE   12....       LCALL   ?Subroutine2 & 0xFFFF
     89              }
   \                     ??CrossCallReturnLabel_5:
   \   000201   F5..         MOV     ?V0 + 0,A
   \   000203   E9           MOV     A,R1
   \   000204   3400         ADDC    A,#0x0
   \                     ??GUI__DispStringInRect_15:
   \   000206   F5..         MOV     ?V0 + 1,A
     90              rLine.x0 = GUI_Context.DispPosX = xLine;
   \                     ??GUI__DispStringInRect_14:
   \   000208   90....       MOV     DPTR,#GUI_Context + 27
   \   00020B   E5..         MOV     A,?V0 + 0
   \   00020D   F0           MOVX    @DPTR,A
   \   00020E   A3           INC     DPTR
   \   00020F   E5..         MOV     A,?V0 + 1
   \   000211   F0           MOVX    @DPTR,A
   \   000212   740C         MOV     A,#0xc
   \   000214   12....       LCALL   ?XSTACK_DISP0_8
   \   000217   E5..         MOV     A,?V0 + 0
   \   000219   F0           MOVX    @DPTR,A
   \   00021A   A3           INC     DPTR
   \   00021B   E5..         MOV     A,?V0 + 1
   \   00021D   F0           MOVX    @DPTR,A
     91              rLine.x1 = rLine.x0 + xLineSize-1;
   \   00021E   740C         MOV     A,#0xc
   \   000220   12....       LCALL   ?XSTACK_DISP0_8
   \   000223   E0           MOVX    A,@DPTR
   \   000224   2C           ADD     A,R4
   \   000225   F8           MOV     R0,A
   \   000226   A3           INC     DPTR
   \   000227   E0           MOVX    A,@DPTR
   \   000228   3D           ADDC    A,R5
   \   000229   F9           MOV     R1,A
   \   00022A   E8           MOV     A,R0
   \   00022B   24FF         ADD     A,#-0x1
   \   00022D   18           DEC     R0
   \   00022E   E9           MOV     A,R1
   \   00022F   34FF         ADDC    A,#-0x1
   \   000231   F9           MOV     R1,A
   \   000232   7410         MOV     A,#0x10
   \   000234   12....       LCALL   ?XSTACK_DISP0_8
   \   000237   E8           MOV     A,R0
   \   000238   F0           MOVX    @DPTR,A
   \   000239   A3           INC     DPTR
   \   00023A   E9           MOV     A,R1
   \   00023B   F0           MOVX    @DPTR,A
     92              rLine.y0 = GUI_Context.DispPosY = y;
   \   00023C   90....       MOV     DPTR,#GUI_Context + 29
   \   00023F   EE           MOV     A,R6
   \   000240   F0           MOVX    @DPTR,A
   \   000241   A3           INC     DPTR
   \   000242   EF           MOV     A,R7
   \   000243   F0           MOVX    @DPTR,A
   \   000244   740E         MOV     A,#0xe
   \   000246   12....       LCALL   ?XSTACK_DISP0_8
   \   000249   EE           MOV     A,R6
   \   00024A   F0           MOVX    @DPTR,A
   \   00024B   A3           INC     DPTR
   \   00024C   EF           MOV     A,R7
   \   00024D   F0           MOVX    @DPTR,A
     93              rLine.y1 = y + FontYSize-1;
   \   00024E   EE           MOV     A,R6
   \   00024F   25..         ADD     A,?V0 + 6
   \   000251   F8           MOV     R0,A
   \   000252   EF           MOV     A,R7
   \   000253   35..         ADDC    A,?V0 + 7
   \   000255   F9           MOV     R1,A
   \   000256   E8           MOV     A,R0
   \   000257   24FF         ADD     A,#-0x1
   \   000259   18           DEC     R0
   \   00025A   E9           MOV     A,R1
   \   00025B   34FF         ADDC    A,#-0x1
   \   00025D   F9           MOV     R1,A
   \   00025E   7412         MOV     A,#0x12
   \   000260   12....       LCALL   ?XSTACK_DISP0_8
   \   000263   E8           MOV     A,R0
   \   000264   F0           MOVX    @DPTR,A
   \   000265   A3           INC     DPTR
   \   000266   E9           MOV     A,R1
   \   000267   F0           MOVX    @DPTR,A
     94              GUI__DispLine(s, LineLen, &rLine);
   \   000268                ; Setup parameters for call to function GUI__DispLine
   \   000268   740C         MOV     A,#0xc
   \   00026A   12....       LCALL   ?XSTACK_DISP0_8
   \   00026D   8582..       MOV     ?V0 + 2,DPL
   \   000270   8583..       MOV     ?V0 + 3,DPH
   \   000273   78..         MOV     R0,#?V0 + 2
   \   000275   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000278   AC..         MOV     R4,?V0 + 8
   \   00027A   AD..         MOV     R5,?V0 + 9
   \   00027C   7402         MOV     A,#0x2
   \   00027E   12....       LCALL   ?XSTACK_DISP0_8
   \   000281   12....       LCALL   ??Subroutine5_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   000284   12....       LCALL   ??GUI__DispLine?relay
   \   000287   7402         MOV     A,#0x2
   \   000289   12....       LCALL   ?DEALLOC_XSTACK8
     95              s += GUI_UC__NumChars2NumBytes(s, LineLen);
   \   00028C                ; Setup parameters for call to function GUI_UC__NumChars2NumBytes
   \   00028C   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   00028F   12....       LCALL   ??GUI_UC__NumChars2NumBytes?relay
   \   000292   8A..         MOV     ?V0 + 2,R2
   \   000294   8B..         MOV     ?V0 + 3,R3
   \   000296   A8..         MOV     R0,?V0 + 2
   \   000298   A9..         MOV     R1,?V0 + 3
   \   00029A   12....       LCALL   ?Subroutine1 & 0xFFFF
     96              y += GUI_GetFontDistY();
   \                     ??CrossCallReturnLabel_3:
   \   00029D                ; Setup parameters for call to function GUI_GetFontDistY
   \   00029D   12....       LCALL   ??GUI_GetFontDistY?relay
   \   0002A0   8A..         MOV     ?V0 + 2,R2
   \   0002A2   8B..         MOV     ?V0 + 3,R3
   \   0002A4   EE           MOV     A,R6
   \   0002A5   25..         ADD     A,?V0 + 2
   \   0002A7   FE           MOV     R6,A
   \   0002A8   EF           MOV     A,R7
   \   0002A9   35..         ADDC    A,?V0 + 3
   \   0002AB   FF           MOV     R7,A
     97              if (GUI__HandleEOLine(&s))
   \   0002AC                ; Setup parameters for call to function GUI__HandleEOLine
   \   0002AC   85..82       MOV     DPL,?XSP + 0
   \   0002AF   85..83       MOV     DPH,?XSP + 1
   \   0002B2   AA82         MOV     R2,DPL
   \   0002B4   AB83         MOV     R3,DPH
   \   0002B6   12....       LCALL   ??GUI__HandleEOLine?relay
   \   0002B9   8B..         MOV     ?V0 + 3,R3
   \   0002BB   EA           MOV     A,R2
   \   0002BC   45..         ORL     A,?V0 + 3
   \   0002BE   7003         JNZ     $+5
   \   0002C0   02....       LJMP    ??GUI__DispStringInRect_10 & 0xFFFF
     98                break;
     99            }
    100          }
   \                     ??GUI__DispStringInRect_11:
   \   0002C3   7414         MOV     A,#0x14
   \   0002C5   12....       LCALL   ?DEALLOC_XSTACK8
   \   0002C8   7F10         MOV     R7,#0x10
   \   0002CA   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9C           SUBB    A,R4
   \   000003   F8           MOV     R0,A
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   9D           SUBB    A,R5
   \   000007   F9           MOV     R1,A
   \   000008   E8           MOV     A,R0
   \   000009   2401         ADD     A,#0x1
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   85..82       MOV     DPL,?XSP + 0
   \   000003   85..83       MOV     DPH,?XSP + 1
   \   000006   E0           MOVX    A,@DPTR
   \   000007   28           ADD     A,R0
   \   000008   F8           MOV     R0,A
   \   000009   A3           INC     DPTR
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   39           ADDC    A,R1
   \   00000C   F9           MOV     R1,A
   \   00000D   85..82       MOV     DPL,?XSP + 0
   \   000010   85..83       MOV     DPH,?XSP + 1
   \   000013   E8           MOV     A,R0
   \   000014   F0           MOVX    @DPTR,A
   \   000015   A3           INC     DPTR
   \   000016   E9           MOV     A,R1
   \   000017   F0           MOVX    @DPTR,A
   \   000018   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   AC..         MOV     R4,?V0 + 10
   \   000002   AD..         MOV     R5,?V0 + 11
   \   000004   12....       LCALL   ??Subroutine4_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   000007   12....       LCALL   ??GUI__GetLineNumChars?relay
   \   00000A   8A..         MOV     ?V0 + 8,R2
   \   00000C   8B..         MOV     ?V0 + 9,R3
   \   00000E   C3           CLR     C
   \   00000F   E5..         MOV     A,?V0 + 10
   \   000011   95..         SUBB    A,?V0 + 8
   \   000013   F5..         MOV     ?V0 + 10,A
   \   000015   E5..         MOV     A,?V0 + 11
   \   000017   95..         SUBB    A,?V0 + 9
   \   000019   F5..         MOV     ?V0 + 11,A
   \   00001B                ; Setup parameters for call to function GUI_UC__NumChars2NumBytes
   \   00001B                ; Setup parameters for call to function GUI__GetLineDistX
   \   00001B   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   00001E   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   AC..         MOV     R4,?V0 + 8
   \   000002   AD..         MOV     R5,?V0 + 9
   \   000004                REQUIRE ??Subroutine4_0
   \   000004                ; // Fall through to label ??Subroutine4_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine4_0:
   \   000000   85..82       MOV     DPL,?XSP + 0
   \   000003   85..83       MOV     DPH,?XSP + 1
   \   000006                REQUIRE ??Subroutine5_0
   \   000006                ; // Fall through to label ??Subroutine5_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine5_0:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FA           MOV     R2,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FB           MOV     R3,A
   \   000005   22           RET
    101          
    102          /*********************************************************************
    103          *
    104          *       GUI_DispStringInRectMax
    105          */
    106          #if (GUI_WINSUPPORT)
    107          void GUI_DispStringInRectMax(const char GUI_UNI_PTR *s, GUI_RECT* pRect, int TextAlign, int MaxLen) {
    108            if (s) {
    109              const GUI_RECT *pOldClipRect = NULL;
    110              GUI_RECT r;
    111              GUI_LOCK();
    112              if (pRect) {
    113                pOldClipRect = WM_SetUserClipRect(pRect);
    114                if (pOldClipRect) {
    115                  GUI__IntersectRects(&r, pRect, pOldClipRect);
    116                  WM_SetUserClipRect(&r);
    117                }
    118              }
    119              GUI__DispStringInRect(s, pRect, TextAlign, MaxLen);
    120              WM_SetUserClipRect(pOldClipRect);
    121              GUI_UNLOCK();
    122            }
    123          }
    124          
    125          #else
    126          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    127          void GUI_DispStringInRectMax(const char GUI_UNI_PTR *s, GUI_RECT* pRect, int TextAlign, int MaxLen) {
   \                     GUI_DispStringInRectMax:
   \   000000   74EF         MOV     A,#-0x11
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 17
   \   000005                ; Auto size: 16
   \   000005   74F0         MOV     A,#-0x10
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   8A..         MOV     ?V0 + 0,R2
   \   00000C   8B..         MOV     ?V0 + 1,R3
   \   00000E   EC           MOV     A,R4
   \   00000F   FE           MOV     R6,A
   \   000010   ED           MOV     A,R5
   \   000011   FF           MOV     R7,A
   \   000012   7421         MOV     A,#0x21
   \   000014   12....       LCALL   ?XSTACK_DISP0_8
   \   000017   E0           MOVX    A,@DPTR
   \   000018   F5..         MOV     ?V0 + 4,A
   \   00001A   A3           INC     DPTR
   \   00001B   E0           MOVX    A,@DPTR
   \   00001C   F5..         MOV     ?V0 + 5,A
   \   00001E   7423         MOV     A,#0x23
   \   000020   12....       LCALL   ?XSTACK_DISP0_8
   \   000023   E0           MOVX    A,@DPTR
   \   000024   F5..         MOV     ?V0 + 6,A
   \   000026   A3           INC     DPTR
   \   000027   E0           MOVX    A,@DPTR
   \   000028   F5..         MOV     ?V0 + 7,A
    128            GUI_RECT Rect_Old, r;
    129            halIntState_t state;
    130            if (s && pRect) {
   \   00002A   EA           MOV     A,R2
   \   00002B   45..         ORL     A,?V0 + 1
   \   00002D   7003         JNZ     $+5
   \   00002F   02....       LJMP    ??GUI_DispStringInRectMax_0 & 0xFFFF
   \   000032   EE           MOV     A,R6
   \   000033   4F           ORL     A,R7
   \   000034   607E         JZ      ??GUI_DispStringInRectMax_0
    131              GUI_LOCK(state);
   \   000036   E5A8         MOV     A,0xa8
   \   000038   F5..         MOV     ?V0 + 8,A
   \   00003A   C2AF         CLR     0xa8.7
    132              Rect_Old = GUI_Context.ClipRect;
   \   00003C   90....       MOV     DPTR,#GUI_Context + 4
   \   00003F   C082         PUSH    DPL
   \   000041   85..82       MOV     DPL,?XSP + 0
   \   000044   85..83       MOV     DPH,?XSP + 1
   \   000047   AC82         MOV     R4,DPL
   \   000049   AD83         MOV     R5,DPH
   \   00004B   7583..       MOV     DPH,#((GUI_Context + 4) >> 8) & 0xff
   \   00004E   D082         POP     DPL
   \   000050   7408         MOV     A,#0x8
   \   000052   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    133              GUI__IntersectRects(&r, pRect, &Rect_Old);
   \   000055                ; Setup parameters for call to function GUI__IntersectRects
   \   000055   85..82       MOV     DPL,?XSP + 0
   \   000058   85..83       MOV     DPH,?XSP + 1
   \   00005B   8582..       MOV     ?V0 + 2,DPL
   \   00005E   8583..       MOV     ?V0 + 3,DPH
   \   000061   78..         MOV     R0,#?V0 + 2
   \   000063   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000066   EE           MOV     A,R6
   \   000067   FC           MOV     R4,A
   \   000068   EF           MOV     A,R7
   \   000069   FD           MOV     R5,A
   \   00006A   740A         MOV     A,#0xa
   \   00006C   12....       LCALL   ?XSTACK_DISP0_8
   \   00006F   AA82         MOV     R2,DPL
   \   000071   AB83         MOV     R3,DPH
   \   000073   12....       LCALL   ??GUI__IntersectRects?relay
   \   000076   7402         MOV     A,#0x2
   \   000078   12....       LCALL   ?DEALLOC_XSTACK8
    134              LCD_SetClipRectEx(&r);
   \   00007B                ; Setup parameters for call to function LCD_SetClipRectEx
   \   00007B   7408         MOV     A,#0x8
   \   00007D   12....       LCALL   ?XSTACK_DISP0_8
   \   000080   AA82         MOV     R2,DPL
   \   000082   AB83         MOV     R3,DPH
   \   000084   12....       LCALL   ??LCD_SetClipRectEx?relay
    135              GUI__DispStringInRect(s, pRect, TextAlign, MaxLen);
   \   000087                ; Setup parameters for call to function GUI__DispStringInRect
   \   000087   78..         MOV     R0,#?V0 + 6
   \   000089   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00008C   78..         MOV     R0,#?V0 + 4
   \   00008E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000091   EE           MOV     A,R6
   \   000092   FC           MOV     R4,A
   \   000093   EF           MOV     A,R7
   \   000094   FD           MOV     R5,A
   \   000095   AA..         MOV     R2,?V0 + 0
   \   000097   AB..         MOV     R3,?V0 + 1
   \   000099   12....       LCALL   ??GUI__DispStringInRect?relay
   \   00009C   7404         MOV     A,#0x4
   \   00009E   12....       LCALL   ?DEALLOC_XSTACK8
    136              LCD_SetClipRectEx(&Rect_Old);
   \   0000A1                ; Setup parameters for call to function LCD_SetClipRectEx
   \   0000A1   85..82       MOV     DPL,?XSP + 0
   \   0000A4   85..83       MOV     DPH,?XSP + 1
   \   0000A7   AA82         MOV     R2,DPL
   \   0000A9   AB83         MOV     R3,DPH
   \   0000AB   12....       LCALL   ??LCD_SetClipRectEx?relay
    137              GUI_UNLOCK(state);
   \   0000AE   E5..         MOV     A,?V0 + 8
   \   0000B0   A2E7         MOV     C,0xE0 /* A   */.7
   \   0000B2   92AF         MOV     0xa8.7,C
    138            }
    139          }
   \                     ??GUI_DispStringInRectMax_0:
   \   0000B4   7410         MOV     A,#0x10
   \   0000B6   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000B9   7F09         MOV     R7,#0x9
   \   0000BB   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   0000BE                REQUIRE _A_IEN0
    140          #endif
    141          
    142          /*********************************************************************
    143          *
    144          *       GUI_DispStringInRect
    145          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    146          void GUI_DispStringInRect(const char GUI_UNI_PTR *s, GUI_RECT* pRect, int TextAlign) {
   \                     GUI_DispStringInRect:
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   740C         MOV     A,#0xc
   \   000007   12....       LCALL   ?XSTACK_DISP0_8
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F5..         MOV     ?V0 + 0,A
   \   00000D   A3           INC     DPTR
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   F5..         MOV     ?V0 + 1,A
    147            GUI_DispStringInRectMax(s, pRect, TextAlign, 0x7fff);
   \   000011                ; Setup parameters for call to function GUI_DispStringInRectMax
   \   000011   75..FF       MOV     ?V0 + 2,#-0x1
   \   000014   75..7F       MOV     ?V0 + 3,#0x7f
   \   000017   78..         MOV     R0,#?V0 + 2
   \   000019   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00001C   78..         MOV     R0,#?V0 + 0
   \   00001E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000021   12....       LCALL   ??GUI_DispStringInRectMax?relay
   \   000024   7404         MOV     A,#0x4
   \   000026   12....       LCALL   ?DEALLOC_XSTACK8
    148          }
   \   000029   7F04         MOV     R7,#0x4
   \   00002B   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI__DispStringInRect?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI__DispStringInRect

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI_DispStringInRectMax?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI_DispStringInRectMax

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI_DispStringInRect?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI_DispStringInRect
    149          
    150          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     GUI_DispStringInRect               0      0     18
       -> GUI_DispStringInRectMax       0      0     32
     GUI_DispStringInRectMax            2      0     53
       -> GUI__IntersectRects           0      0     70
       -> LCD_SetClipRectEx             0      0     66
       -> GUI__DispStringInRect         0      0     74
       -> LCD_SetClipRectEx             0      0     66
     GUI__DispStringInRect              4      0     83
       -> GUI_GetFontSizeY              0      0     88
       -> GUI_GetClientRect             0      0     88
       -> GUI__GetLineNumChars          0      0     88
       -> GUI_UC__NumChars2NumBytes     0      0     88
       -> GUI__HandleEOLine             0      0     88
       -> GUI__GetLineNumChars          0      0     88
       -> GUI__GetLineDistX             0      0     88
       -> GUI__DispLine                 0      0     92
       -> GUI_UC__NumChars2NumBytes     0      0     88
       -> GUI_GetFontDistY              0      0     88
       -> GUI__HandleEOLine             0      0     88


   Segment part sizes:

     Function/Label                  Bytes
     --------------                  -----
     _A_IEN0                            1
     GUI__DispStringInRect            717
     ?Subroutine2                      12
     ?Subroutine1                      25
     ?Subroutine0                      31
     ?Subroutine3                       4
     ??Subroutine4_0                    6
     ??Subroutine5_0                    6
     GUI_DispStringInRectMax          190
     GUI_DispStringInRect              46
     ??GUI__DispStringInRect?relay      6
     ??GUI_DispStringInRectMax?relay    6
     ??GUI_DispStringInRect?relay       6

 
 1 037 bytes in segment BANKED_CODE
    18 bytes in segment BANK_RELAYS
     1 byte  in segment SFR_AN
 
 1 055 bytes of CODE memory
     0 bytes of DATA memory (+ 1 byte shared)

Errors: none
Warnings: none
