///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        14/Jun/2016  16:18:40 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\C /
//                          ore\GUICirc.c                                     /
//    Command line       =  -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย /
//                          ็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack /
//                          \Utilities\SerialApp\CC2530DB\..\..\..\Tools\CC25 /
//                          30DB\f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func  /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8        /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)   /
//                          -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย /
//                          ็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack /
//                          \Utilities\SerialApp\CC2530DB\..\..\..\Tools\CC25 /
//                          30DB\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0        /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0x1001                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘น /
//                          โลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2. /
//                          5.1a\Components\uCGUI\Core\GUICirc.c -D           /
//                          HAL_UART=TRUE -D SERIAL_APP_PORT=0 -D COOR -D     /
//                          LCD_SUPPORTED -D NV_INIT -lC                      /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\CoordinatorEB\List\    /
//                          -lA F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ /
//                          ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstac /
//                          k\Utilities\SerialApp\CC2530DB\CoordinatorEB\List /
//                          \ --diag_suppress Pe001,Pa010 -o                  /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\CoordinatorEB\Obj\ -e  /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\ -I                    /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\Public\ -I          /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\uCGUI\Core\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื /
//                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a /
//                          \Projects\zstack\Utilities\SerialApp\CC2530DB\..\ /
//                          ..\..\..\..\Components\uCGUI\MultiLayer\ -I       /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\uCGUI\Config\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโล /
//                          ฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5. /
//                          1a\Projects\zstack\Utilities\SerialApp\CC2530DB\. /
//                          .\Coordinator\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืส /
//                          มฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ /
//                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\. /
//                          .\..\ZMain\TI2530DB\ -I                           /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\hal\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬ /
//                          ืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Utilities\SerialApp\CC2530DB\.. /
//                          \..\..\..\..\Components\hal\target\CC2530EB\ -I   /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mac\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬ /
//                          ืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Utilities\SerialApp\CC2530DB\.. /
//                          \..\..\..\..\Components\mac\high_level\ -I        /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mac\low_level\srf04\ -I                       /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mac\low_level\srf04\single_chip\ -I           /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mt\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Z /
//                          igBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Project /
//                          s\zstack\Utilities\SerialApp\CC2530DB\..\..\..\.. /
//                          \..\Components\osal\include\ -I                   /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\services\saddr\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘น /
//                          โลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2. /
//                          5.1a\Projects\zstack\Utilities\SerialApp\CC2530DB /
//                          \..\..\..\..\..\Components\services\sdata\ -I     /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\stack\af\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสม /
//                          ฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\P /
//                          rojects\zstack\Utilities\SerialApp\CC2530DB\..\.. /
//                          \..\..\..\Components\stack\nwk\ -I                /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\stack\sapi\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื /
//                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a /
//                          \Projects\zstack\Utilities\SerialApp\CC2530DB\..\ /
//                          ..\..\..\..\Components\stack\sec\ -I              /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\stack\sys\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืส /
//                          มฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ /
//                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\. /
//                          .\..\..\..\Components\stack\zdo\ -I               /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\zmac\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210 /
//                          \ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje /
//                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ /
//                          ..\..\Components\zmac\f8w\ -Ohz                   /
//                          --require_prototypes                              /
//    List file          =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\CoordinatorEB\List\GUI /
//                          Circ.s51                                          /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME GUICirc

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_ADD
        EXTERN ?L_ADD_TO_X
        EXTERN ?L_ADD_X
        EXTERN ?L_DIV_MOD
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?L_MUL
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?SL_GT
        EXTERN ?SL_GT_X
        EXTERN ?S_DIV_MOD
        EXTERN ?UL_SHR
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8

        FUNCTION ??Draw8Point?relay,0203H
        PUBLIC ??GL_DrawCircle?relay
        FUNCTION ??GL_DrawCircle?relay,0203H
        PUBLIC ??GL_DrawEllipse?relay
        FUNCTION ??GL_DrawEllipse?relay,0203H
        PUBLIC ??GL_FillCircle?relay
        FUNCTION ??GL_FillCircle?relay,0203H
        PUBLIC ??GL_FillEllipse?relay
        FUNCTION ??GL_FillEllipse?relay,0203H
        PUBLIC ??GUI_DrawCircle?relay
        FUNCTION ??GUI_DrawCircle?relay,0203H
        PUBLIC ??GUI_DrawEllipse?relay
        FUNCTION ??GUI_DrawEllipse?relay,0203H
        PUBLIC ??GUI_FillCircle?relay
        FUNCTION ??GUI_FillCircle?relay,0203H
        PUBLIC ??GUI_FillEllipse?relay
        FUNCTION ??GUI_FillEllipse?relay,0203H
        FUNCTION Draw8Point,021203H
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        PUBLIC GL_DrawCircle
        FUNCTION GL_DrawCircle,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 4, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC GL_DrawEllipse
        FUNCTION GL_DrawEllipse,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 38, STACK
        PUBLIC GL_FillCircle
        FUNCTION GL_FillCircle,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 36, STACK
        PUBLIC GL_FillEllipse
        FUNCTION GL_FillEllipse,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 34, STACK
        PUBLIC GUI_DrawCircle
        FUNCTION GUI_DrawCircle,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC GUI_DrawEllipse
        FUNCTION GUI_DrawEllipse,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC GUI_FillCircle
        FUNCTION GUI_FillCircle,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC GUI_FillEllipse
        FUNCTION GUI_FillEllipse,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBWEAK _A_IEN0
        PUBWEAK __Constant_1
        PUBWEAK __Constant_2c3
        PUBWEAK __Constant_3e8
        PUBWEAK __Constant_ffffffff
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
LCD_DrawPixel       SYMBOL "LCD_DrawPixel"
LCD_DrawHLine       SYMBOL "LCD_DrawHLine"
GL_DrawLine1        SYMBOL "GL_DrawLine1"
??GL_DrawLine1?relay SYMBOL "?relay", GL_DrawLine1
??LCD_DrawHLine?relay SYMBOL "?relay", LCD_DrawHLine
??LCD_DrawPixel?relay SYMBOL "?relay", LCD_DrawPixel
GL_DrawCircle       SYMBOL "GL_DrawCircle"
??GL_DrawCircle?relay SYMBOL "?relay", GL_DrawCircle
GL_DrawEllipse      SYMBOL "GL_DrawEllipse"
??GL_DrawEllipse?relay SYMBOL "?relay", GL_DrawEllipse
GL_FillCircle       SYMBOL "GL_FillCircle"
??GL_FillCircle?relay SYMBOL "?relay", GL_FillCircle
GL_FillEllipse      SYMBOL "GL_FillEllipse"
??GL_FillEllipse?relay SYMBOL "?relay", GL_FillEllipse
GUI_DrawCircle      SYMBOL "GUI_DrawCircle"
??GUI_DrawCircle?relay SYMBOL "?relay", GUI_DrawCircle
GUI_DrawEllipse     SYMBOL "GUI_DrawEllipse"
??GUI_DrawEllipse?relay SYMBOL "?relay", GUI_DrawEllipse
GUI_FillCircle      SYMBOL "GUI_FillCircle"
??GUI_FillCircle?relay SYMBOL "?relay", GUI_FillCircle
GUI_FillEllipse     SYMBOL "GUI_FillEllipse"
??GUI_FillEllipse?relay SYMBOL "?relay", GUI_FillEllipse

        EXTERN LCD_DrawPixel
        FUNCTION LCD_DrawPixel,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN LCD_DrawHLine
        FUNCTION LCD_DrawHLine,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN GL_DrawLine1
        FUNCTION GL_DrawLine1,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??GL_DrawLine1?relay
        FUNCTION ??GL_DrawLine1?relay,00H
        EXTERN ??LCD_DrawHLine?relay
        FUNCTION ??LCD_DrawHLine?relay,00H
        EXTERN ??LCD_DrawPixel?relay
        FUNCTION ??LCD_DrawPixel?relay,00H

// F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Core\GUICirc.c
//    1 /*
//    2 *********************************************************************************************************
//    3 *                                                uC/GUI
//    4 *                        Universal graphic software for embedded applications
//    5 *
//    6 *                       (c) Copyright 2002, Micrium Inc., Weston, FL
//    7 *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
//    8 *
//    9 *              ตC/GUI is protected by international copyright laws. Knowledge of the
//   10 *              source code may not be used to write a similar product. This file may
//   11 *              only be used in accordance with a license and should not be redistributed
//   12 *              in any way. We appreciate your understanding and fairness.
//   13 *
//   14 ----------------------------------------------------------------------
//   15 File        : GUICirc.C
//   16 Purpose     : Circle and ellipse drawing functions
//   17 ----------------------------------------------------------------------
//   18 Version-Date---Author-Explanation
//   19 ----------------------------------------------------------------------
//   20 1.00.02 011115 JE     a) GL_FillEllipse, GL_FillCircle, GL_DrawCircle changed
//   21 1.00.01 011113 JE     a) GL_DrawEllipse changed
//   22 1.00.00 991206 RS     First release
//   23 ----------------------------------------------------------------------
//   24 Known problems or limitations with current version
//   25 ----------------------------------------------------------------------
//   26 None.
//   27 ----------------------------------------------------------------------
//   28 Open issues
//   29 ----------------------------------------------------------------------
//   30 None
//   31 ---------------------------END-OF-HEADER------------------------------
//   32 */
//   33 
//   34 #include <stddef.h>           /* needed for definition of NULL */
//   35 #include "GUI_Private.h"

        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DATA8
        DS 1
//   36 
//   37 /*********************************************************************
//   38 *
//   39 *       Static code
//   40 *
//   41 **********************************************************************
//   42 */
//   43 /*********************************************************************
//   44 *
//   45 *       Draw8Point
//   46 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   47 static void Draw8Point(int x0,int y0, int xoff, int yoff) {
Draw8Point:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function Draw8Point
        CODE
        FUNCALL Draw8Point, LCD_DrawPixel
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Draw8Point, LCD_DrawPixel
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Draw8Point, LCD_DrawPixel
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Draw8Point, LCD_DrawPixel
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Draw8Point, LCD_DrawPixel
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Draw8Point, LCD_DrawPixel
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Draw8Point, LCD_DrawPixel
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Draw8Point, LCD_DrawPixel
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
//   48   LCD_HL_DrawPixel(x0+xoff,y0+yoff);
        MOV     A,R4
        ADD     A,?V0 + 6
        MOV     ?V0 + 4,A
        MOV     A,R5
        ADDC    A,?V0 + 7
        MOV     ?V0 + 5,A
        ; Setup parameters for call to function LCD_DrawPixel
        MOV     R4,?V0 + 4
        MOV     R5,A
        MOV     A,R2
        ADD     A,R6
        MOV     R2,A
        MOV     A,R3
        LCALL   ?Subroutine21 & 0xFFFF
//   49   LCD_HL_DrawPixel(x0-xoff,y0+yoff);
//   50   LCD_HL_DrawPixel(x0+yoff,y0+xoff);
??CrossCallReturnLabel_34:
        ADD     A,?V0 + 6
        MOV     ?V0 + 4,A
        MOV     A,?V0 + 3
        ADDC    A,?V0 + 7
        MOV     ?V0 + 5,A
        ; Setup parameters for call to function LCD_DrawPixel
        MOV     A,?V0 + 0
        ADD     A,R6
        MOV     R4,A
        MOV     A,?V0 + 1
        ADDC    A,R7
        MOV     R5,A
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ?Subroutine22 & 0xFFFF
//   51   LCD_HL_DrawPixel(x0+yoff,y0-xoff);
??CrossCallReturnLabel_36:
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??LCD_DrawPixel?relay
//   52   if (yoff) {
        MOV     A,?V0 + 6
        ORL     A,?V0 + 7
        JZ      ??Draw8Point_0
//   53     LCD_HL_DrawPixel(x0+xoff,y0-yoff);
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,?V0 + 6
        MOV     ?V0 + 4,A
        MOV     A,?V0 + 1
        SUBB    A,?V0 + 7
        MOV     ?V0 + 5,A
        ; Setup parameters for call to function LCD_DrawPixel
        MOV     R4,?V0 + 4
        MOV     R5,A
        MOV     A,?V0 + 2
        ADD     A,R6
        MOV     R2,A
        MOV     A,?V0 + 3
        LCALL   ?Subroutine21 & 0xFFFF
//   54     LCD_HL_DrawPixel(x0-xoff,y0-yoff);
//   55     LCD_HL_DrawPixel(x0-yoff,y0+xoff);
//   56     LCD_HL_DrawPixel(x0-yoff,y0-xoff);
//   57   }
??CrossCallReturnLabel_35:
        CLR     C
        SUBB    A,?V0 + 6
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 3
        SUBB    A,?V0 + 7
        MOV     ?V0 + 3,A
        ; Setup parameters for call to function LCD_DrawPixel
        MOV     A,?V0 + 0
        ADD     A,R6
        MOV     R4,A
        MOV     A,?V0 + 1
        ADDC    A,R7
        MOV     R5,A
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_37:
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??LCD_DrawPixel?relay
//   58 }
??Draw8Point_0:
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
        CFI Block cfiCond1 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_36
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond2 Using cfiCommon0
        CFI (cfiCond2) NoFunction
        CFI (cfiCond2) Conditional ??CrossCallReturnLabel_37
        CFI (cfiCond2) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond2) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond2) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond2) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond2) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond2) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond2) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond2) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond2) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond2) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond2) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond2) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond2) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond2) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond2) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond2) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond2) CFA_SP SP+0
        CFI (cfiCond2) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker3 Using cfiCommon1
        CFI (cfiPicker3) NoFunction
        CFI (cfiPicker3) Picker
        LCALL   ??LCD_DrawPixel?relay
        ; Setup parameters for call to function LCD_DrawPixel
        ; Setup parameters for call to function LCD_DrawPixel
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,R6
        MOV     R4,A
        MOV     A,?V0 + 1
        SUBB    A,R7
        MOV     R5,A
        RET
        CFI EndBlock cfiCond1
        CFI EndBlock cfiCond2
        CFI EndBlock cfiPicker3

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
        CFI Block cfiCond4 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_34
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond5 Using cfiCommon0
        CFI (cfiCond5) NoFunction
        CFI (cfiCond5) Conditional ??CrossCallReturnLabel_35
        CFI (cfiCond5) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond5) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond5) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond5) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond5) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond5) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond5) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond5) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond5) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond5) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond5) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond5) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond5) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond5) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond5) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond5) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond5) CFA_SP SP+0
        CFI (cfiCond5) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker6 Using cfiCommon1
        CFI (cfiPicker6) NoFunction
        CFI (cfiPicker6) Picker
        ADDC    A,R7
        MOV     R3,A
        LCALL   ??LCD_DrawPixel?relay
        ; Setup parameters for call to function LCD_DrawPixel
        ; Setup parameters for call to function LCD_DrawPixel
        MOV     R4,?V0 + 4
        MOV     R5,?V0 + 5
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R6
        MOV     R2,A
        MOV     A,?V0 + 3
        SUBB    A,R7
        MOV     R3,A
        LCALL   ??LCD_DrawPixel?relay
        MOV     A,?V0 + 2
        RET
        CFI EndBlock cfiCond4
        CFI EndBlock cfiCond5
        CFI EndBlock cfiPicker6
//   59 
//   60 /*********************************************************************
//   61 *
//   62 *       Public code, circle
//   63 *
//   64 **********************************************************************
//   65 */
//   66 /*********************************************************************
//   67 *
//   68 *       GL_DrawCircle
//   69 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   70 void GL_DrawCircle(int x0, int y0, int r) {
GL_DrawCircle:
        CFI Block cfiBlock7 Using cfiCommon0
        CFI Function GL_DrawCircle
        CODE
        FUNCALL GL_DrawCircle, Draw8Point
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_DrawCircle, Draw8Point
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_DrawCircle, Draw8Point
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 8
        MOV     A,#-0x8
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
//   71   I32 i;
//   72   int imax = ((I32)((I32)r*707))/1000+1;
        MOV     ?V0 + 4,R4
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_38:
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     DPTR,#__Constant_2c3
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?L_MUL
        MOV     DPTR,#__Constant_3e8
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?L_DIV_MOD
        MOV     A,?V0 + 0
        ADD     A,#0x1
        MOV     R6,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R7,A
//   73   I32 sqmax = (I32)r*(I32)r+(I32)r/2;
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,?V0 + 7
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?L_MUL
        MOV     A,R4
        MOV     R0,A
        MOV     A,R5
        MOV     R1,A
        MOV     R2,#0x2
        MOV     R3,#0x0
        LCALL   ?S_DIV_MOD
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_42:
        LCALL   ?L_ADD
//   74   I32 y=r;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_TO_X
//   75   Draw8Point(x0,y0,r,0);
        ; Setup parameters for call to function Draw8Point
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V0 + 4,R4
        MOV     ?V0 + 5,R5
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_25:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine8 & 0xFFFF
??CrossCallReturnLabel_8:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 32)
//   76   for (i=1; i<= imax; i++) {
        MOV     DPTR,#__Constant_1
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        LJMP    ??GL_DrawCircle_0 & 0xFFFF
//   77     if ((i*i+y*y) >sqmax) {
??GL_DrawCircle_1:
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 9,?V0 + 5
        MOV     ?V0 + 10,?V0 + 6
        MOV     ?V0 + 11,?V0 + 7
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 4
        LCALL   ?L_MUL
        PUSH    ?V0 + 8
        CFI CFA_SP SP+-1
        PUSH    ?V0 + 9
        CFI CFA_SP SP+-2
        PUSH    ?V0 + 10
        CFI CFA_SP SP+-3
        PUSH    ?V0 + 11
        CFI CFA_SP SP+-4
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 12
        LCALL   ?L_MOV_X
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 12
        MOV     R1,#?V0 + 8
        LCALL   ?L_MUL
        POP     ?V0 + 11
        CFI CFA_SP SP+-3
        POP     ?V0 + 10
        CFI CFA_SP SP+-2
        POP     ?V0 + 9
        CFI CFA_SP SP+-1
        POP     ?V0 + 8
        CFI CFA_SP SP+0
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 12
        LCALL   ?L_ADD
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?SL_GT
        JNC     ??GL_DrawCircle_2
//   78       Draw8Point(x0,y0,i,y);
        ; Setup parameters for call to function Draw8Point
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 9,?V0 + 5
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_26:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine8 & 0xFFFF
??CrossCallReturnLabel_9:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 32)
//   79       y--;
        MOV     DPTR,#__Constant_ffffffff
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 8
        LCALL   ?L_ADD_TO_X
//   80     }
//   81     Draw8Point(x0,y0,i,y);
??GL_DrawCircle_2:
        ; Setup parameters for call to function Draw8Point
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 9,?V0 + 5
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine17 & 0xFFFF
//   82   }
??CrossCallReturnLabel_27:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine8 & 0xFFFF
??CrossCallReturnLabel_10:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 32)
        MOV     DPTR,#__Constant_1
        MOV     R0,#?V0 + 4
        LCALL   ?L_ADD_X
??GL_DrawCircle_0:
        MOV     ?V0 + 8,R6
        MOV     A,R7
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_44:
        LCALL   ?SL_GT
        JC      $+5
        LJMP    ??GL_DrawCircle_1 & 0xFFFF
//   83 }
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock7

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
        CFI Block cfiCond8 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_25
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond9 Using cfiCommon0
        CFI (cfiCond9) NoFunction
        CFI (cfiCond9) Conditional ??CrossCallReturnLabel_26
        CFI (cfiCond9) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond9) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond9) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond9) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond9) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond9) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond9) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond9) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond9) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond9) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond9) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond9) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond9) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond9) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond9) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond9) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond9) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond9) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond9) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond9) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond9) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond9) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond9) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond9) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond9) CFA_SP SP+0
        CFI (cfiCond9) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond10 Using cfiCommon0
        CFI (cfiCond10) NoFunction
        CFI (cfiCond10) Conditional ??CrossCallReturnLabel_27
        CFI (cfiCond10) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond10) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond10) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond10) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond10) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond10) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond10) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond10) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond10) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond10) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond10) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond10) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond10) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond10) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond10) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond10) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond10) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond10) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond10) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond10) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond10) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond10) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond10) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond10) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond10) CFA_SP SP+0
        CFI (cfiCond10) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiPicker11 Using cfiCommon1
        CFI (cfiPicker11) NoFunction
        CFI (cfiPicker11) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,#0x6
        RET
        CFI EndBlock cfiCond8
        CFI EndBlock cfiCond9
        CFI EndBlock cfiCond10
        CFI EndBlock cfiPicker11

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
        CFI Block cfiCond12 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_8
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond13 Using cfiCommon0
        CFI (cfiCond13) NoFunction
        CFI (cfiCond13) Conditional ??CrossCallReturnLabel_9
        CFI (cfiCond13) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond13) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond13) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond13) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond13) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond13) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond13) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond13) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond13) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond13) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond13) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond13) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond13) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond13) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond13) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond13) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond13) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond13) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond13) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond13) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond13) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond13) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond13) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond13) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond13) CFA_SP SP+0
        CFI (cfiCond13) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond14 Using cfiCommon0
        CFI (cfiCond14) NoFunction
        CFI (cfiCond14) Conditional ??CrossCallReturnLabel_10
        CFI (cfiCond14) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond14) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond14) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond14) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond14) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond14) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond14) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond14) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond14) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond14) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond14) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond14) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond14) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond14) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond14) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond14) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond14) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond14) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond14) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond14) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond14) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond14) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond14) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond14) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond14) CFA_SP SP+0
        CFI (cfiCond14) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiPicker15 Using cfiCommon1
        CFI (cfiPicker15) NoFunction
        CFI (cfiPicker15) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??Draw8Point?relay
        MOV     A,#0x4
        RET
        CFI EndBlock cfiCond12
        CFI EndBlock cfiCond13
        CFI EndBlock cfiCond14
        CFI EndBlock cfiPicker15
//   84 
//   85 /*********************************************************************
//   86 *
//   87 *       GUI_DrawCircle
//   88 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   89 void GUI_DrawCircle(int x0, int y0, int r) {
GUI_DrawCircle:
        CFI Block cfiBlock16 Using cfiCommon0
        CFI Function GUI_DrawCircle
        CODE
        FUNCALL GUI_DrawCircle, GL_DrawCircle
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
//   90   #if (GUI_WINSUPPORT)
//   91     GUI_RECT Rect;
//   92   #endif
//   93   halIntState_t state;  
//   94   GUI_LOCK(state);
//   95   #if (GUI_WINSUPPORT)
//   96     WM_ADDORG(x0,y0);
//   97     Rect.x0 = x0-r;
//   98     Rect.x1 = x0+r;
//   99     Rect.y0 = y0-r;
//  100     Rect.y1 = y0+r;
//  101     WM_ITERATE_START(&Rect); {
//  102   #endif
//  103     GL_DrawCircle( x0, y0, r);
??CrossCallReturnLabel_13:
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        LCALL   ??GL_DrawCircle?relay
        CFI EndBlock cfiBlock16
        REQUIRE ?Subroutine1
        REQUIRE _A_IEN0
        ; // Fall through to label ?Subroutine1

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock17 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  104   #if (GUI_WINSUPPORT)
//  105     } WM_ITERATE_END();
//  106   #endif
//  107   GUI_UNLOCK(state);
        MOV     A,R6
        MOV     C,0xE0 /* A   */.7
        MOV     0xa8.7,C
//  108 }
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock17
//  109 
//  110 /*********************************************************************
//  111 *
//  112 *       GL_FillCircle
//  113 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  114 void GL_FillCircle(int x0, int y0, int r) {
GL_FillCircle:
        CFI Block cfiBlock18 Using cfiCommon0
        CFI Function GL_FillCircle
        CODE
        FUNCALL GL_FillCircle, LCD_DrawHLine
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_FillCircle, LCD_DrawHLine
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_FillCircle, LCD_DrawHLine
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_FillCircle, LCD_DrawHLine
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_FillCircle, LCD_DrawHLine
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_47:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
//  115   I32 i;
//  116   int imax = ((I32)((I32)r*707))/1000+1;
        MOV     ?V0 + 4,R6
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_39:
        MOV     ?V0 + 0,R6
        MOV     ?V0 + 1,R7
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     DPTR,#__Constant_2c3
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?L_MUL
        MOV     DPTR,#__Constant_3e8
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?L_DIV_MOD
        MOV     A,?V0 + 0
        ADD     A,#0x1
        MOV     R0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
//  117   I32 sqmax = (I32)r*(I32)r+(I32)r/2;
        MOV     ?V0 + 0,R6
        MOV     ?V0 + 1,R7
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,?V0 + 7
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?L_MUL
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        MOV     R1,A
        MOV     R2,#0x2
        MOV     R3,#0x0
        LCALL   ?S_DIV_MOD
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_43:
        LCALL   ?L_ADD
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
//  118   I32 x=r;
        MOV     ?V0 + 0,R6
        MOV     ?V0 + 1,R7
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,?V0 + 7
//  119   LCD_HL_DrawHLine(x0-r,y0,x0+r);
        ; Setup parameters for call to function LCD_DrawHLine
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,R6
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R7
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R6
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R7
        LCALL   ??Subroutine35_0 & 0xFFFF
??CrossCallReturnLabel_67:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
//  120   for (i=1; i<= imax; i++) {
        MOV     DPTR,#__Constant_1
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        LJMP    ??GL_FillCircle_0 & 0xFFFF
//  121     if ((i*i+x*x) >sqmax) {
??GL_FillCircle_1:
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 12,?V0 + 4
        MOV     ?V0 + 13,?V0 + 5
        MOV     ?V0 + 14,?V0 + 6
        MOV     ?V0 + 15,?V0 + 7
        MOV     R0,#?V0 + 12
        MOV     R1,#?V0 + 4
        LCALL   ?L_MUL
        MOV     ?V0 + 8,?V0 + 0
        MOV     ?V0 + 9,?V0 + 1
        MOV     ?V0 + 10,?V0 + 2
        MOV     ?V0 + 11,?V0 + 3
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?L_MUL
        MOV     R0,#?V0 + 12
        MOV     R1,#?V0 + 8
        LCALL   ?L_ADD
        MOV     R0,#?V0 + 12
        LCALL   ?SL_GT_X
        JNC     ??GL_FillCircle_2
//  122       /* draw lines from outside */
//  123       if (x>imax) {
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_15:
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?SL_GT
        JNC     ??GL_FillCircle_3
//  124         LCD_HL_DrawHLine (x0-i+1,y0+x, x0+i-1);
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 9,?V0 + 5
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V0 + 8
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,?V0 + 9
        MOV     R1,A
        MOV     A,R0
        ADD     A,#0x1
        MOV     R6,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R7,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,?V0 + 8
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,?V0 + 9
        MOV     R1,A
        MOV     A,R0
        ADD     A,#-0x1
        MOV     ?V0 + 10,A
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     ?V0 + 11,A
        ; Setup parameters for call to function LCD_DrawHLine
        MOV     R0,#?V0 + 10
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 8,?V0 + 0
        MOV     ?V0 + 9,?V0 + 1
        LCALL   ?Subroutine7 & 0xFFFF
??CrossCallReturnLabel_6:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
//  125         LCD_HL_DrawHLine (x0-i+1,y0-x, x0+i-1);
        ; Setup parameters for call to function LCD_DrawHLine
        MOV     R0,#?V0 + 10
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine6 & 0xFFFF
//  126       }
??CrossCallReturnLabel_4:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
//  127       x--;
??GL_FillCircle_3:
        MOV     DPTR,#__Constant_ffffffff
        MOV     R0,#?V0 + 0
        LCALL   ?L_ADD_X
//  128     }
//  129     /* draw lines from inside (center) */
//  130     LCD_HL_DrawHLine(x0-x,y0+i, x0+x);
??GL_FillCircle_2:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 8,?V0 + 0
        MOV     ?V0 + 9,?V0 + 1
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V0 + 8
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,?V0 + 9
        MOV     R7,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,?V0 + 8
        MOV     ?V0 + 10,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,?V0 + 9
        MOV     ?V0 + 11,A
        ; Setup parameters for call to function LCD_DrawHLine
        MOV     R0,#?V0 + 10
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 9,?V0 + 5
        LCALL   ?Subroutine7 & 0xFFFF
??CrossCallReturnLabel_7:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
//  131     LCD_HL_DrawHLine(x0-x,y0-i, x0+x);
        ; Setup parameters for call to function LCD_DrawHLine
        MOV     R0,#?V0 + 10
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine6 & 0xFFFF
//  132   }
??CrossCallReturnLabel_5:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     DPTR,#__Constant_1
        MOV     R0,#?V0 + 4
        LCALL   ?L_ADD_X
??GL_FillCircle_0:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_16:
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 8
        LCALL   ?SL_GT
        JC      $+5
        LJMP    ??GL_FillCircle_1 & 0xFFFF
        CFI EndBlock cfiBlock18
//  133 }
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
        CFI Block cfiBlock19 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0xa
        SJMP    ??Subroutine36_0
        CFI EndBlock cfiBlock19

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
        CFI Block cfiCond20 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_42
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond21 Using cfiCommon0
        CFI (cfiCond21) NoFunction
        CFI (cfiCond21) Conditional ??CrossCallReturnLabel_43
        CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond21) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond21) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond21) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond21) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond21) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond21) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond21) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond21) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond21) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond21) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond21) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond21) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond21) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond21) CFA_SP SP+0
        CFI (cfiCond21) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker22 Using cfiCommon1
        CFI (cfiPicker22) NoFunction
        CFI (cfiPicker22) Picker
        MOV     ?V0 + 8,R0
        MOV     A,R1
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_62:
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        RET
        CFI EndBlock cfiCond20
        CFI EndBlock cfiCond21
        CFI EndBlock cfiPicker22

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
        CFI Block cfiCond23 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_15
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond24 Using cfiCommon0
        CFI (cfiCond24) NoFunction
        CFI (cfiCond24) Conditional ??CrossCallReturnLabel_16
        CFI (cfiCond24) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond24) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond24) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond24) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond24) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond24) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond24) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond24) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond24) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond24) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond24) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond24) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond24) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond24) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond24) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond24) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond24) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond24) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond24) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond24) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond24) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond24) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond24) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond24) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond24) CFA_SP SP+0
        CFI (cfiCond24) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker25 Using cfiCommon1
        CFI (cfiPicker25) NoFunction
        CFI (cfiPicker25) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 8,A
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_61:
        RET
        CFI EndBlock cfiCond23
        CFI EndBlock cfiCond24
        CFI EndBlock cfiPicker25

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
        CFI Block cfiCond26 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_6
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond27 Using cfiCommon0
        CFI (cfiCond27) NoFunction
        CFI (cfiCond27) Conditional ??CrossCallReturnLabel_7
        CFI (cfiCond27) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond27) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond27) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond27) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond27) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond27) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond27) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond27) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond27) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond27) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond27) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond27) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond27) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond27) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond27) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond27) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond27) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond27) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond27) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond27) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond27) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond27) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond27) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond27) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond27) CFA_SP SP+0
        CFI (cfiCond27) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiPicker28 Using cfiCommon1
        CFI (cfiPicker28) NoFunction
        CFI (cfiPicker28) Picker
        MOVX    A,@DPTR
        ADD     A,?V0 + 8
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,?V0 + 9
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_65:
        RET
        CFI EndBlock cfiCond26
        CFI EndBlock cfiCond27
        CFI EndBlock cfiPicker28

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
        CFI Block cfiCond29 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_4
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond30 Using cfiCommon0
        CFI (cfiCond30) NoFunction
        CFI (cfiCond30) Conditional ??CrossCallReturnLabel_5
        CFI (cfiCond30) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond30) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond30) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond30) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond30) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond30) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond30) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond30) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond30) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond30) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond30) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond30) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond30) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond30) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond30) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond30) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond30) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond30) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond30) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond30) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond30) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond30) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond30) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond30) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond30) CFA_SP SP+0
        CFI (cfiCond30) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiPicker31 Using cfiCommon1
        CFI (cfiPicker31) NoFunction
        CFI (cfiPicker31) Picker
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V0 + 8
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,?V0 + 9
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_66:
        RET
        CFI EndBlock cfiCond29
        CFI EndBlock cfiCond30
        CFI EndBlock cfiPicker31

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
        CFI Block cfiCond32 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_65, ??CrossCallReturnLabel_6
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond33 Using cfiCommon0
        CFI (cfiCond33) NoFunction
        CFI (cfiCond33) Conditional ??CrossCallReturnLabel_65, ??CrossCallReturnLabel_7
        CFI (cfiCond33) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond33) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond33) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond33) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond33) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond33) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond33) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond33) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond33) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond33) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond33) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond33) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond33) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond33) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond33) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond33) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond33) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond33) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond33) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond33) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond33) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond33) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond33) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond33) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond33) CFA_SP SP+0
        CFI (cfiCond33) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond34 Using cfiCommon0
        CFI (cfiCond34) NoFunction
        CFI (cfiCond34) Conditional ??CrossCallReturnLabel_66, ??CrossCallReturnLabel_4
        CFI (cfiCond34) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond34) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond34) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond34) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond34) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond34) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond34) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond34) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond34) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond34) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond34) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond34) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond34) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond34) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond34) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond34) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond34) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond34) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond34) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond34) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond34) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond34) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond34) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond34) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond34) CFA_SP SP+0
        CFI (cfiCond34) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond35 Using cfiCommon0
        CFI (cfiCond35) NoFunction
        CFI (cfiCond35) Conditional ??CrossCallReturnLabel_66, ??CrossCallReturnLabel_5
        CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond35) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond35) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond35) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond35) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond35) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond35) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond35) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond35) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond35) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond35) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond35) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond35) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond35) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond35) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond35) CFA_SP SP+0
        CFI (cfiCond35) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiPicker36 Using cfiCommon1
        CFI (cfiPicker36) NoFunction
        CFI (cfiPicker36) Picker
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        CFI EndBlock cfiCond32
        CFI EndBlock cfiCond33
        CFI EndBlock cfiCond34
        CFI EndBlock cfiCond35
        CFI EndBlock cfiPicker36
        REQUIRE ??Subroutine35_0
        ; // Fall through to label ??Subroutine35_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine35_0:
        CFI Block cfiCond37 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_67
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond38 Using cfiCommon0
        CFI (cfiCond38) NoFunction
        CFI (cfiCond38) Conditional ??CrossCallReturnLabel_68, ??CrossCallReturnLabel_21
        CFI (cfiCond38) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond38) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond38) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond38) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond38) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond38) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond38) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond38) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond38) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond38) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond38) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond38) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond38) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond38) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond38) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond38) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond38) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond38) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond38) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond38) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond38) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond38) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond38) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond38) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond38) CFA_SP SP+0
        CFI (cfiCond38) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond39 Using cfiCommon0
        CFI (cfiCond39) NoFunction
        CFI (cfiCond39) Conditional ??CrossCallReturnLabel_68, ??CrossCallReturnLabel_22
        CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond39) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond39) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond39) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond39) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond39) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond39) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond39) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond39) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond39) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond39) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond39) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond39) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond39) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond39) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond39) CFA_SP SP+0
        CFI (cfiCond39) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond40 Using cfiCommon0
        CFI (cfiCond40) NoFunction
        CFI (cfiCond40) Conditional ??CrossCallReturnLabel_65, ??CrossCallReturnLabel_6
        CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond40) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond40) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond40) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond40) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond40) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond40) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond40) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond40) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond40) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond40) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond40) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond40) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond40) CFA_SP SP+0
        CFI (cfiCond40) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond41 Using cfiCommon0
        CFI (cfiCond41) NoFunction
        CFI (cfiCond41) Conditional ??CrossCallReturnLabel_65, ??CrossCallReturnLabel_7
        CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond41) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond41) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond41) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond41) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond41) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond41) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond41) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond41) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond41) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond41) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond41) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond41) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond41) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond41) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond41) CFA_SP SP+0
        CFI (cfiCond41) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond42 Using cfiCommon0
        CFI (cfiCond42) NoFunction
        CFI (cfiCond42) Conditional ??CrossCallReturnLabel_66, ??CrossCallReturnLabel_4
        CFI (cfiCond42) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond42) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond42) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond42) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond42) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond42) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond42) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond42) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond42) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond42) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond42) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond42) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond42) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond42) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond42) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond42) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond42) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond42) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond42) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond42) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond42) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond42) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond42) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond42) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond42) CFA_SP SP+0
        CFI (cfiCond42) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond43 Using cfiCommon0
        CFI (cfiCond43) NoFunction
        CFI (cfiCond43) Conditional ??CrossCallReturnLabel_66, ??CrossCallReturnLabel_5
        CFI (cfiCond43) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond43) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond43) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond43) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond43) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond43) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond43) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond43) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond43) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond43) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond43) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond43) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond43) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond43) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond43) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond43) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond43) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond43) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond43) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond43) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond43) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond43) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond43) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond43) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond43) CFA_SP SP+0
        CFI (cfiCond43) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiPicker44 Using cfiCommon1
        CFI (cfiPicker44) NoFunction
        CFI (cfiPicker44) Picker
        MOV     R3,A
        LCALL   ??LCD_DrawHLine?relay
        MOV     A,#0x2
        RET
        CFI EndBlock cfiCond37
        CFI EndBlock cfiCond38
        CFI EndBlock cfiCond39
        CFI EndBlock cfiCond40
        CFI EndBlock cfiCond41
        CFI EndBlock cfiCond42
        CFI EndBlock cfiCond43
        CFI EndBlock cfiPicker44

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock45 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x8
        CFI EndBlock cfiBlock45
        REQUIRE ??Subroutine36_0
        ; // Fall through to label ??Subroutine36_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine36_0:
        CFI Block cfiBlock46 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 24)
        CFI Valid
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock46
//  134 
//  135 /*********************************************************************
//  136 *
//  137 *       GUI_FillCircle
//  138 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  139 void GUI_FillCircle(int x0, int y0, int r) {
GUI_FillCircle:
        CFI Block cfiBlock47 Using cfiCommon0
        CFI Function GUI_FillCircle
        CODE
        FUNCALL GUI_FillCircle, GL_FillCircle
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
//  140   halIntState_t state; 
//  141   GUI_LOCK(state);
//  142   #if (GUI_WINSUPPORT)
//  143     WM_ADDORG(x0,y0);
//  144     WM_ITERATE_START(NULL); {
//  145   #endif
//  146   GL_FillCircle(x0,y0,r);
??CrossCallReturnLabel_14:
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        LCALL   ??GL_FillCircle?relay
        LJMP    ?Subroutine1 & 0xFFFF
        CFI EndBlock cfiBlock47
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
        CFI Block cfiCond48 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_13
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond49 Using cfiCommon0
        CFI (cfiCond49) NoFunction
        CFI (cfiCond49) Conditional ??CrossCallReturnLabel_14
        CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond49) CFA_SP SP+0
        CFI (cfiCond49) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker50 Using cfiCommon1
        CFI (cfiPicker50) NoFunction
        CFI (cfiPicker50) Picker
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_56:
        MOV     A,0xa8
        MOV     R6,A
        CLR     0xa8.7
        ; Setup parameters for call to function GL_DrawCircle
        ; Setup parameters for call to function GL_FillCircle
        MOV     R0,#?V0 + 0
        RET
        CFI EndBlock cfiCond48
        CFI EndBlock cfiCond49
        CFI EndBlock cfiPicker50
//  147   #if (GUI_WINSUPPORT)
//  148     } WM_ITERATE_END();
//  149   #endif
//  150   GUI_UNLOCK(state);
//  151 }
//  152 
//  153 /*********************************************************************
//  154 *
//  155 *       Public code, ellipse
//  156 *
//  157 * The most efficient way to calculate the ellipse positions is using
//  158 * the knowledge that the ellipse is just circle which has compressed
//  159 * (or stretched) in one direction. For a circle, the following
//  160 * equation holds true for all points located on the border of it:
//  161 *
//  162 *               x^2 + y(x)^2 = r^2 = const
//  163 *
//  164 * Therefor, for an ellipse we can make use of the following equation:
//  165 *
//  166 *               (ry*x)^2 + (rx*y(x))^2 = (ry*rx)^2 = const
//  167 *
//  168 **********************************************************************
//  169 */
//  170 /*********************************************************************
//  171 *
//  172 *       GL_FillEllipse
//  173 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  174 void GL_FillEllipse(int x0, int y0, int rx, int ry) {
GL_FillEllipse:
        CFI Block cfiBlock51 Using cfiCommon0
        CFI Function GL_FillEllipse
        CODE
        FUNCALL GL_FillEllipse, LCD_DrawHLine
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_FillEllipse, LCD_DrawHLine
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 8
        MOV     A,#-0x8
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_48:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
//  175   I32 OutConst, Sum, SumY;
//  176   int x,y;
//  177   U32 _rx = rx;
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine13 & 0xFFFF
//  178   U32 _ry = ry;
??CrossCallReturnLabel_17:
        MOV     ?V0 + 8,R6
        MOV     A,R7
        LCALL   ?Subroutine27 & 0xFFFF
//  179   OutConst = _rx*_rx*_ry*_ry  /* Constant as explaint above */
//  180             +(_rx*_rx*_ry>>1); /* To compensate for rounding */
??CrossCallReturnLabel_49:
        MOV     ?V0 + 4,?V0 + 0
        MOV     ?V0 + 5,?V0 + 1
        MOV     ?V0 + 6,?V0 + 2
        MOV     ?V0 + 7,?V0 + 3
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?L_MUL
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 8
        LCALL   ?L_MUL
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,?V0 + 5
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,?V0 + 7
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?L_MUL
        MOV     A,#0x1
        MOV     R0,#?V0 + 4
        LCALL   ?UL_SHR
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?L_ADD
//  181   x = rx;
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine9 & 0xFFFF
//  182   for (y=0; y<=ry; y++) {
??CrossCallReturnLabel_11:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LJMP    ??CrossCallReturnLabel_32 & 0xFFFF
//  183     SumY =((I32)(rx*rx))*((I32)(y*y)); /* Does not change in loop */
//  184     while (Sum = SumY + ((I32)(ry*ry))*((I32)(x*x)),
//  185            (x>0) && (Sum>OutConst))
//  186     {
//  187       x--;
??GL_FillEllipse_0:
        LCALL   ?Subroutine18 & 0xFFFF
//  188     }
??CrossCallReturnLabel_28:
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_23:
        JC      ??GL_FillEllipse_1
        MOV     ?V0 + 12,R6
        MOV     A,R6
        MOV     B,A
        MUL     AB
        XCH     A,?V0 + 12
        MOV     R0,B
        MOV     B,R7
        MUL     AB
        ADD     A,R0
        MOV     R0,A
        MOV     B,R6
        MOV     A,R7
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_52:
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_87:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     ?V0 + 8,A
        MOV     B,A
        MUL     AB
        XCH     A,R0
        MOV     R2,B
        MOV     B,R1
        MUL     AB
        ADD     A,R2
        MOV     R2,A
        MOV     B,?V0 + 8
        MOV     A,R1
        MUL     AB
        ADD     A,R2
        MOV     ?V0 + 8,R0
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_50:
        MOV     R0,#?V0 + 12
        MOV     R1,#?V0 + 8
        LCALL   ?L_MUL
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 9,?V0 + 5
        MOV     ?V0 + 10,?V0 + 6
        MOV     ?V0 + 11,?V0 + 7
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 12
        LCALL   ?L_ADD
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?SL_GT
        JC      ??GL_FillEllipse_0
//  189     LCD_HL_DrawHLine(x0-x, y0+y, x0+x);
??GL_FillEllipse_1:
        ; Setup parameters for call to function LCD_DrawHLine
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine5 & 0xFFFF
??CrossCallReturnLabel_2:
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine39_0 & 0xFFFF
??CrossCallReturnLabel_76:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     R5,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine39_0 & 0xFFFF
??CrossCallReturnLabel_77:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_21:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 32)
//  190     if (y)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine39_0 & 0xFFFF
??CrossCallReturnLabel_78:
        MOV     A,R0
        ORL     A,R1
        JZ      ??GL_FillEllipse_2
//  191       LCD_HL_DrawHLine(x0-x, y0-y, x0+x);
        ; Setup parameters for call to function LCD_DrawHLine
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine5 & 0xFFFF
??CrossCallReturnLabel_3:
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine39_0 & 0xFFFF
??CrossCallReturnLabel_79:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R0
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R1
        MOV     R5,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine39_0 & 0xFFFF
??CrossCallReturnLabel_80:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_22:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 32)
??GL_FillEllipse_2:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_32:
        MOVX    @DPTR,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine39_0 & 0xFFFF
??CrossCallReturnLabel_81:
        CLR     C
        MOV     A,R6
        SUBB    A,R0
        MOV     A,R7
        SUBB    A,R1
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JC      ??GL_FillEllipse_3
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
        MOV     A,?V0 + 4
        MOV     B,A
        MUL     AB
        XCH     A,?V0 + 4
        MOV     R0,B
        MOV     B,?V0 + 7
        MUL     AB
        ADD     A,R0
        MOV     R0,A
        MOV     B,?V0 + 6
        MOV     A,?V0 + 5
        MUL     AB
        ADD     A,R0
        LCALL   ?Subroutine23 & 0xFFFF
//  192   }
??CrossCallReturnLabel_40:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 8,A
        MOV     ?V0 + 10,A
        MOV     B,A
        MUL     AB
        XCH     A,?V0 + 8
        MOV     R0,B
        MOV     B,R1
        MUL     AB
        ADD     A,R0
        MOV     R0,A
        MOV     B,?V0 + 10
        MOV     A,R1
        MUL     AB
        ADD     A,R0
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_45:
        LCALL   ?L_MUL
        LJMP    ??CrossCallReturnLabel_28 & 0xFFFF
//  193 }
??GL_FillEllipse_3:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock51

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
        CFI Block cfiCond52 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_47
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond53 Using cfiCommon0
        CFI (cfiCond53) NoFunction
        CFI (cfiCond53) Conditional ??CrossCallReturnLabel_48
        CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond53) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond53) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond53) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond53) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond53) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond53) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond53) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond53) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond53) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond53) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond53) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond53) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond53) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond53) CFA_SP SP+0
        CFI (cfiCond53) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond54 Using cfiCommon0
        CFI (cfiCond54) NoFunction
        CFI (cfiCond54) Conditional ??CrossCallReturnLabel_46
        CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond54) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond54) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond54) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond54) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond54) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond54) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond54) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond54) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond54) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond54) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond54) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond54) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond54) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond54) CFA_SP SP+0
        CFI (cfiCond54) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker55 Using cfiCommon1
        CFI (cfiPicker55) NoFunction
        CFI (cfiPicker55) Picker
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,#0x22
        RET
        CFI EndBlock cfiCond52
        CFI EndBlock cfiCond53
        CFI EndBlock cfiCond54
        CFI EndBlock cfiPicker55

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
        CFI Block cfiCond56 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_44
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond57 Using cfiCommon0
        CFI (cfiCond57) NoFunction
        CFI (cfiCond57) Conditional ??CrossCallReturnLabel_45
        CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond57) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond57) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond57) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond57) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond57) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond57) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond57) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond57) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond57) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond57) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond57) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond57) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond57) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond57) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond57) CFA_SP SP+0
        CFI (cfiCond57) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiPicker58 Using cfiCommon1
        CFI (cfiPicker58) NoFunction
        CFI (cfiPicker58) Picker
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_63:
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 8
        RET
        CFI EndBlock cfiCond56
        CFI EndBlock cfiCond57
        CFI EndBlock cfiPicker58

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
        CFI Block cfiCond59 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_38
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond60 Using cfiCommon0
        CFI (cfiCond60) NoFunction
        CFI (cfiCond60) Conditional ??CrossCallReturnLabel_39
        CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond60) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond60) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond60) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond60) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond60) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond60) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond60) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond60) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond60) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond60) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond60) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond60) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond60) CFA_SP SP+0
        CFI (cfiCond60) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond61 Using cfiCommon0
        CFI (cfiCond61) NoFunction
        CFI (cfiCond61) Conditional ??CrossCallReturnLabel_40
        CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond61) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond61) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond61) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond61) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond61) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond61) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond61) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond61) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond61) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond61) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond61) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond61) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond61) CFA_SP SP+0
        CFI (cfiCond61) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond62 Using cfiCommon0
        CFI (cfiCond62) NoFunction
        CFI (cfiCond62) Conditional ??CrossCallReturnLabel_41
        CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond62) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond62) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond62) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond62) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond62) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond62) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond62) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond62) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond62) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond62) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond62) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond62) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond62) CFA_SP SP+0
        CFI (cfiCond62) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker63 Using cfiCommon1
        CFI (cfiPicker63) NoFunction
        CFI (cfiPicker63) Picker
        MOV     ?V0 + 5,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 6,A
        MOV     ?V0 + 7,A
        RET
        CFI EndBlock cfiCond59
        CFI EndBlock cfiCond60
        CFI EndBlock cfiCond61
        CFI EndBlock cfiCond62
        CFI EndBlock cfiPicker63

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
        CFI Block cfiCond64 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_21
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond65 Using cfiCommon0
        CFI (cfiCond65) NoFunction
        CFI (cfiCond65) Conditional ??CrossCallReturnLabel_22
        CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond65) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond65) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond65) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond65) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond65) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond65) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond65) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond65) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond65) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond65) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond65) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond65) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond65) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond65) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond65) CFA_SP SP+0
        CFI (cfiCond65) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker66 Using cfiCommon1
        CFI (cfiPicker66) NoFunction
        CFI (cfiPicker66) Picker
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R0
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R1
        LCALL   ??Subroutine35_0 & 0xFFFF
??CrossCallReturnLabel_68:
        RET
        CFI EndBlock cfiCond64
        CFI EndBlock cfiCond65
        CFI EndBlock cfiPicker66

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
        CFI Block cfiCond67 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond68 Using cfiCommon0
        CFI (cfiCond68) NoFunction
        CFI (cfiCond68) Conditional ??CrossCallReturnLabel_3
        CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond68) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond68) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond68) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond68) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond68) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond68) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond68) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond68) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond68) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond68) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond68) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond68) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond68) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond68) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond68) CFA_SP SP+0
        CFI (cfiCond68) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiPicker69 Using cfiCommon1
        CFI (cfiPicker69) NoFunction
        CFI (cfiPicker69) Picker
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_59:
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        RET
        CFI EndBlock cfiCond67
        CFI EndBlock cfiCond68
        CFI EndBlock cfiPicker69
//  194 
//  195 /*********************************************************************
//  196 *
//  197 *       GUI_FillEllipse
//  198 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  199 void GUI_FillEllipse(int x0, int y0, int rx, int ry) {
GUI_FillEllipse:
        CFI Block cfiBlock70 Using cfiCommon0
        CFI Function GUI_FillEllipse
        CODE
        FUNCALL GUI_FillEllipse, GL_FillEllipse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_30:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine14 & 0xFFFF
//  200   #if (GUI_WINSUPPORT)
//  201     GUI_RECT r;
//  202   #endif
//  203   halIntState_t state; 
//  204   GUI_LOCK(state);
//  205   #if (GUI_WINSUPPORT)
//  206     WM_ADDORG(x0,y0);
//  207     /* Calc rectangle in order to avoid unnecessary drawing ops. */
//  208     r.x0 = x0-rx; r.x1 = x0+rx; r.y0 = y0-ry; r.y1 = y0+ry;
//  209     WM_ITERATE_START(&r); {
//  210   #endif
//  211   GL_FillEllipse (x0,y0, rx, ry);
??CrossCallReturnLabel_19:
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ??GL_FillEllipse?relay
        CFI EndBlock cfiBlock70
        REQUIRE ?Subroutine2
        REQUIRE _A_IEN0
        ; // Fall through to label ?Subroutine2

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiBlock71 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
//  212   #if (GUI_WINSUPPORT)
//  213     } WM_ITERATE_END();
//  214   #endif
//  215   GUI_UNLOCK(state);
        MOV     A,R6
        MOV     C,0xE0 /* A   */.7
        MOV     0xa8.7,C
//  216 }
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock71
//  217 
//  218 /*********************************************************************
//  219 *
//  220 *       GL_DrawEllipse
//  221 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  222 void GL_DrawEllipse(int x0, int y0, int rx, int ry) {
GL_DrawEllipse:
        CFI Block cfiBlock72 Using cfiCommon0
        CFI Function GL_DrawEllipse
        CODE
        FUNCALL GL_DrawEllipse, GL_DrawLine1
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_DrawEllipse, GL_DrawLine1
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_DrawEllipse, GL_DrawLine1
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_DrawEllipse, GL_DrawLine1
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine26 & 0xFFFF
//  223   I32 OutConst, Sum, SumY;
//  224   int x,y;
//  225   int xOld;
//  226   U32 _rx = rx;
??CrossCallReturnLabel_46:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,?V0 + 0
        LCALL   ?Subroutine23 & 0xFFFF
//  227   U32 _ry = ry;
??CrossCallReturnLabel_41:
        MOV     A,#0x24
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine13 & 0xFFFF
//  228   OutConst = _rx*_rx*_ry*_ry  /* Constant as explaint above */
//  229             +(_rx*_rx*_ry>>1); /* To compensate for rounding */
??CrossCallReturnLabel_18:
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 9,?V0 + 5
        MOV     ?V0 + 10,?V0 + 6
        MOV     ?V0 + 11,?V0 + 7
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 4
        LCALL   ?L_MUL
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?L_MUL
        MOV     ?V0 + 4,?V0 + 8
        MOV     ?V0 + 5,?V0 + 9
        MOV     ?V0 + 6,?V0 + 10
        MOV     ?V0 + 7,?V0 + 11
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?L_MUL
        MOV     A,#0x1
        MOV     R0,#?V0 + 8
        LCALL   ?UL_SHR
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 8
        LCALL   ?L_ADD
//  230   xOld = x = rx;
        MOV     A,#0x22
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_12:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
//  231   for (y=0; y<=ry; y++) {
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LJMP    ??CrossCallReturnLabel_33 & 0xFFFF
//  232     if (y==ry) {
//  233       x=0;
//  234     } else {
//  235       SumY =((I32)(rx*rx))*((I32)(y*y)); /* Does not change in loop */
//  236       while (Sum = SumY + ((I32)(ry*ry))*((I32)(x*x)),
//  237              (x>0) && (Sum>OutConst)) x--;
??GL_DrawEllipse_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_29:
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_24:
        JC      ??GL_DrawEllipse_1
        MOV     A,#0x24
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_54:
        MOV     A,#0x24
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine4 & 0xFFFF
??CrossCallReturnLabel_0:
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_70:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     ?V0 + 12,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 13,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     ?V0 + 14,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 15,A
        MOV     A,?V0 + 12
        MOV     B,A
        MUL     AB
        XCH     A,?V0 + 12
        MOV     R0,B
        MOV     B,?V0 + 15
        MUL     AB
        ADD     A,R0
        MOV     R0,A
        MOV     B,?V0 + 14
        MOV     A,?V0 + 13
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_53:
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 12
        LCALL   ?L_MUL
        MOV     ?V0 + 12,?V0 + 8
        MOV     ?V0 + 13,?V0 + 9
        MOV     ?V0 + 14,?V0 + 10
        MOV     ?V0 + 15,?V0 + 11
        MOV     R0,#?V0 + 12
        MOV     R1,#?V0 + 0
        LCALL   ?L_ADD
        MOV     R0,#?V0 + 12
        MOV     R1,#?V0 + 4
        LCALL   ?SL_GT
        JC      ??GL_DrawEllipse_0
//  238     }
//  239     /* Since we draw lines, we can not draw on the first
//  240         iteration
//  241     */
//  242     if (y) {
??GL_DrawEllipse_1:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine39_0 & 0xFFFF
??CrossCallReturnLabel_82:
        MOV     A,R0
        ORL     A,R1
        JNZ     $+5
        LJMP    ??GL_DrawEllipse_2 & 0xFFFF
//  243       GL_DrawLine1(x0-xOld,y0-y+1,x0-x,y0-y);
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R0
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R1
        MOV     R7,A
        MOV     A,R6
        ADD     A,#0x1
        MOV     ?V0 + 10,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 11,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine39_0 & 0xFFFF
??CrossCallReturnLabel_83:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R0
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R1
        MOV     ?V0 + 3,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_88:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R0
        MOV     ?V0 + 12,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R1
        MOV     ?V0 + 13,A
        ; Setup parameters for call to function GL_DrawLine1
        MOV     ?V0 + 0,R6
        MOV     ?V0 + 1,R7
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     R0,#?V0 + 12
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 38)
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_72:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
//  244       GL_DrawLine1(x0-xOld,y0+y-1,x0-x,y0+y);
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine39_0 & 0xFFFF
??CrossCallReturnLabel_84:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     ?V0 + 1,A
        MOV     A,?V0 + 0
        ADD     A,#-0x1
        MOV     ?V0 + 8,A
        MOV     A,?V0 + 1
        ADDC    A,#-0x1
        MOV     ?V0 + 9,A
        ; Setup parameters for call to function GL_DrawLine1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     R0,#?V0 + 12
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     R4,?V0 + 8
        MOV     R5,?V0 + 9
        LCALL   ??Subroutine38_0 & 0xFFFF
??CrossCallReturnLabel_74:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
//  245       GL_DrawLine1(x0+xOld,y0-y+1,x0+x,y0-y);
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine39_0 & 0xFFFF
??CrossCallReturnLabel_85:
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     ?V0 + 3,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     ?V0 + 12,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     ?V0 + 13,A
        ; Setup parameters for call to function GL_DrawLine1
        MOV     ?V0 + 14,R6
        MOV     ?V0 + 15,R7
        MOV     R0,#?V0 + 14
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     R0,#?V0 + 12
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 38)
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_73:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
//  246       GL_DrawLine1(x0+xOld,y0+y-1,x0+x,y0+y);
        ; Setup parameters for call to function GL_DrawLine1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     R0,#?V0 + 12
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     R4,?V0 + 8
        MOV     R5,?V0 + 9
        LCALL   ??Subroutine38_0 & 0xFFFF
//  247     }
??CrossCallReturnLabel_75:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
//  248     xOld = x;
??GL_DrawEllipse_2:
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_89:
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_33:
        MOVX    @DPTR,A
        MOV     A,#0x24
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine39_0 & 0xFFFF
??CrossCallReturnLabel_86:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,R0
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R1
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JC      ??GL_DrawEllipse_3
        MOV     A,#0x24
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??GL_DrawEllipse_4
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??GL_DrawEllipse_4:
        JNZ     ??GL_DrawEllipse_5
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        LJMP    ??GL_DrawEllipse_1 & 0xFFFF
??GL_DrawEllipse_5:
        MOV     A,#0x22
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine30 & 0xFFFF
//  249   }
??CrossCallReturnLabel_55:
        MOV     A,#0x22
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine4 & 0xFFFF
??CrossCallReturnLabel_1:
        MOV     ?V0 + 8,?V0 + 0
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_51:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     ?V0 + 2,A
        MOV     B,A
        MUL     AB
        XCH     A,?V0 + 0
        MOV     R0,B
        MOV     B,R1
        MUL     AB
        ADD     A,R0
        MOV     R0,A
        MOV     B,?V0 + 2
        MOV     A,R1
        MUL     AB
        ADD     A,R0
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_71:
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?L_MUL
        LJMP    ??CrossCallReturnLabel_29 & 0xFFFF
//  250 }
??GL_DrawEllipse_3:
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock72

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
        CFI Block cfiCond73 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_70
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond74 Using cfiCommon0
        CFI (cfiCond74) NoFunction
        CFI (cfiCond74) Conditional ??CrossCallReturnLabel_71
        CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond74) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond74) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond74) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond74) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond74) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond74) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond74) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond74) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond74) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond74) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond74) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond74) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond74) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond74) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond74) CFA_SP SP+0
        CFI (cfiCond74) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker75 Using cfiCommon1
        CFI (cfiPicker75) NoFunction
        CFI (cfiPicker75) Picker
        MOV     ?V0 + 1,A
        CFI EndBlock cfiCond73
        CFI EndBlock cfiCond74
        CFI EndBlock cfiPicker75
        REQUIRE ??Subroutine37_0
        ; // Fall through to label ??Subroutine37_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine37_0:
        CFI Block cfiCond76 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_69, ??CrossCallReturnLabel_17
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond77 Using cfiCommon0
        CFI (cfiCond77) NoFunction
        CFI (cfiCond77) Conditional ??CrossCallReturnLabel_69, ??CrossCallReturnLabel_18
        CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond77) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond77) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond77) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond77) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond77) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond77) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond77) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond77) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond77) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond77) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond77) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond77) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond77) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond77) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond77) CFA_SP SP+0
        CFI (cfiCond77) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond78 Using cfiCommon0
        CFI (cfiCond78) NoFunction
        CFI (cfiCond78) Conditional ??CrossCallReturnLabel_70
        CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond78) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond78) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond78) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond78) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond78) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond78) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond78) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond78) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond78) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond78) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond78) CFA_SP SP+0
        CFI (cfiCond78) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond79 Using cfiCommon0
        CFI (cfiCond79) NoFunction
        CFI (cfiCond79) Conditional ??CrossCallReturnLabel_71
        CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond79) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond79) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond79) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond79) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond79) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond79) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond79) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond79) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond79) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond79) CFA_SP SP+0
        CFI (cfiCond79) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker80 Using cfiCommon1
        CFI (cfiPicker80) NoFunction
        CFI (cfiPicker80) Picker
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        RET
        CFI EndBlock cfiCond76
        CFI EndBlock cfiCond77
        CFI EndBlock cfiCond78
        CFI EndBlock cfiCond79
        CFI EndBlock cfiPicker80

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
        CFI Block cfiCond81 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_72
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond82 Using cfiCommon0
        CFI (cfiCond82) NoFunction
        CFI (cfiCond82) Conditional ??CrossCallReturnLabel_73
        CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond82) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond82) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond82) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond82) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond82) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond82) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond82) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond82) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond82) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond82) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond82) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond82) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond82) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond82) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond82) CFA_SP SP+0
        CFI (cfiCond82) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiPicker83 Using cfiCommon1
        CFI (cfiPicker83) NoFunction
        CFI (cfiPicker83) Picker
        MOV     R4,?V0 + 10
        MOV     R5,?V0 + 11
        CFI EndBlock cfiCond81
        CFI EndBlock cfiCond82
        CFI EndBlock cfiPicker83
        REQUIRE ??Subroutine38_0
        ; // Fall through to label ??Subroutine38_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine38_0:
        CFI Block cfiCond84 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_74
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond85 Using cfiCommon0
        CFI (cfiCond85) NoFunction
        CFI (cfiCond85) Conditional ??CrossCallReturnLabel_75
        CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond85) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond85) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond85) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond85) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond85) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond85) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond85) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond85) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond85) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond85) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond85) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond85) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond85) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond85) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond85) CFA_SP SP+0
        CFI (cfiCond85) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond86 Using cfiCommon0
        CFI (cfiCond86) NoFunction
        CFI (cfiCond86) Conditional ??CrossCallReturnLabel_72
        CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond86) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond86) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond86) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond86) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond86) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond86) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond86) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond86) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond86) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond86) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond86) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond86) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond86) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond86) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond86) CFA_SP SP+0
        CFI (cfiCond86) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond87 Using cfiCommon0
        CFI (cfiCond87) NoFunction
        CFI (cfiCond87) Conditional ??CrossCallReturnLabel_73
        CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond87) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond87) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond87) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond87) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond87) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond87) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond87) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond87) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond87) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond87) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond87) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond87) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond87) CFA_SP SP+0
        CFI (cfiCond87) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiPicker88 Using cfiCommon1
        CFI (cfiPicker88) NoFunction
        CFI (cfiPicker88) Picker
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??GL_DrawLine1?relay
        MOV     A,#0x4
        RET
        CFI EndBlock cfiCond84
        CFI EndBlock cfiCond85
        CFI EndBlock cfiCond86
        CFI EndBlock cfiCond87
        CFI EndBlock cfiPicker88

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
        CFI Block cfiCond89 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_52
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond90 Using cfiCommon0
        CFI (cfiCond90) NoFunction
        CFI (cfiCond90) Conditional ??CrossCallReturnLabel_53
        CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond90) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond90) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond90) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond90) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond90) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond90) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond90) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond90) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond90) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond90) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond90) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond90) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond90) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond90) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond90) CFA_SP SP+0
        CFI (cfiCond90) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker91 Using cfiCommon1
        CFI (cfiPicker91) NoFunction
        CFI (cfiPicker91) Picker
        MUL     AB
        ADD     A,R0
        MOV     ?V0 + 13,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 14,A
        MOV     ?V0 + 15,A
        RET
        CFI EndBlock cfiCond89
        CFI EndBlock cfiCond90
        CFI EndBlock cfiPicker91

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
        CFI Block cfiCond92 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_49
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond93 Using cfiCommon0
        CFI (cfiCond93) NoFunction
        CFI (cfiCond93) Conditional ??CrossCallReturnLabel_50
        CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond93) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond93) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond93) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond93) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond93) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond93) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond93) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond93) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond93) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond93) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond93) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond93) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond93) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond93) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond93) CFA_SP SP+0
        CFI (cfiCond93) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond94 Using cfiCommon0
        CFI (cfiCond94) NoFunction
        CFI (cfiCond94) Conditional ??CrossCallReturnLabel_51
        CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond94) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond94) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond94) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond94) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond94) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond94) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond94) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond94) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond94) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond94) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond94) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond94) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond94) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond94) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond94) CFA_SP SP+0
        CFI (cfiCond94) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker95 Using cfiCommon1
        CFI (cfiPicker95) NoFunction
        CFI (cfiPicker95) Picker
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_64:
        RET
        CFI EndBlock cfiCond92
        CFI EndBlock cfiCond93
        CFI EndBlock cfiCond94
        CFI EndBlock cfiPicker95

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
        CFI Block cfiCond96 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_62, ??CrossCallReturnLabel_42
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond97 Using cfiCommon0
        CFI (cfiCond97) NoFunction
        CFI (cfiCond97) Conditional ??CrossCallReturnLabel_62, ??CrossCallReturnLabel_43
        CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond97) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond97) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond97) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond97) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond97) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond97) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond97) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond97) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond97) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond97) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond97) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond97) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond97) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond97) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond97) CFA_SP SP+0
        CFI (cfiCond97) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond98 Using cfiCommon0
        CFI (cfiCond98) NoFunction
        CFI (cfiCond98) Conditional ??CrossCallReturnLabel_61, ??CrossCallReturnLabel_15
        CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond98) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond98) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond98) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond98) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond98) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond98) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond98) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond98) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond98) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond98) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond98) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond98) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond98) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond98) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond98) CFA_SP SP+0
        CFI (cfiCond98) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond99 Using cfiCommon0
        CFI (cfiCond99) NoFunction
        CFI (cfiCond99) Conditional ??CrossCallReturnLabel_61, ??CrossCallReturnLabel_16
        CFI (cfiCond99) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond99) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond99) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond99) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond99) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond99) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond99) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond99) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond99) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond99) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond99) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond99) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond99) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond99) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond99) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond99) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond99) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond99) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond99) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond99) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond99) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond99) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond99) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond99) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond99) CFA_SP SP+0
        CFI (cfiCond99) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond100 Using cfiCommon0
        CFI (cfiCond100) NoFunction
        CFI (cfiCond100) Conditional ??CrossCallReturnLabel_63, ??CrossCallReturnLabel_44
        CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond100) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond100) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond100) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond100) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond100) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond100) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond100) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond100) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond100) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond100) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond100) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond100) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond100) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond100) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond100) CFA_SP SP+0
        CFI (cfiCond100) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond101 Using cfiCommon0
        CFI (cfiCond101) NoFunction
        CFI (cfiCond101) Conditional ??CrossCallReturnLabel_63, ??CrossCallReturnLabel_45
        CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond101) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond101) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond101) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond101) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond101) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond101) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond101) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond101) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond101) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond101) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond101) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond101) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond101) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond101) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond101) CFA_SP SP+0
        CFI (cfiCond101) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond102 Using cfiCommon0
        CFI (cfiCond102) NoFunction
        CFI (cfiCond102) Conditional ??CrossCallReturnLabel_64, ??CrossCallReturnLabel_49
        CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond102) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond102) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond102) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond102) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond102) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond102) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond102) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond102) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond102) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond102) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond102) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond102) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond102) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond102) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond102) CFA_SP SP+0
        CFI (cfiCond102) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond103 Using cfiCommon0
        CFI (cfiCond103) NoFunction
        CFI (cfiCond103) Conditional ??CrossCallReturnLabel_64, ??CrossCallReturnLabel_50
        CFI (cfiCond103) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond103) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond103) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond103) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond103) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond103) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond103) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond103) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond103) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond103) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond103) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond103) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond103) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond103) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond103) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond103) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond103) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond103) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond103) CFA_SP SP+0
        CFI (cfiCond103) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond104 Using cfiCommon0
        CFI (cfiCond104) NoFunction
        CFI (cfiCond104) Conditional ??CrossCallReturnLabel_64, ??CrossCallReturnLabel_51
        CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond104) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond104) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond104) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond104) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond104) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond104) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond104) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond104) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond104) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond104) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond104) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond104) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond104) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond104) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond104) CFA_SP SP+0
        CFI (cfiCond104) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker105 Using cfiCommon1
        CFI (cfiPicker105) NoFunction
        CFI (cfiPicker105) Picker
        MOV     ?V0 + 9,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 10,A
        MOV     ?V0 + 11,A
        RET
        CFI EndBlock cfiCond96
        CFI EndBlock cfiCond97
        CFI EndBlock cfiCond98
        CFI EndBlock cfiCond99
        CFI EndBlock cfiCond100
        CFI EndBlock cfiCond101
        CFI EndBlock cfiCond102
        CFI EndBlock cfiCond103
        CFI EndBlock cfiCond104
        CFI EndBlock cfiPicker105

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
        CFI Block cfiCond106 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_32
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond107 Using cfiCommon0
        CFI (cfiCond107) NoFunction
        CFI (cfiCond107) Conditional ??CrossCallReturnLabel_33
        CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond107) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond107) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond107) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond107) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond107) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond107) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond107) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond107) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond107) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond107) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond107) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond107) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond107) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond107) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond107) CFA_SP SP+0
        CFI (cfiCond107) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker108 Using cfiCommon1
        CFI (cfiPicker108) NoFunction
        CFI (cfiPicker108) Picker
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        RET
        CFI EndBlock cfiCond106
        CFI EndBlock cfiCond107
        CFI EndBlock cfiPicker108

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
        CFI Block cfiCond109 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_28
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond110 Using cfiCommon0
        CFI (cfiCond110) NoFunction
        CFI (cfiCond110) Conditional ??CrossCallReturnLabel_29
        CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond110) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond110) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond110) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond110) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond110) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond110) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond110) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond110) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond110) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond110) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond110) CFA_SP SP+0
        CFI (cfiCond110) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker111 Using cfiCommon1
        CFI (cfiPicker111) NoFunction
        CFI (cfiPicker111) Picker
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond109
        CFI EndBlock cfiCond110
        CFI EndBlock cfiPicker111

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
        CFI Block cfiCond112 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_23
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond113 Using cfiCommon0
        CFI (cfiCond113) NoFunction
        CFI (cfiCond113) Conditional ??CrossCallReturnLabel_24
        CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond113) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond113) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond113) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond113) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond113) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond113) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond113) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond113) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond113) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond113) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond113) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond113) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond113) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond113) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond113) CFA_SP SP+0
        CFI (cfiCond113) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker114 Using cfiCommon1
        CFI (cfiPicker114) NoFunction
        CFI (cfiPicker114) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,#0x1
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        RET
        CFI EndBlock cfiCond112
        CFI EndBlock cfiCond113
        CFI EndBlock cfiPicker114

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
        CFI Block cfiCond115 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_17
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond116 Using cfiCommon0
        CFI (cfiCond116) NoFunction
        CFI (cfiCond116) Conditional ??CrossCallReturnLabel_18
        CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond116) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond116) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond116) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond116) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond116) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond116) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond116) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond116) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond116) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond116) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond116) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond116) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond116) CFA_SP SP+0
        CFI (cfiCond116) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker117 Using cfiCommon1
        CFI (cfiPicker117) NoFunction
        CFI (cfiPicker117) Picker
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_57:
        LCALL   ??Subroutine37_0 & 0xFFFF
??CrossCallReturnLabel_69:
        RET
        CFI EndBlock cfiCond115
        CFI EndBlock cfiCond116
        CFI EndBlock cfiPicker117

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
        CFI Block cfiCond118 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_56, ??CrossCallReturnLabel_13
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond119 Using cfiCommon0
        CFI (cfiCond119) NoFunction
        CFI (cfiCond119) Conditional ??CrossCallReturnLabel_56, ??CrossCallReturnLabel_14
        CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond119) CFA_SP SP+0
        CFI (cfiCond119) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond120 Using cfiCommon0
        CFI (cfiCond120) NoFunction
        CFI (cfiCond120) Conditional ??CrossCallReturnLabel_54
        CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond120) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond120) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond120) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond120) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond120) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond120) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond120) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond120) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond120) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond120) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond120) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond120) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond120) CFA_SP SP+0
        CFI (cfiCond120) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond121 Using cfiCommon0
        CFI (cfiCond121) NoFunction
        CFI (cfiCond121) Conditional ??CrossCallReturnLabel_55
        CFI (cfiCond121) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond121) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond121) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond121) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond121) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond121) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond121) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond121) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond121) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond121) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond121) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond121) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond121) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond121) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond121) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond121) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond121) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond121) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond121) CFA_SP SP+0
        CFI (cfiCond121) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond122 Using cfiCommon0
        CFI (cfiCond122) NoFunction
        CFI (cfiCond122) Conditional ??CrossCallReturnLabel_57, ??CrossCallReturnLabel_17
        CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond122) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond122) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond122) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond122) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond122) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond122) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond122) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond122) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond122) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond122) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond122) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond122) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond122) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond122) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond122) CFA_SP SP+0
        CFI (cfiCond122) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond123 Using cfiCommon0
        CFI (cfiCond123) NoFunction
        CFI (cfiCond123) Conditional ??CrossCallReturnLabel_57, ??CrossCallReturnLabel_18
        CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond123) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond123) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond123) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond123) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond123) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond123) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond123) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond123) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond123) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond123) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond123) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond123) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond123) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond123) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond123) CFA_SP SP+0
        CFI (cfiCond123) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond124 Using cfiCommon0
        CFI (cfiCond124) NoFunction
        CFI (cfiCond124) Conditional ??CrossCallReturnLabel_58, ??CrossCallReturnLabel_30
        CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond124) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond124) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond124) CFA_SP SP+0
        CFI (cfiCond124) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond125 Using cfiCommon0
        CFI (cfiCond125) NoFunction
        CFI (cfiCond125) Conditional ??CrossCallReturnLabel_58, ??CrossCallReturnLabel_31
        CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond125) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond125) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond125) CFA_SP SP+0
        CFI (cfiCond125) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker126 Using cfiCommon1
        CFI (cfiPicker126) NoFunction
        CFI (cfiPicker126) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        RET
        CFI EndBlock cfiCond118
        CFI EndBlock cfiCond119
        CFI EndBlock cfiCond120
        CFI EndBlock cfiCond121
        CFI EndBlock cfiCond122
        CFI EndBlock cfiCond123
        CFI EndBlock cfiCond124
        CFI EndBlock cfiCond125
        CFI EndBlock cfiPicker126

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
        CFI Block cfiCond127 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_87
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond128 Using cfiCommon0
        CFI (cfiCond128) NoFunction
        CFI (cfiCond128) Conditional ??CrossCallReturnLabel_88
        CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond128) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond128) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond128) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond128) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond128) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond128) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond128) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond128) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond128) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond128) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond128) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond128) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond128) CFA_SP SP+-2
        CFI (cfiCond128) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond129 Using cfiCommon0
        CFI (cfiCond129) NoFunction
        CFI (cfiCond129) Conditional ??CrossCallReturnLabel_89
        CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond129) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond129) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond129) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond129) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond129) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond129) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond129) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond129) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond129) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond129) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond129) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond129) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond129) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond129) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond129) CFA_SP SP+0
        CFI (cfiCond129) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker130 Using cfiCommon1
        CFI (cfiPicker130) NoFunction
        CFI (cfiPicker130) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CFI EndBlock cfiCond127
        CFI EndBlock cfiCond128
        CFI EndBlock cfiCond129
        CFI EndBlock cfiPicker130
        REQUIRE ??Subroutine39_0
        ; // Fall through to label ??Subroutine39_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine39_0:
        CFI Block cfiCond131 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_76
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond132 Using cfiCommon0
        CFI (cfiCond132) NoFunction
        CFI (cfiCond132) Conditional ??CrossCallReturnLabel_77
        CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond132) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond132) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond132) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond132) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond132) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond132) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond132) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond132) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond132) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond132) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond132) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond132) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond132) CFA_SP SP+-2
        CFI (cfiCond132) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond133 Using cfiCommon0
        CFI (cfiCond133) NoFunction
        CFI (cfiCond133) Conditional ??CrossCallReturnLabel_78
        CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond133) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond133) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond133) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond133) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond133) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond133) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond133) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond133) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond133) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond133) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond133) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond133) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond133) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond133) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond133) CFA_SP SP+0
        CFI (cfiCond133) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond134 Using cfiCommon0
        CFI (cfiCond134) NoFunction
        CFI (cfiCond134) Conditional ??CrossCallReturnLabel_79
        CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond134) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond134) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond134) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond134) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond134) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond134) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond134) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond134) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond134) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond134) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond134) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond134) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond134) CFA_SP SP+-2
        CFI (cfiCond134) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond135 Using cfiCommon0
        CFI (cfiCond135) NoFunction
        CFI (cfiCond135) Conditional ??CrossCallReturnLabel_80
        CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond135) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond135) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond135) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond135) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond135) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond135) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond135) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond135) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond135) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond135) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond135) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond135) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond135) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond135) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond135) CFA_SP SP+-2
        CFI (cfiCond135) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond136 Using cfiCommon0
        CFI (cfiCond136) NoFunction
        CFI (cfiCond136) Conditional ??CrossCallReturnLabel_81
        CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond136) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond136) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond136) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond136) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond136) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond136) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond136) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond136) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond136) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond136) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond136) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond136) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond136) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond136) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond136) CFA_SP SP+0
        CFI (cfiCond136) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond137 Using cfiCommon0
        CFI (cfiCond137) NoFunction
        CFI (cfiCond137) Conditional ??CrossCallReturnLabel_82
        CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond137) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond137) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond137) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond137) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond137) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond137) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond137) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond137) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond137) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond137) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond137) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond137) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond137) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond137) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond137) CFA_SP SP+0
        CFI (cfiCond137) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond138 Using cfiCommon0
        CFI (cfiCond138) NoFunction
        CFI (cfiCond138) Conditional ??CrossCallReturnLabel_83
        CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond138) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond138) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond138) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond138) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond138) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond138) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond138) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond138) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond138) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond138) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond138) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond138) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond138) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond138) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond138) CFA_SP SP+-2
        CFI (cfiCond138) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond139 Using cfiCommon0
        CFI (cfiCond139) NoFunction
        CFI (cfiCond139) Conditional ??CrossCallReturnLabel_84
        CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond139) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond139) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond139) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond139) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond139) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond139) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond139) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond139) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond139) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond139) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond139) CFA_SP SP+0
        CFI (cfiCond139) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond140 Using cfiCommon0
        CFI (cfiCond140) NoFunction
        CFI (cfiCond140) Conditional ??CrossCallReturnLabel_85
        CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond140) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond140) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond140) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond140) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond140) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond140) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond140) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond140) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond140) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond140) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond140) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond140) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond140) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond140) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond140) CFA_SP SP+0
        CFI (cfiCond140) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond141 Using cfiCommon0
        CFI (cfiCond141) NoFunction
        CFI (cfiCond141) Conditional ??CrossCallReturnLabel_86
        CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond141) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond141) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond141) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond141) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond141) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond141) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond141) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond141) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond141) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond141) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond141) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond141) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond141) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond141) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond141) CFA_SP SP+-2
        CFI (cfiCond141) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond142 Using cfiCommon0
        CFI (cfiCond142) NoFunction
        CFI (cfiCond142) Conditional ??CrossCallReturnLabel_87
        CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond142) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond142) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond142) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond142) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond142) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond142) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond142) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond142) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond142) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond142) CFA_SP SP+0
        CFI (cfiCond142) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond143 Using cfiCommon0
        CFI (cfiCond143) NoFunction
        CFI (cfiCond143) Conditional ??CrossCallReturnLabel_88
        CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond143) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond143) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond143) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond143) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond143) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond143) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond143) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond143) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond143) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond143) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond143) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond143) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond143) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond143) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond143) CFA_SP SP+-2
        CFI (cfiCond143) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond144 Using cfiCommon0
        CFI (cfiCond144) NoFunction
        CFI (cfiCond144) Conditional ??CrossCallReturnLabel_89
        CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond144) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond144) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond144) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond144) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond144) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond144) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond144) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond144) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond144) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond144) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond144) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond144) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond144) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond144) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond144) CFA_SP SP+0
        CFI (cfiCond144) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker145 Using cfiCommon1
        CFI (cfiPicker145) NoFunction
        CFI (cfiPicker145) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
        CFI EndBlock cfiCond131
        CFI EndBlock cfiCond132
        CFI EndBlock cfiCond133
        CFI EndBlock cfiCond134
        CFI EndBlock cfiCond135
        CFI EndBlock cfiCond136
        CFI EndBlock cfiCond137
        CFI EndBlock cfiCond138
        CFI EndBlock cfiCond139
        CFI EndBlock cfiCond140
        CFI EndBlock cfiCond141
        CFI EndBlock cfiCond142
        CFI EndBlock cfiCond143
        CFI EndBlock cfiCond144
        CFI EndBlock cfiPicker145

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
        CFI Block cfiCond146 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_11
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond147 Using cfiCommon0
        CFI (cfiCond147) NoFunction
        CFI (cfiCond147) Conditional ??CrossCallReturnLabel_12
        CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond147) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond147) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond147) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond147) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond147) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond147) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond147) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond147) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond147) CFA_SP SP+0
        CFI (cfiCond147) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker148 Using cfiCommon1
        CFI (cfiPicker148) NoFunction
        CFI (cfiPicker148) Picker
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_60:
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond146
        CFI EndBlock cfiCond147
        CFI EndBlock cfiPicker148

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
        CFI Block cfiCond149 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_59, ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond150 Using cfiCommon0
        CFI (cfiCond150) NoFunction
        CFI (cfiCond150) Conditional ??CrossCallReturnLabel_59, ??CrossCallReturnLabel_3
        CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond150) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond150) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond150) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond150) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond150) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond150) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond150) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond150) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond150) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond150) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond150) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond150) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond150) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond150) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond150) CFA_SP SP+0
        CFI (cfiCond150) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond151 Using cfiCommon0
        CFI (cfiCond151) NoFunction
        CFI (cfiCond151) Conditional ??CrossCallReturnLabel_60, ??CrossCallReturnLabel_11
        CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond151) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond151) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond151) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond151) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond151) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond151) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond151) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond151) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond151) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond151) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond151) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond151) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond151) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond151) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond151) CFA_SP SP+0
        CFI (cfiCond151) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond152 Using cfiCommon0
        CFI (cfiCond152) NoFunction
        CFI (cfiCond152) Conditional ??CrossCallReturnLabel_60, ??CrossCallReturnLabel_12
        CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond152) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond152) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond152) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond152) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond152) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond152) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond152) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond152) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond152) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond152) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond152) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond152) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond152) CFA_SP SP+0
        CFI (cfiCond152) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker153 Using cfiCommon1
        CFI (cfiPicker153) NoFunction
        CFI (cfiPicker153) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond149
        CFI EndBlock cfiCond150
        CFI EndBlock cfiCond151
        CFI EndBlock cfiCond152
        CFI EndBlock cfiPicker153

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
        CFI Block cfiCond154 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond155 Using cfiCommon0
        CFI (cfiCond155) NoFunction
        CFI (cfiCond155) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond155) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond155) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond155) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond155) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond155) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond155) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond155) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond155) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond155) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond155) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond155) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond155) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond155) CFA_SP SP+0
        CFI (cfiCond155) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker156 Using cfiCommon1
        CFI (cfiPicker156) NoFunction
        CFI (cfiPicker156) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
        MOV     A,?V0 + 0
        MOV     B,A
        MUL     AB
        XCH     A,?V0 + 0
        MOV     R0,B
        MOV     B,?V0 + 3
        MUL     AB
        ADD     A,R0
        MOV     R0,A
        MOV     B,?V0 + 2
        MOV     A,?V0 + 1
        MUL     AB
        ADD     A,R0
        RET
        CFI EndBlock cfiCond154
        CFI EndBlock cfiCond155
        CFI EndBlock cfiPicker156
//  251 
//  252 /*********************************************************************
//  253 *
//  254 *       GUI_DrawEllipse
//  255 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  256 void GUI_DrawEllipse(int x0, int y0, int rx, int ry) {
GUI_DrawEllipse:
        CFI Block cfiBlock157 Using cfiCommon0
        CFI Function GUI_DrawEllipse
        CODE
        FUNCALL GUI_DrawEllipse, GL_DrawEllipse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_31:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine14 & 0xFFFF
//  257   #if (GUI_WINSUPPORT)
//  258     GUI_RECT r;
//  259   #endif
//  260   halIntState_t state;
//  261   GUI_LOCK(state);
//  262   #if (GUI_WINSUPPORT)
//  263     WM_ADDORG(x0,y0);
//  264   /* Calc rectangle in order to avoid unnecessary drawing ops. */
//  265     r.x0 = x0-rx; r.x1 = x0+rx; r.y0 = y0-ry; r.y1 = y0+ry;
//  266     WM_ITERATE_START(&r); {
//  267   #endif
//  268   GL_DrawEllipse(x0, y0, rx, ry);
??CrossCallReturnLabel_20:
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ??GL_DrawEllipse?relay
        LJMP    ?Subroutine2 & 0xFFFF
        CFI EndBlock cfiBlock157
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
        CFI Block cfiCond158 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_30
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond159 Using cfiCommon0
        CFI (cfiCond159) NoFunction
        CFI (cfiCond159) Conditional ??CrossCallReturnLabel_31
        CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond159) CFA_SP SP+0
        CFI (cfiCond159) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker160 Using cfiCommon1
        CFI (cfiPicker160) NoFunction
        CFI (cfiPicker160) Picker
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_58:
        MOV     A,#0xe
        RET
        CFI EndBlock cfiCond158
        CFI EndBlock cfiCond159
        CFI EndBlock cfiPicker160

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
        CFI Block cfiCond161 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_19
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond162 Using cfiCommon0
        CFI (cfiCond162) NoFunction
        CFI (cfiCond162) Conditional ??CrossCallReturnLabel_20
        CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond162) CFA_SP SP+0
        CFI (cfiCond162) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker163 Using cfiCommon1
        CFI (cfiPicker163) NoFunction
        CFI (cfiPicker163) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
        MOV     A,0xa8
        MOV     R6,A
        CLR     0xa8.7
        ; Setup parameters for call to function GL_FillEllipse
        ; Setup parameters for call to function GL_DrawEllipse
        MOV     R0,#?V0 + 2
        RET
        CFI EndBlock cfiCond161
        CFI EndBlock cfiCond162
        CFI EndBlock cfiPicker163

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_2c3:
        DD 707

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3e8:
        DD 1000

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_1:
        DD 1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_ffffffff:
        DD -1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Draw8Point?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Draw8Point

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GL_DrawCircle?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GL_DrawCircle

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GUI_DrawCircle?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GUI_DrawCircle

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GL_FillCircle?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GL_FillCircle

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GUI_FillCircle?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GUI_FillCircle

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GL_FillEllipse?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GL_FillEllipse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GUI_FillEllipse?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GUI_FillEllipse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GL_DrawEllipse?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GL_DrawEllipse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GUI_DrawEllipse?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GUI_DrawEllipse

        END
//  269   #if (GUI_WINSUPPORT)
//  270     } WM_ITERATE_END();
//  271   #endif
//  272   GUI_UNLOCK(state);
//  273 }
//  274 
//  275 /*************************** End of file ****************************/
// 
// 2 691 bytes in segment BANKED_CODE
//    54 bytes in segment BANK_RELAYS
//     1 byte  in segment SFR_AN
//    16 bytes in segment XDATA_ROM_C
// 
// 2 745 bytes of CODE  memory
//     0 bytes of CONST memory (+ 16 bytes shared)
//     0 bytes of DATA  memory (+  1 byte  shared)
//
//Errors: none
//Warnings: none
