///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        14/Jun/2016  16:18:23 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\C /
//                          ore\LCD_GetEx.c                                   /
//    Command line       =  -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย /
//                          ็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack /
//                          \Utilities\SerialApp\CC2530DB\..\..\..\Tools\CC25 /
//                          30DB\f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func  /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8        /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)   /
//                          -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย /
//                          ็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack /
//                          \Utilities\SerialApp\CC2530DB\..\..\..\Tools\CC25 /
//                          30DB\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0        /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0x1001                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘น /
//                          โลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2. /
//                          5.1a\Components\uCGUI\Core\LCD_GetEx.c -D         /
//                          HAL_UART=TRUE -D SERIAL_APP_PORT=0 -D COOR -D     /
//                          LCD_SUPPORTED -D NV_INIT -lC                      /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\CoordinatorEB\List\    /
//                          -lA F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ /
//                          ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstac /
//                          k\Utilities\SerialApp\CC2530DB\CoordinatorEB\List /
//                          \ --diag_suppress Pe001,Pa010 -o                  /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\CoordinatorEB\Obj\ -e  /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\ -I                    /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\Public\ -I          /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\uCGUI\Core\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื /
//                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a /
//                          \Projects\zstack\Utilities\SerialApp\CC2530DB\..\ /
//                          ..\..\..\..\Components\uCGUI\MultiLayer\ -I       /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\uCGUI\Config\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโล /
//                          ฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5. /
//                          1a\Projects\zstack\Utilities\SerialApp\CC2530DB\. /
//                          .\Coordinator\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืส /
//                          มฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ /
//                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\. /
//                          .\..\ZMain\TI2530DB\ -I                           /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\hal\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬ /
//                          ืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Utilities\SerialApp\CC2530DB\.. /
//                          \..\..\..\..\Components\hal\target\CC2530EB\ -I   /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mac\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬ /
//                          ืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Utilities\SerialApp\CC2530DB\.. /
//                          \..\..\..\..\Components\mac\high_level\ -I        /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mac\low_level\srf04\ -I                       /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mac\low_level\srf04\single_chip\ -I           /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mt\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Z /
//                          igBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Project /
//                          s\zstack\Utilities\SerialApp\CC2530DB\..\..\..\.. /
//                          \..\Components\osal\include\ -I                   /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\services\saddr\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘น /
//                          โลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2. /
//                          5.1a\Projects\zstack\Utilities\SerialApp\CC2530DB /
//                          \..\..\..\..\..\Components\services\sdata\ -I     /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\stack\af\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสม /
//                          ฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\P /
//                          rojects\zstack\Utilities\SerialApp\CC2530DB\..\.. /
//                          \..\..\..\Components\stack\nwk\ -I                /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\stack\sapi\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื /
//                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a /
//                          \Projects\zstack\Utilities\SerialApp\CC2530DB\..\ /
//                          ..\..\..\..\Components\stack\sec\ -I              /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\stack\sys\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืส /
//                          มฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ /
//                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\. /
//                          .\..\..\..\Components\stack\zdo\ -I               /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\zmac\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210 /
//                          \ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje /
//                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ /
//                          ..\..\Components\zmac\f8w\ -Ohz                   /
//                          --require_prototypes                              /
//    List file          =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\CoordinatorEB\List\LCD /
//                          _GetEx.s51                                        /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME LCD_GetEx

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BDISPATCH
        EXTERN ?BRET

        PUBLIC ??LCD_GetBitsPerPixelEx?relay
        FUNCTION ??LCD_GetBitsPerPixelEx?relay,0203H
        PUBLIC ??LCD_GetBitsPerPixel_L0Ex?relay
        FUNCTION ??LCD_GetBitsPerPixel_L0Ex?relay,0203H
        PUBLIC ??LCD_GetDeltaModeEx?relay
        FUNCTION ??LCD_GetDeltaModeEx?relay,0203H
        PUBLIC ??LCD_GetFixedPaletteEx?relay
        FUNCTION ??LCD_GetFixedPaletteEx?relay,0203H
        PUBLIC ??LCD_GetMirrorXEx?relay
        FUNCTION ??LCD_GetMirrorXEx?relay,0203H
        PUBLIC ??LCD_GetMirrorYEx?relay
        FUNCTION ??LCD_GetMirrorYEx?relay,0203H
        PUBLIC ??LCD_GetNumColorsEx?relay
        FUNCTION ??LCD_GetNumColorsEx?relay,0203H
        PUBLIC ??LCD_GetSwapRBEx?relay
        FUNCTION ??LCD_GetSwapRBEx?relay,0203H
        PUBLIC ??LCD_GetSwapXYEx?relay
        FUNCTION ??LCD_GetSwapXYEx?relay,0203H
        PUBLIC ??LCD_GetVXSizeEx?relay
        FUNCTION ??LCD_GetVXSizeEx?relay,0203H
        PUBLIC ??LCD_GetVYSizeEx?relay
        FUNCTION ??LCD_GetVYSizeEx?relay,0203H
        PUBLIC ??LCD_GetXMagEx?relay
        FUNCTION ??LCD_GetXMagEx?relay,0203H
        PUBLIC ??LCD_GetXSizeEx?relay
        FUNCTION ??LCD_GetXSizeEx?relay,0203H
        PUBLIC ??LCD_GetYMagEx?relay
        FUNCTION ??LCD_GetYMagEx?relay,0203H
        PUBLIC ??LCD_GetYSizeEx?relay
        FUNCTION ??LCD_GetYSizeEx?relay,0203H
        PUBLIC LCD_GetBitsPerPixelEx
        FUNCTION LCD_GetBitsPerPixelEx,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetBitsPerPixel_L0Ex
        FUNCTION LCD_GetBitsPerPixel_L0Ex,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetDeltaModeEx
        FUNCTION LCD_GetDeltaModeEx,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetFixedPaletteEx
        FUNCTION LCD_GetFixedPaletteEx,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetMirrorXEx
        FUNCTION LCD_GetMirrorXEx,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetMirrorYEx
        FUNCTION LCD_GetMirrorYEx,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetNumColorsEx
        FUNCTION LCD_GetNumColorsEx,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetSwapRBEx
        FUNCTION LCD_GetSwapRBEx,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetSwapXYEx
        FUNCTION LCD_GetSwapXYEx,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetVXSizeEx
        FUNCTION LCD_GetVXSizeEx,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetVYSizeEx
        FUNCTION LCD_GetVYSizeEx,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetXMagEx
        FUNCTION LCD_GetXMagEx,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetXSizeEx
        FUNCTION LCD_GetXSizeEx,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetYMagEx
        FUNCTION LCD_GetYMagEx,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC LCD_GetYSizeEx
        FUNCTION LCD_GetYSizeEx,0203H
        ARGFRAME XSTACK, 0, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
LCD_GetBitsPerPixelEx SYMBOL "LCD_GetBitsPerPixelEx"
??LCD_GetBitsPerPixelEx?relay SYMBOL "?relay", LCD_GetBitsPerPixelEx
LCD_GetBitsPerPixel_L0Ex SYMBOL "LCD_GetBitsPerPixel_L0Ex"
??LCD_GetBitsPerPixel_L0Ex?relay SYMBOL "?relay", LCD_GetBitsPerPixel_L0Ex
LCD_GetDeltaModeEx  SYMBOL "LCD_GetDeltaModeEx"
??LCD_GetDeltaModeEx?relay SYMBOL "?relay", LCD_GetDeltaModeEx
LCD_GetFixedPaletteEx SYMBOL "LCD_GetFixedPaletteEx"
??LCD_GetFixedPaletteEx?relay SYMBOL "?relay", LCD_GetFixedPaletteEx
LCD_GetMirrorXEx    SYMBOL "LCD_GetMirrorXEx"
??LCD_GetMirrorXEx?relay SYMBOL "?relay", LCD_GetMirrorXEx
LCD_GetMirrorYEx    SYMBOL "LCD_GetMirrorYEx"
??LCD_GetMirrorYEx?relay SYMBOL "?relay", LCD_GetMirrorYEx
LCD_GetNumColorsEx  SYMBOL "LCD_GetNumColorsEx"
??LCD_GetNumColorsEx?relay SYMBOL "?relay", LCD_GetNumColorsEx
LCD_GetSwapRBEx     SYMBOL "LCD_GetSwapRBEx"
??LCD_GetSwapRBEx?relay SYMBOL "?relay", LCD_GetSwapRBEx
LCD_GetSwapXYEx     SYMBOL "LCD_GetSwapXYEx"
??LCD_GetSwapXYEx?relay SYMBOL "?relay", LCD_GetSwapXYEx
LCD_GetVXSizeEx     SYMBOL "LCD_GetVXSizeEx"
??LCD_GetVXSizeEx?relay SYMBOL "?relay", LCD_GetVXSizeEx
LCD_GetVYSizeEx     SYMBOL "LCD_GetVYSizeEx"
??LCD_GetVYSizeEx?relay SYMBOL "?relay", LCD_GetVYSizeEx
LCD_GetXMagEx       SYMBOL "LCD_GetXMagEx"
??LCD_GetXMagEx?relay SYMBOL "?relay", LCD_GetXMagEx
LCD_GetXSizeEx      SYMBOL "LCD_GetXSizeEx"
??LCD_GetXSizeEx?relay SYMBOL "?relay", LCD_GetXSizeEx
LCD_GetYMagEx       SYMBOL "LCD_GetYMagEx"
??LCD_GetYMagEx?relay SYMBOL "?relay", LCD_GetYMagEx
LCD_GetYSizeEx      SYMBOL "LCD_GetYSizeEx"
??LCD_GetYSizeEx?relay SYMBOL "?relay", LCD_GetYSizeEx

// F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Core\LCD_GetEx.c
//    1 /*
//    2 *********************************************************************************************************
//    3 *                                                uC/GUI
//    4 *                        Universal graphic software for embedded applications
//    5 *
//    6 *                       (c) Copyright 2002, Micrium Inc., Weston, FL
//    7 *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
//    8 *
//    9 *              ตC/GUI is protected by international copyright laws. Knowledge of the
//   10 *              source code may not be used to write a similar product. This file may
//   11 *              only be used in accordance with a license and should not be redistributed
//   12 *              in any way. We appreciate your understanding and fairness.
//   13 *
//   14 ----------------------------------------------------------------------
//   15 File        : LCD_GetEx.C
//   16 Purpose     : Routines returning info at runtime
//   17 ---------------------------END-OF-HEADER------------------------------
//   18 */
//   19 
//   20 #include <stddef.h>           /* needed for definition of NULL */
//   21 #include "LCD.h"		          /* interface definitions */
//   22 #include "LCD_Private.h"      /* private modul definitions & config */
//   23 
//   24 /*********************************************************************
//   25 *
//   26 *       Public code
//   27 *
//   28 **********************************************************************
//   29 */
//   30 /*********************************************************************
//   31 *
//   32 *       LCD_GetXSizeEx
//   33 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   34 int LCD_GetXSizeEx(int LayerIndex) {
LCD_GetXSizeEx:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function LCD_GetXSizeEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//   35   if (LayerIndex == 0) {
        MOV     A,R2
        ORL     A,R3
        JNZ     ??LCD_GetXSizeEx_0
//   36     return LCD_XSIZE;
        MOV     R2,#-0x10
        SJMP    ??LCD_GetXSizeEx_1
//   37   }
//   38   #if GUI_NUM_LAYERS > 1
//   39     if (LayerIndex == 1) {
//   40       return LCD_XSIZE_1;
//   41     }
//   42   #endif
//   43   #if GUI_NUM_LAYERS > 2
//   44     if (LayerIndex == 2) {
//   45       return LCD_XSIZE_2;
//   46     }
//   47   #endif
//   48   #if GUI_NUM_LAYERS > 3
//   49     if (LayerIndex == 3) {
//   50       return LCD_XSIZE_3;
//   51     }
//   52   #endif
//   53   #if GUI_NUM_LAYERS > 4
//   54     if (LayerIndex == 4) {
//   55       return LCD_XSIZE_4;
//   56     }
//   57   #endif
//   58   return 0;
??LCD_GetXSizeEx_0:
        MOV     R2,#0x0
??LCD_GetXSizeEx_1:
        SJMP    ??Subroutine2_0
        CFI EndBlock cfiBlock0
//   59 }
//   60 
//   61 /*********************************************************************
//   62 *
//   63 *       LCD_GetYSizeEx
//   64 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   65 int LCD_GetYSizeEx(int LayerIndex) {
LCD_GetYSizeEx:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function LCD_GetYSizeEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//   66   if (LayerIndex == 0) {
        MOV     A,R2
        ORL     A,R3
        JNZ     ??LCD_GetYSizeEx_0
//   67     return LCD_YSIZE;
        MOV     R2,#0x40
        MOV     R3,#0x1
        SJMP    ??LCD_GetYSizeEx_1
//   68   }
//   69   #if GUI_NUM_LAYERS > 1
//   70     if (LayerIndex == 1) {
//   71       return LCD_YSIZE_1;
//   72     }
//   73   #endif
//   74   #if GUI_NUM_LAYERS > 2
//   75     if (LayerIndex == 2) {
//   76       return LCD_YSIZE_2;
//   77     }
//   78   #endif
//   79   #if GUI_NUM_LAYERS > 3
//   80     if (LayerIndex == 3) {
//   81       return LCD_YSIZE_3;
//   82     }
//   83   #endif
//   84   #if GUI_NUM_LAYERS > 4
//   85     if (LayerIndex == 4) {
//   86       return LCD_YSIZE_4;
//   87     }
//   88   #endif
//   89   return 0;
??LCD_GetYSizeEx_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??LCD_GetYSizeEx_1:
        LJMP    ?BRET
        CFI EndBlock cfiBlock1
//   90 }
//   91 
//   92 /*********************************************************************
//   93 *
//   94 *       LCD_GetVXSizeEx
//   95 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   96 int LCD_GetVXSizeEx(int LayerIndex) {
LCD_GetVXSizeEx:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function LCD_GetVXSizeEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//   97   if (LayerIndex == 0) {
        MOV     A,R2
        ORL     A,R3
        JNZ     ??LCD_GetVXSizeEx_0
//   98     return LCD_VXSIZE;
        MOV     R2,#-0x10
        SJMP    ??LCD_GetVXSizeEx_1
//   99   }
//  100   #if GUI_NUM_LAYERS > 1
//  101     if (LayerIndex == 1) {
//  102       return LCD_VXSIZE_1;
//  103     }
//  104   #endif
//  105   #if GUI_NUM_LAYERS > 2
//  106     if (LayerIndex == 2) {
//  107       return LCD_VXSIZE_2;
//  108     }
//  109   #endif
//  110   #if GUI_NUM_LAYERS > 3
//  111     if (LayerIndex == 3) {
//  112       return LCD_VXSIZE_3;
//  113     }
//  114   #endif
//  115   #if GUI_NUM_LAYERS > 4
//  116     if (LayerIndex == 4) {
//  117       return LCD_VXSIZE_4;
//  118     }
//  119   #endif
//  120   return 0;
??LCD_GetVXSizeEx_0:
        MOV     R2,#0x0
??LCD_GetVXSizeEx_1:
        SJMP    ??Subroutine2_0
        CFI EndBlock cfiBlock2
//  121 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI NoFunction
        MOV     R2,#0x0
        CFI EndBlock cfiBlock3
        REQUIRE ??Subroutine2_0
        ; // Fall through to label ??Subroutine2_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine2_0:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        MOV     R3,#0x0
        LJMP    ?BRET
        CFI EndBlock cfiBlock4
//  122 
//  123 /*********************************************************************
//  124 *
//  125 *       LCD_GetVYSizeEx
//  126 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  127 int LCD_GetVYSizeEx(int LayerIndex) {
LCD_GetVYSizeEx:
        CFI Block cfiBlock5 Using cfiCommon0
        CFI Function LCD_GetVYSizeEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  128   if (LayerIndex == 0) {
        MOV     A,R2
        ORL     A,R3
        JNZ     ??LCD_GetVYSizeEx_0
//  129     return LCD_VYSIZE;
        MOV     R2,#0x40
        MOV     R3,#0x1
        SJMP    ??LCD_GetVYSizeEx_1
//  130   }
//  131   #if GUI_NUM_LAYERS > 1
//  132     if (LayerIndex == 1) {
//  133       return LCD_VYSIZE_1;
//  134     }
//  135   #endif
//  136   #if GUI_NUM_LAYERS > 2
//  137     if (LayerIndex == 2) {
//  138       return LCD_VYSIZE_2;
//  139     }
//  140   #endif
//  141   #if GUI_NUM_LAYERS > 3
//  142     if (LayerIndex == 3) {
//  143       return LCD_VYSIZE_3;
//  144     }
//  145   #endif
//  146   #if GUI_NUM_LAYERS > 4
//  147     if (LayerIndex == 4) {
//  148       return LCD_VYSIZE_4;
//  149     }
//  150   #endif
//  151   return 0;
??LCD_GetVYSizeEx_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??LCD_GetVYSizeEx_1:
        LJMP    ?BRET
        CFI EndBlock cfiBlock5
//  152 }
//  153 
//  154 /*********************************************************************
//  155 *
//  156 *       LCD_GetBitsPerPixelEx
//  157 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  158 int LCD_GetBitsPerPixelEx(int LayerIndex) {
LCD_GetBitsPerPixelEx:
        CFI Block cfiBlock6 Using cfiCommon0
        CFI Function LCD_GetBitsPerPixelEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  159   if (LayerIndex == 0) {
        MOV     A,R2
        ORL     A,R3
        JNZ     ??LCD_GetBitsPerPixelEx_0
//  160     return LCD_BITSPERPIXEL;
        MOV     R2,#0x10
        SJMP    ??LCD_GetBitsPerPixelEx_1
//  161   }
//  162   #if GUI_NUM_LAYERS > 1
//  163     if (LayerIndex == 1) {
//  164       return LCD_BITSPERPIXEL_1;
//  165     }
//  166   #endif
//  167   #if GUI_NUM_LAYERS > 2
//  168     if (LayerIndex == 2) {
//  169       return LCD_BITSPERPIXEL_2;
//  170     }
//  171   #endif
//  172   #if GUI_NUM_LAYERS > 3
//  173     if (LayerIndex == 3) {
//  174       return LCD_BITSPERPIXEL_3;
//  175     }
//  176   #endif
//  177   #if GUI_NUM_LAYERS > 4
//  178     if (LayerIndex == 4) {
//  179       return LCD_BITSPERPIXEL_4;
//  180     }
//  181   #endif
//  182   return 0;
??LCD_GetBitsPerPixelEx_0:
        MOV     R2,#0x0
??LCD_GetBitsPerPixelEx_1:
        SJMP    ??Subroutine2_0
        CFI EndBlock cfiBlock6
//  183 }
//  184 
//  185 /*********************************************************************
//  186 *
//  187 *       LCD_GetBitsPerPixel_L0Ex
//  188 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  189 int LCD_GetBitsPerPixel_L0Ex(int LayerIndex) {
LCD_GetBitsPerPixel_L0Ex:
        CFI Block cfiBlock7 Using cfiCommon0
        CFI Function LCD_GetBitsPerPixel_L0Ex
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  190   if (LayerIndex == 0) {
        MOV     A,R2
        ORL     A,R3
        JNZ     ??LCD_GetBitsPerPixel_L0Ex_0
//  191     return LCD_BITSPERPIXEL_L0;
        MOV     R2,#0x10
        SJMP    ??LCD_GetBitsPerPixel_L0Ex_1
//  192   }
//  193   #if GUI_NUM_LAYERS > 1
//  194     if (LayerIndex == 1) {
//  195       return LCD_BITSPERPIXEL_L0_1;
//  196     }
//  197   #endif
//  198   #if GUI_NUM_LAYERS > 2
//  199     if (LayerIndex == 2) {
//  200       return LCD_BITSPERPIXEL_L0_2;
//  201     }
//  202   #endif
//  203   #if GUI_NUM_LAYERS > 3
//  204     if (LayerIndex == 3) {
//  205       return LCD_BITSPERPIXEL_L0_3;
//  206     }
//  207   #endif
//  208   #if GUI_NUM_LAYERS > 4
//  209     if (LayerIndex == 4) {
//  210       return LCD_BITSPERPIXEL_L0_4;
//  211     }
//  212   #endif
//  213   return 0;
??LCD_GetBitsPerPixel_L0Ex_0:
        MOV     R2,#0x0
??LCD_GetBitsPerPixel_L0Ex_1:
        SJMP    ??Subroutine2_0
        CFI EndBlock cfiBlock7
//  214 }
//  215 
//  216 /*********************************************************************
//  217 *
//  218 *       LCD_GetNumColorsEx
//  219 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  220 U32 LCD_GetNumColorsEx(int LayerIndex) {
LCD_GetNumColorsEx:
        CFI Block cfiBlock8 Using cfiCommon0
        CFI Function LCD_GetNumColorsEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  221   if (LayerIndex == 0) {
        MOV     A,R2
        ORL     A,R3
        MOV     R2,#0x0
        MOV     R3,#0x0
        JNZ     ??LCD_GetNumColorsEx_0
//  222     return LCD_NUM_COLORS;
        MOV     R4,#0x1
        SJMP    ??LCD_GetNumColorsEx_1
//  223   }
//  224   #if GUI_NUM_LAYERS > 1
//  225     if (LayerIndex == 1) {
//  226       return LCD_NUM_COLORS_1;
//  227     }
//  228   #endif
//  229   #if GUI_NUM_LAYERS > 2
//  230     if (LayerIndex == 2) {
//  231       return LCD_NUM_COLORS_2;
//  232     }
//  233   #endif
//  234   #if GUI_NUM_LAYERS > 3
//  235     if (LayerIndex == 3) {
//  236       return LCD_NUM_COLORS_3;
//  237     }
//  238   #endif
//  239   #if GUI_NUM_LAYERS > 4
//  240     if (LayerIndex == 4) {
//  241       return LCD_NUM_COLORS_4;
//  242     }
//  243   #endif
//  244   return 0;
??LCD_GetNumColorsEx_0:
        MOV     R4,#0x0
        CFI EndBlock cfiBlock8
??LCD_GetNumColorsEx_1:
        REQUIRE ?Subroutine1
        ; // Fall through to label ?Subroutine1
//  245 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock9 Using cfiCommon0
        CFI NoFunction
        MOV     R5,#0x0
        LJMP    ?BRET
        CFI EndBlock cfiBlock9
//  246 
//  247 /*********************************************************************
//  248 *
//  249 *       LCD_GetYMagEx
//  250 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  251 int LCD_GetYMagEx(int LayerIndex) {
LCD_GetYMagEx:
        CFI Block cfiBlock10 Using cfiCommon0
        CFI Function LCD_GetYMagEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  252   if (LayerIndex == 0) {
        MOV     A,R2
        ORL     A,R3
        JNZ     ??LCD_GetYMagEx_0
//  253     return LCD_YMAG;
        MOV     R2,#0x1
        SJMP    ??LCD_GetYMagEx_1
//  254   }
//  255   #if GUI_NUM_LAYERS > 1
//  256     if (LayerIndex == 1) {
//  257       return LCD_YMAG_1;
//  258     }
//  259   #endif
//  260   #if GUI_NUM_LAYERS > 2
//  261     if (LayerIndex == 2) {
//  262       return LCD_YMAG_2;
//  263     }
//  264   #endif
//  265   #if GUI_NUM_LAYERS > 3
//  266     if (LayerIndex == 3) {
//  267       return LCD_YMAG_3;
//  268     }
//  269   #endif
//  270   #if GUI_NUM_LAYERS > 4
//  271     if (LayerIndex == 4) {
//  272       return LCD_YMAG_4;
//  273     }
//  274   #endif
//  275   return 0;
??LCD_GetYMagEx_0:
        MOV     R2,#0x0
??LCD_GetYMagEx_1:
        SJMP    ??Subroutine2_0
        CFI EndBlock cfiBlock10
//  276 }
//  277 
//  278 /*********************************************************************
//  279 *
//  280 *       LCD_GetXMagEx
//  281 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  282 int LCD_GetXMagEx(int LayerIndex) {
LCD_GetXMagEx:
        CFI Block cfiBlock11 Using cfiCommon0
        CFI Function LCD_GetXMagEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  283   if (LayerIndex == 0) {
        MOV     A,R2
        ORL     A,R3
        JNZ     ??LCD_GetXMagEx_0
//  284     return LCD_XMAG;
        MOV     R2,#0x1
        SJMP    ??LCD_GetXMagEx_1
//  285   }
//  286   #if GUI_NUM_LAYERS > 1
//  287     if (LayerIndex == 1) {
//  288       return LCD_XMAG_1;
//  289     }
//  290   #endif
//  291   #if GUI_NUM_LAYERS > 2
//  292     if (LayerIndex == 2) {
//  293       return LCD_XMAG_2;
//  294     }
//  295   #endif
//  296   #if GUI_NUM_LAYERS > 3
//  297     if (LayerIndex == 3) {
//  298       return LCD_XMAG_3;
//  299     }
//  300   #endif
//  301   #if GUI_NUM_LAYERS > 4
//  302     if (LayerIndex == 4) {
//  303       return LCD_XMAG_4;
//  304     }
//  305   #endif
//  306   return 0;
??LCD_GetXMagEx_0:
        MOV     R2,#0x0
??LCD_GetXMagEx_1:
        SJMP    ??Subroutine2_0
        CFI EndBlock cfiBlock11
//  307 }
//  308 
//  309 /*********************************************************************
//  310 *
//  311 *       LCD_GetFixedPaletteEx
//  312 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  313 I32 LCD_GetFixedPaletteEx(int LayerIndex) {
LCD_GetFixedPaletteEx:
        CFI Block cfiBlock12 Using cfiCommon0
        CFI Function LCD_GetFixedPaletteEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  314   if (LayerIndex == 0) {
        MOV     A,R2
        ORL     A,R3
        JNZ     ??LCD_GetFixedPaletteEx_0
//  315     return LCD_FIXEDPALETTE;
        MOV     R2,#0x35
        MOV     R3,#0x2
        SJMP    ??LCD_GetFixedPaletteEx_1
//  316   }
//  317   #if GUI_NUM_LAYERS > 1
//  318     if (LayerIndex == 1) {
//  319       return LCD_FIXEDPALETTE_1;
//  320     }
//  321   #endif
//  322   #if GUI_NUM_LAYERS > 2
//  323     if (LayerIndex == 2) {
//  324       return LCD_FIXEDPALETTE_2;
//  325     }
//  326   #endif
//  327   #if GUI_NUM_LAYERS > 3
//  328     if (LayerIndex == 3) {
//  329       return LCD_FIXEDPALETTE_3;
//  330     }
//  331   #endif
//  332   #if GUI_NUM_LAYERS > 4
//  333     if (LayerIndex == 4) {
//  334       return LCD_FIXEDPALETTE_4;
//  335     }
//  336   #endif
//  337   return 0;
??LCD_GetFixedPaletteEx_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??LCD_GetFixedPaletteEx_1:
        MOV     R4,#0x0
        SJMP    ?Subroutine1
        CFI EndBlock cfiBlock12
//  338 }
//  339 
//  340 /*********************************************************************
//  341 *
//  342 *       LCD_GetMirrorXEx
//  343 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  344 int LCD_GetMirrorXEx(int LayerIndex) {
LCD_GetMirrorXEx:
        CFI Block cfiBlock13 Using cfiCommon0
        CFI Function LCD_GetMirrorXEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  345   if (LayerIndex == 0) {
//  346     return LCD_MIRROR_X;
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock13
//  347   }
//  348   #if GUI_NUM_LAYERS > 1
//  349     if (LayerIndex == 1) {
//  350       return LCD_MIRROR_X_1;
//  351     }
//  352   #endif
//  353   #if GUI_NUM_LAYERS > 2
//  354     if (LayerIndex == 2) {
//  355       return LCD_MIRROR_X_2;
//  356     }
//  357   #endif
//  358   #if GUI_NUM_LAYERS > 3
//  359     if (LayerIndex == 3) {
//  360       return LCD_MIRROR_X_3;
//  361     }
//  362   #endif
//  363   #if GUI_NUM_LAYERS > 4
//  364     if (LayerIndex == 4) {
//  365       return LCD_MIRROR_X_4;
//  366     }
//  367   #endif
//  368   return 0;
//  369 }
//  370 
//  371 /*********************************************************************
//  372 *
//  373 *       LCD_GetMirrorYEx
//  374 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  375 int LCD_GetMirrorYEx(int LayerIndex) {
LCD_GetMirrorYEx:
        CFI Block cfiBlock14 Using cfiCommon0
        CFI Function LCD_GetMirrorYEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  376   if (LayerIndex == 0) {
//  377     return LCD_MIRROR_Y;
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock14
//  378   }
//  379   #if GUI_NUM_LAYERS > 1
//  380     if (LayerIndex == 1) {
//  381       return LCD_MIRROR_Y_1;
//  382     }
//  383   #endif
//  384   #if GUI_NUM_LAYERS > 2
//  385     if (LayerIndex == 2) {
//  386       return LCD_MIRROR_Y_2;
//  387     }
//  388   #endif
//  389   #if GUI_NUM_LAYERS > 3
//  390     if (LayerIndex == 3) {
//  391       return LCD_MIRROR_Y_3;
//  392     }
//  393   #endif
//  394   #if GUI_NUM_LAYERS > 4
//  395     if (LayerIndex == 4) {
//  396       return LCD_MIRROR_Y_4;
//  397     }
//  398   #endif
//  399   return 0;
//  400 }
//  401 
//  402 /*********************************************************************
//  403 *
//  404 *       LCD_GetSwapXYEx
//  405 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  406 int LCD_GetSwapXYEx(int LayerIndex) {
LCD_GetSwapXYEx:
        CFI Block cfiBlock15 Using cfiCommon0
        CFI Function LCD_GetSwapXYEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  407   if (LayerIndex == 0) {
//  408     return LCD_SWAP_XY;
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock15
//  409   }
//  410   #if GUI_NUM_LAYERS > 1
//  411     if (LayerIndex == 1) {
//  412       return LCD_SWAP_XY_1;
//  413     }
//  414   #endif
//  415   #if GUI_NUM_LAYERS > 2
//  416     if (LayerIndex == 2) {
//  417       return LCD_SWAP_XY_2;
//  418     }
//  419   #endif
//  420   #if GUI_NUM_LAYERS > 3
//  421     if (LayerIndex == 3) {
//  422       return LCD_SWAP_XY_3;
//  423     }
//  424   #endif
//  425   #if GUI_NUM_LAYERS > 4
//  426     if (LayerIndex == 4) {
//  427       return LCD_SWAP_XY_4;
//  428     }
//  429   #endif
//  430   return 0;
//  431 }
//  432 
//  433 /*********************************************************************
//  434 *
//  435 *       LCD_GetSwapRBEx
//  436 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  437 int LCD_GetSwapRBEx(int LayerIndex) {
LCD_GetSwapRBEx:
        CFI Block cfiBlock16 Using cfiCommon0
        CFI Function LCD_GetSwapRBEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  438   if (LayerIndex == 0) {
        MOV     A,R2
        ORL     A,R3
        JNZ     ??LCD_GetSwapRBEx_0
//  439     return LCD_SWAP_RB;
        MOV     R2,#0x1
        SJMP    ??LCD_GetSwapRBEx_1
//  440   }
//  441   #if GUI_NUM_LAYERS > 1
//  442     if (LayerIndex == 1) {
//  443       return LCD_SWAP_RB_1;
//  444     }
//  445   #endif
//  446   #if GUI_NUM_LAYERS > 2
//  447     if (LayerIndex == 2) {
//  448       return LCD_SWAP_RB_2;
//  449     }
//  450   #endif
//  451   #if GUI_NUM_LAYERS > 3
//  452     if (LayerIndex == 3) {
//  453       return LCD_SWAP_RB_3;
//  454     }
//  455   #endif
//  456   #if GUI_NUM_LAYERS > 4
//  457     if (LayerIndex == 4) {
//  458       return LCD_SWAP_RB_4;
//  459     }
//  460   #endif
//  461   return 0;
??LCD_GetSwapRBEx_0:
        MOV     R2,#0x0
??LCD_GetSwapRBEx_1:
        SJMP    ??Subroutine2_0
        CFI EndBlock cfiBlock16
//  462 }
//  463 
//  464 /*********************************************************************
//  465 *
//  466 *       LCD_GetDeltaModeEx
//  467 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  468 int LCD_GetDeltaModeEx(int LayerIndex) {
LCD_GetDeltaModeEx:
        CFI Block cfiBlock17 Using cfiCommon0
        CFI Function LCD_GetDeltaModeEx
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  469   if (LayerIndex == 0) {
//  470     return LCD_DELTA_MODE;
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock17
//  471   }
//  472   #if GUI_NUM_LAYERS > 1
//  473     if (LayerIndex == 1) {
//  474       return LCD_DELTA_MODE_1;
//  475     }
//  476   #endif
//  477   #if GUI_NUM_LAYERS > 2
//  478     if (LayerIndex == 2) {
//  479       return LCD_DELTA_MODE_2;
//  480     }
//  481   #endif
//  482   #if GUI_NUM_LAYERS > 3
//  483     if (LayerIndex == 3) {
//  484       return LCD_DELTA_MODE_3;
//  485     }
//  486   #endif
//  487   #if GUI_NUM_LAYERS > 4
//  488     if (LayerIndex == 4) {
//  489       return LCD_DELTA_MODE_4;
//  490     }
//  491   #endif
//  492   return 0;
//  493 }

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetXSizeEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetXSizeEx

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetYSizeEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetYSizeEx

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetVXSizeEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetVXSizeEx

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetVYSizeEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetVYSizeEx

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetBitsPerPixelEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetBitsPerPixelEx

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetBitsPerPixel_L0Ex?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetBitsPerPixel_L0Ex

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetNumColorsEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetNumColorsEx

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetYMagEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetYMagEx

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetXMagEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetXMagEx

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetFixedPaletteEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetFixedPaletteEx

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetMirrorXEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetMirrorXEx

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetMirrorYEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetMirrorYEx

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetSwapXYEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetSwapXYEx

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetSwapRBEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetSwapRBEx

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_GetDeltaModeEx?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    LCD_GetDeltaModeEx

        END
//  494 
//  495 /************************* End of file ******************************/
// 
// 171 bytes in segment BANKED_CODE
//  90 bytes in segment BANK_RELAYS
// 
// 261 bytes of CODE memory
//
//Errors: none
//Warnings: none
