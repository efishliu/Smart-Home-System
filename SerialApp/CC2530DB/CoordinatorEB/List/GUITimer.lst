###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         14/Jun/2016  16:18:49 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Cor #
#                          e\GUITimer.c                                       #
#    Command line       =  -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\..\..\..\Tools\CC2530D #
#                          B\f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func      #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\..\..\..\Tools\CC2530D #
#                          B\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0            #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1001                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโ #
#                          ลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5. #
#                          1a\Components\uCGUI\Core\GUITimer.c -D             #
#                          HAL_UART=TRUE -D SERIAL_APP_PORT=0 -D COOR -D      #
#                          LCD_SUPPORTED -D NV_INIT -lC                       #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\ -lA   #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\       #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\Obj\ -e     #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\ -I                    #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\Public\ -I             #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \uCGUI\Core\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ2 #
#                          10\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\uCGUI\MultiLayer\ -I              #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \uCGUI\Config\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสม #
#                          ฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Pr #
#                          ojects\zstack\Utilities\SerialApp\CC2530DB\..\Coor #
#                          dinator\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Z #
#                          igBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Utilities\SerialApp\CC2530DB\..\..\..\ZMai #
#                          n\TI2530DB\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ21 #
#                          0\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje #
#                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\. #
#                          .\..\Components\hal\include\ -I                    #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \hal\target\CC2530EB\ -I                           #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ #
#                          210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\high_level\ -I               #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\ -I                           #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\single_chip\ -I               #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mt\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBe #
#                          eอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zst #
#                          ack\Utilities\SerialApp\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \services\saddr\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื #
#                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ #
#                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\.. #
#                          \..\..\..\Components\services\sdata\ -I            #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\af\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210 #
#                          \ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projec #
#                          ts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\.. #
#                          \..\Components\stack\nwk\ -I                       #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\sapi\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ2 #
#                          10\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\stack\sec\ -I                     #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\sys\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ21 #
#                          0\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje #
#                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\. #
#                          .\..\Components\stack\zdo\ -I                      #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \zmac\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Zig #
#                          Beeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\z #
#                          stack\Utilities\SerialApp\CC2530DB\..\..\..\..\..\ #
#                          Components\zmac\f8w\ -Ohz --require_prototypes     #
#    List file          =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\GUITim #
#                          er.lst                                             #
#    Object file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\Obj\GUITime #
#                          r.r51                                              #
#                                                                             #
#                                                                             #
###############################################################################

F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Core\GUITimer.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              ตC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUITimer.c
     16          Purpose     : Supplies timers
     17          ----------------------------------------------------------------------
     18          ---------------------------END-OF-HEADER------------------------------
     19          */
     20          
     21          #include <stddef.h>           /* needed for definition of NULL */
     22          #include "GUI_Protected.h"

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1
     23          
     24          /*********************************************************************
     25          *
     26          *       Defines
     27          *
     28          **********************************************************************
     29          */
     30          
     31          #define GUI_TIMER_H2P(h) (GUI_TIMER_Obj*)GUI_ALLOC_h2p(h)
     32          
     33          /*********************************************************************
     34          *
     35          *       Types
     36          *
     37          **********************************************************************
     38          */
     39          
     40          typedef struct {
     41            GUI_TIMER_CALLBACK* cb;
     42            GUI_TIMER_HANDLE hNext;
     43            int Flags;
     44          	U32 Context;
     45          	GUI_TIMER_TIME t0;
     46          	GUI_TIMER_TIME Period;
     47          } GUI_TIMER_Obj;
     48          
     49          /*********************************************************************
     50          *
     51          *       Static data
     52          *
     53          **********************************************************************
     54          */
     55          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     56          GUI_TIMER_HANDLE hFirstTimer;
   \                     hFirstTimer:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     57          GUI_TIMER_HANDLE _hActiveTimer;
   \                     _hActiveTimer:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
     58          
     59          /*********************************************************************
     60          *
     61          *       Static code
     62          *
     63          **********************************************************************
     64          */
     65          /*********************************************************************
     66          *
     67          *       _Unlink
     68          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     69          static void _Unlink(GUI_TIMER_HANDLE hTimer) {
   \                     _Unlink:
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
     70            GUI_TIMER_Obj* pTimer = GUI_TIMER_H2P(hTimer);
   \   000009                ; Setup parameters for call to function GUI_ALLOC_h2p
   \   000009   12....       LCALL   ?Subroutine6 & 0xFFFF
     71            GUI_TIMER_HANDLE hi;
     72            GUI_TIMER_Obj*   pi;
     73          /* Check if it is the first element */
     74            if (hFirstTimer == hTimer) {
   \                     ??CrossCallReturnLabel_8:
   \   00000C   6E           XRL     A,R6
   \   00000D   7003         JNZ     ??_Unlink_0
   \   00000F   A3           INC     DPTR
   \   000010   E0           MOVX    A,@DPTR
   \   000011   6F           XRL     A,R7
   \                     ??_Unlink_0:
   \   000012   7009         JNZ     ??_Unlink_1
     75              hFirstTimer = pTimer->hNext;
   \   000014   8A82         MOV     DPL,R2
   \   000016   8B83         MOV     DPH,R3
   \   000018   12....       LCALL   ?Subroutine9 & 0xFFFF
     76              return;
     77          	}
   \                     ??CrossCallReturnLabel_14:
   \   00001B   802F         SJMP    ??_Unlink_2
     78            hi = hFirstTimer;
   \                     ??_Unlink_1:
   \   00001D   90....       MOV     DPTR,#hFirstTimer
   \   000020   8006         SJMP    ??_Unlink_3
     79          /* Try to find it in the list ... */
     80            while(hi) {
     81              /* GUI_ASSERT(hi<1000,0); */
     82              pi = GUI_TIMER_H2P(hi);
     83              if (pi->hNext == hTimer) {
     84                pi->hNext = pTimer->hNext;
     85                break;
     86          		}        
     87              hi = pi->hNext;
   \                     ??_Unlink_4:
   \   000022   8A82         MOV     DPL,R2
   \   000024   8B83         MOV     DPH,R3
   \   000026   A3           INC     DPTR
   \   000027   A3           INC     DPTR
   \                     ??_Unlink_3:
   \   000028   E0           MOVX    A,@DPTR
   \   000029   FA           MOV     R2,A
   \   00002A   A3           INC     DPTR
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   FB           MOV     R3,A
   \   00002D   EA           MOV     A,R2
   \   00002E   4B           ORL     A,R3
   \   00002F   6020         JZ      ??_Unlink_5
   \   000031                ; Setup parameters for call to function GUI_ALLOC_h2p
   \   000031   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   000034   E0           MOVX    A,@DPTR
   \   000035   6E           XRL     A,R6
   \   000036   7003         JNZ     ??_Unlink_6
   \   000038   A3           INC     DPTR
   \   000039   E0           MOVX    A,@DPTR
   \   00003A   6F           XRL     A,R7
   \                     ??_Unlink_6:
   \   00003B   70E5         JNZ     ??_Unlink_4
   \   00003D   85..82       MOV     DPL,?V0 + 0
   \   000040   85..83       MOV     DPH,?V0 + 1
   \   000043   12....       LCALL   ??Subroutine13_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   000046   8A82         MOV     DPL,R2
   \   000048   8B83         MOV     DPH,R3
   \   00004A   A3           INC     DPTR
   \   00004B   A3           INC     DPTR
   \                     ??_Unlink_2:
   \   00004C   E8           MOV     A,R0
   \   00004D   F0           MOVX    @DPTR,A
   \   00004E   A3           INC     DPTR
   \   00004F   E9           MOV     A,R1
   \   000050   F0           MOVX    @DPTR,A
     88            }  
   \                     ??_Unlink_5:
   \   000051   02....       LJMP    ??Subroutine15_0 & 0xFFFF
     89          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine13_0:
   \   000000   A3           INC     DPTR
   \   000001   A3           INC     DPTR
   \   000002                REQUIRE ??Subroutine14_0
   \   000002                ; // Fall through to label ??Subroutine14_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine14_0:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F9           MOV     R1,A
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   12....       LCALL   ??GUI_ALLOC_h2p?relay
   \   000003   8A..         MOV     ?V0 + 0,R2
   \   000005   8B..         MOV     ?V0 + 1,R3
   \   000007   90....       MOV     DPTR,#hFirstTimer
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   A3           INC     DPTR
   \   000001   A3           INC     DPTR
   \   000002   E0           MOVX    A,@DPTR
   \   000003   F8           MOV     R0,A
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   90....       MOV     DPTR,#hFirstTimer
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine15_0:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_18:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   12....       LCALL   ??GUI_ALLOC_h2p?relay
   \   000003   8A82         MOV     DPL,R2
   \   000005   8B83         MOV     DPH,R3
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   22           RET
     90          
     91          /*********************************************************************
     92          *
     93          *       _Link
     94          *
     95          * Purpose:
     96          *   This routine inserts the new timer (referenced by its handle) into
     97          *	  the linked list. The linked list is sorted according to timestamps.
     98          *	  The first element is the timer which expires first.
     99          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   8882         MOV     DPL,R0
   \   000002   8983         MOV     DPH,R1
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C                REQUIRE ??Subroutine13_0
   \   00000C                ; // Fall through to label ??Subroutine13_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    100          static void _Link(GUI_TIMER_HANDLE hNew) {
   \                     _Link:
   \   000000   74EE         MOV     A,#-0x12
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 18
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 4,R2
   \   000007   8B..         MOV     ?V0 + 5,R3
    101            GUI_TIMER_Obj*   pNew        = GUI_TIMER_H2P(hNew);
   \   000009                ; Setup parameters for call to function GUI_ALLOC_h2p
   \   000009   12....       LCALL   ?Subroutine6 & 0xFFFF
    102            GUI_TIMER_Obj*   pTimer;
    103            GUI_TIMER_Obj*   pNext;
    104            GUI_TIMER_HANDLE hNext;
    105            if (hFirstTimer ==0) { /* List is empty, make it the only element */
   \                     ??CrossCallReturnLabel_9:
   \   00000C   F8           MOV     R0,A
   \   00000D   A3           INC     DPTR
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   F9           MOV     R1,A
   \   000010   E8           MOV     A,R0
   \   000011   49           ORL     A,R1
   \   000012   90....       MOV     DPTR,#hFirstTimer
   \   000015   7016         JNZ     ??_Link_0
    106              hFirstTimer = hNew;
   \   000017   E5..         MOV     A,?V0 + 4
   \   000019   F0           MOVX    @DPTR,A
   \   00001A   A3           INC     DPTR
   \   00001B   E5..         MOV     A,?V0 + 5
   \   00001D   F0           MOVX    @DPTR,A
    107          	  pNew->hNext = 0;
   \   00001E   8A82         MOV     DPL,R2
   \   000020   8B83         MOV     DPH,R3
   \   000022   A3           INC     DPTR
   \   000023   A3           INC     DPTR
   \   000024   E4           CLR     A
   \   000025   F0           MOVX    @DPTR,A
   \   000026   A3           INC     DPTR
   \                     ??_Link_1:
   \   000027   F0           MOVX    @DPTR,A
   \   000028   7F0A         MOV     R7,#0xa
   \   00002A   02....       LJMP    ?BANKED_LEAVE_XDATA
    108            } else {
    109              GUI_TIMER_Obj* pFirstTimer      = GUI_TIMER_H2P(hFirstTimer);
   \                     ??_Link_0:
   \   00002D                ; Setup parameters for call to function GUI_ALLOC_h2p
   \   00002D   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_12:
   \   000030   8A..         MOV     ?V0 + 2,R2
   \   000032   8B..         MOV     ?V0 + 3,R3
   \   000034   A8..         MOV     R0,?V0 + 2
   \   000036   A9..         MOV     R1,?V0 + 3
    110          /* Check if we have to make it the first element */
    111              if ((pNew->t0 - pFirstTimer->t0) <=0) {
   \   000038   85..82       MOV     DPL,?V0 + 0
   \   00003B   85..83       MOV     DPH,?V0 + 1
   \   00003E   A3           INC     DPTR
   \   00003F   A3           INC     DPTR
   \   000040   A3           INC     DPTR
   \   000041   A3           INC     DPTR
   \   000042   A3           INC     DPTR
   \   000043   A3           INC     DPTR
   \   000044   A3           INC     DPTR
   \   000045   A3           INC     DPTR
   \   000046   A3           INC     DPTR
   \   000047   A3           INC     DPTR
   \   000048   C082         PUSH    DPL
   \   00004A   C083         PUSH    DPH
   \   00004C   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   00004F   D083         POP     DPH
   \   000051   D082         POP     DPL
   \   000053   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   000056   90....       MOV     DPTR,#hFirstTimer
   \   000059   E0           MOVX    A,@DPTR
   \   00005A   501C         JNC     ??_Link_2
    112                pNew->hNext = hFirstTimer;
   \   00005C   F8           MOV     R0,A
   \   00005D   A3           INC     DPTR
   \   00005E   E0           MOVX    A,@DPTR
   \   00005F   F9           MOV     R1,A
   \   000060   85..82       MOV     DPL,?V0 + 0
   \   000063   85..83       MOV     DPH,?V0 + 1
   \   000066   A3           INC     DPTR
   \   000067   A3           INC     DPTR
   \   000068   E8           MOV     A,R0
   \   000069   F0           MOVX    @DPTR,A
   \   00006A   A3           INC     DPTR
   \   00006B   E9           MOV     A,R1
   \   00006C   F0           MOVX    @DPTR,A
    113                hFirstTimer = hNew;
   \   00006D   90....       MOV     DPTR,#hFirstTimer
   \                     ??_Link_3:
   \   000070   E5..         MOV     A,?V0 + 4
   \   000072   F0           MOVX    @DPTR,A
   \   000073   A3           INC     DPTR
   \   000074   E5..         MOV     A,?V0 + 5
   \   000076   80AF         SJMP    ??_Link_1
    114          			return;
    115          		} else {
    116                GUI_TIMER_HANDLE hTimer = hFirstTimer;
   \                     ??_Link_2:
   \   000078   F5..         MOV     ?V0 + 6,A
   \   00007A   A3           INC     DPTR
   \   00007B   E0           MOVX    A,@DPTR
   \   00007C   F5..         MOV     ?V0 + 7,A
    117          /* Put it into the list */
    118                do {
    119                  pTimer       = GUI_TIMER_H2P(hTimer);
   \                     ??_Link_4:
   \   00007E                ; Setup parameters for call to function GUI_ALLOC_h2p
   \   00007E   AA..         MOV     R2,?V0 + 6
   \   000080   AB..         MOV     R3,?V0 + 7
   \   000082   12....       LCALL   ??GUI_ALLOC_h2p?relay
   \   000085   8A..         MOV     ?V0 + 2,R2
   \   000087   8B..         MOV     ?V0 + 3,R3
    120                  hNext        = pTimer->hNext;
   \   000089   8A82         MOV     DPL,R2
   \   00008B   8B83         MOV     DPH,R3
   \   00008D   A3           INC     DPTR
   \   00008E   A3           INC     DPTR
   \   00008F   E0           MOVX    A,@DPTR
   \   000090   FE           MOV     R6,A
   \   000091   A3           INC     DPTR
   \   000092   E0           MOVX    A,@DPTR
   \   000093   FF           MOV     R7,A
    121                  if (hNext ==0)
   \   000094   EE           MOV     A,R6
   \   000095   4F           ORL     A,R7
   \   000096   7017         JNZ     ??_Link_5
    122          					goto Append;
    123                  pNext      = GUI_TIMER_H2P(hNext);
    124          				if ((pNew->t0 - pNext->t0) <=0) {
    125                    pNew->hNext  = hNext;
    126                    pTimer->hNext= hNew;
    127                    return;
    128          				}
    129          			} while(1);
    130          /* Put it at the end of the list */
    131          Append:
    132                pNew->hNext  = hNext;
   \                     ??_Link_6:
   \   000098   85..82       MOV     DPL,?V0 + 0
   \   00009B   85..83       MOV     DPH,?V0 + 1
   \   00009E   A3           INC     DPTR
   \   00009F   A3           INC     DPTR
   \   0000A0   EE           MOV     A,R6
   \   0000A1   F0           MOVX    @DPTR,A
   \   0000A2   A3           INC     DPTR
   \   0000A3   EF           MOV     A,R7
   \   0000A4   F0           MOVX    @DPTR,A
    133                pTimer->hNext= hNew;
   \   0000A5   85..82       MOV     DPL,?V0 + 2
   \   0000A8   85..83       MOV     DPH,?V0 + 3
   \   0000AB   A3           INC     DPTR
   \   0000AC   A3           INC     DPTR
   \   0000AD   80C1         SJMP    ??_Link_3
   \                     ??_Link_5:
   \   0000AF                ; Setup parameters for call to function GUI_ALLOC_h2p
   \   0000AF   EE           MOV     A,R6
   \   0000B0   FA           MOV     R2,A
   \   0000B1   EF           MOV     A,R7
   \   0000B2   FB           MOV     R3,A
   \   0000B3   12....       LCALL   ??GUI_ALLOC_h2p?relay
   \   0000B6   8A..         MOV     ?V0 + 8,R2
   \   0000B8   8B..         MOV     ?V0 + 9,R3
   \   0000BA   A8..         MOV     R0,?V0 + 8
   \   0000BC   A9..         MOV     R1,?V0 + 9
   \   0000BE   85..82       MOV     DPL,?V0 + 0
   \   0000C1   85..83       MOV     DPH,?V0 + 1
   \   0000C4   A3           INC     DPTR
   \   0000C5   A3           INC     DPTR
   \   0000C6   A3           INC     DPTR
   \   0000C7   A3           INC     DPTR
   \   0000C8   A3           INC     DPTR
   \   0000C9   A3           INC     DPTR
   \   0000CA   A3           INC     DPTR
   \   0000CB   A3           INC     DPTR
   \   0000CC   A3           INC     DPTR
   \   0000CD   A3           INC     DPTR
   \   0000CE   C082         PUSH    DPL
   \   0000D0   C083         PUSH    DPH
   \   0000D2   12....       LCALL   ?Subroutine10 & 0xFFFF
    134                return;
    135          		}
    136            }
   \                     ??CrossCallReturnLabel_24:
   \   0000D5   D083         POP     DPH
   \   0000D7   D082         POP     DPL
   \   0000D9   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   0000DC   50A0         JNC     ??_Link_4
   \   0000DE   80B8         SJMP    ??_Link_6
    137          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   98           SUBB    A,R0
   \   000003   F8           MOV     R0,A
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   99           SUBB    A,R1
   \   000007   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_17:
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   F9           MOV     R1,A
   \   000001   C3           CLR     C
   \   000002   E8           MOV     A,R0
   \   000003   9401         SUBB    A,#0x1
   \   000005   E9           MOV     A,R1
   \   000006   9400         SUBB    A,#0x0
   \   000008   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00000A   65D0         XRL     A,PSW
   \   00000C   33           RLC     A
   \   00000D   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FA           MOV     R2,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FB           MOV     R3,A
   \   000005   12....       LCALL   ??GUI_ALLOC_h2p?relay
   \   000008   22           RET
    138          
    139          /*********************************************************************
    140          *
    141          *       Public code
    142          *
    143          **********************************************************************
    144          */
    145          /*********************************************************************
    146          *
    147          *       GUI_TIMER_Exec
    148          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    149          int GUI_TIMER_Exec(void) {
   \                     GUI_TIMER_Exec:
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 6
   \   000005   74FA         MOV     A,#-0x6
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    150            int r = 0;
   \   00000A   7E00         MOV     R6,#0x0
    151            GUI_TIMER_TIME t = GUI_GetTime();
   \   00000C                ; Setup parameters for call to function GUI_GetTime
   \   00000C   12....       LCALL   ??GUI_GetTime?relay
   \   00000F   8A..         MOV     ?V0 + 0,R2
   \   000011   8B..         MOV     ?V0 + 1,R3
    152            halIntState_t state;
    153            GUI_LOCK(state); {
   \   000013   A2AF         MOV     C,0xa8.7
   \   000015   E4           CLR     A
   \   000016   33           RLC     A
   \   000017   F5..         MOV     ?V0 + 2,A
   \   000019   C2AF         CLR     0xa8.7
   \   00001B   804D         SJMP    ??GUI_TIMER_Exec_0
    154              while (hFirstTimer) {
    155               	GUI_TIMER_Obj* pTimer = GUI_TIMER_H2P(hFirstTimer);
    156                if ((pTimer->t0-t) <=0) {
    157                  GUI_TIMER_MESSAGE tm;
    158                  tm.Time = t;
   \                     ??GUI_TIMER_Exec_1:
   \   00001D   85..82       MOV     DPL,?XSP + 0
   \   000020   85..83       MOV     DPH,?XSP + 1
   \   000023   12....       LCALL   ?Subroutine5 & 0xFFFF
    159          				tm.Context = pTimer->Context;
   \                     ??CrossCallReturnLabel_6:
   \   000026   12....       LCALL   ?XLOAD_R2345
   \   000029   7402         MOV     A,#0x2
   \   00002B   12....       LCALL   ?XSTACK_DISP0_8
   \   00002E   12....       LCALL   ?XSTORE_R2345
    160                  _hActiveTimer = hFirstTimer;
   \   000031   90....       MOV     DPTR,#hFirstTimer
   \   000034   12....       LCALL   ??Subroutine14_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_20:
   \   000037   90....       MOV     DPTR,#_hActiveTimer
   \   00003A   E8           MOV     A,R0
   \   00003B   F0           MOVX    @DPTR,A
   \   00003C   A3           INC     DPTR
   \   00003D   E9           MOV     A,R1
   \   00003E   F0           MOVX    @DPTR,A
    161                  hFirstTimer = pTimer->hNext;
   \   00003F   85..82       MOV     DPL,?V0 + 4
   \   000042   85..83       MOV     DPH,?V0 + 5
   \   000045   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_15:
   \   000048   E8           MOV     A,R0
   \   000049   F0           MOVX    @DPTR,A
   \   00004A   A3           INC     DPTR
   \   00004B   E9           MOV     A,R1
   \   00004C   F0           MOVX    @DPTR,A
    162                  pTimer->cb(&tm);
   \   00004D                ; Setup parameters for indirect call
   \   00004D   85..82       MOV     DPL,?XSP + 0
   \   000050   85..83       MOV     DPH,?XSP + 1
   \   000053   AA82         MOV     R2,DPL
   \   000055   AB83         MOV     R3,DPH
   \   000057   85..82       MOV     DPL,?V0 + 4
   \   00005A   85..83       MOV     DPH,?V0 + 5
   \   00005D   E0           MOVX    A,@DPTR
   \   00005E   F8           MOV     R0,A
   \   00005F   A3           INC     DPTR
   \   000060   E0           MOVX    A,@DPTR
   \   000061   F583         MOV     DPH,A
   \   000063   8882         MOV     DPL,R0
   \   000065   12....       LCALL   ?CALL_IND
    163                  r = 1;
   \   000068   7E01         MOV     R6,#0x1
    164          			} else
   \                     ??GUI_TIMER_Exec_0:
   \   00006A   90....       MOV     DPTR,#hFirstTimer
   \   00006D   12....       LCALL   ??Subroutine14_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_21:
   \   000070   E8           MOV     A,R0
   \   000071   49           ORL     A,R1
   \   000072   6026         JZ      ??GUI_TIMER_Exec_2
   \   000074                ; Setup parameters for call to function GUI_ALLOC_h2p
   \   000074   90....       MOV     DPTR,#hFirstTimer
   \   000077   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_13:
   \   00007A   8A..         MOV     ?V0 + 4,R2
   \   00007C   8B..         MOV     ?V0 + 5,R3
   \   00007E   8A82         MOV     DPL,R2
   \   000080   8B83         MOV     DPH,R3
   \   000082   A3           INC     DPTR
   \   000083   A3           INC     DPTR
   \   000084   A3           INC     DPTR
   \   000085   A3           INC     DPTR
   \   000086   A3           INC     DPTR
   \   000087   A3           INC     DPTR
   \   000088   A3           INC     DPTR
   \   000089   A3           INC     DPTR
   \   00008A   A3           INC     DPTR
   \   00008B   A3           INC     DPTR
   \   00008C   E0           MOVX    A,@DPTR
   \   00008D   C3           CLR     C
   \   00008E   95..         SUBB    A,?V0 + 0
   \   000090   F8           MOV     R0,A
   \   000091   A3           INC     DPTR
   \   000092   E0           MOVX    A,@DPTR
   \   000093   95..         SUBB    A,?V0 + 1
   \   000095   12....       LCALL   ?Subroutine11 & 0xFFFF
    165          			  break;
    166              }
    167              /*
    168          		GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
    169              pObj->t0 = Time;
    170              */
    171            } GUI_UNLOCK(state); 
   \                     ??CrossCallReturnLabel_16:
   \   000098   4083         JC      ??GUI_TIMER_Exec_1
   \                     ??GUI_TIMER_Exec_2:
   \   00009A   E5..         MOV     A,?V0 + 2
   \   00009C   A2E0         MOV     C,0xE0 /* A   */.0
   \   00009E   92AF         MOV     0xa8.7,C
    172            return r;
   \   0000A0   EE           MOV     A,R6
   \   0000A1   FA           MOV     R2,A
   \   0000A2   7B00         MOV     R3,#0x0
   \   0000A4   7406         MOV     A,#0x6
   \   0000A6   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000A9   7F08         MOV     R7,#0x8
   \   0000AB   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   0000AE                REQUIRE _A_IEN0
    173          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   E5..         MOV     A,?V0 + 0
   \   000002   F0           MOVX    @DPTR,A
   \   000003   A3           INC     DPTR
   \   000004   E5..         MOV     A,?V0 + 1
   \   000006   F0           MOVX    @DPTR,A
   \   000007   8A82         MOV     DPL,R2
   \   000009   8B83         MOV     DPH,R3
   \   00000B   A3           INC     DPTR
   \   00000C   A3           INC     DPTR
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   22           RET
    174          
    175          /*********************************************************************
    176          *
    177          *       GUI_TIMER_Create
    178          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    179          GUI_TIMER_HANDLE GUI_TIMER_Create(GUI_TIMER_CALLBACK* cb, int Time, U32 Context, int Flags) {
   \                     GUI_TIMER_Create:
   \   000000   74EC         MOV     A,#-0x14
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   8C..         MOV     ?V0 + 2,R4
   \   00000B   8D..         MOV     ?V0 + 3,R5
   \   00000D   7414         MOV     A,#0x14
   \   00000F   12....       LCALL   ?XSTACK_DISP0_8
   \   000012   78..         MOV     R0,#?V0 + 4
   \   000014   12....       LCALL   ?L_MOV_X
    180            GUI_TIMER_HANDLE hObj;
    181            GUI_TIMER_Obj* pObj;
    182            halIntState_t state;
    183            GUI_LOCK(state);
   \   000017   E5A8         MOV     A,0xa8
   \   000019   F5..         MOV     ?V0 + 8,A
   \   00001B   C2AF         CLR     0xa8.7
    184            GUI_USE_PARA(Flags);
    185            GUI_USE_PARA(Time);
    186            GUI_pfTimerExec = GUI_TIMER_Exec;
   \   00001D   90....       MOV     DPTR,#GUI_pfTimerExec
   \   000020   74..         MOV     A,#??GUI_TIMER_Exec?relay & 0xff
   \   000022   F0           MOVX    @DPTR,A
   \   000023   A3           INC     DPTR
   \   000024   74..         MOV     A,#(??GUI_TIMER_Exec?relay >> 8) & 0xff
   \   000026   F0           MOVX    @DPTR,A
    187          	{
    188              /* Alloc memory for obj */
    189              hObj = GUI_ALLOC_AllocZero(sizeof(GUI_TIMER_Obj));
   \   000027                ; Setup parameters for call to function GUI_ALLOC_AllocZero
   \   000027   7A0E         MOV     R2,#0xe
   \   000029   7B00         MOV     R3,#0x0
   \   00002B   12....       LCALL   ??GUI_ALLOC_AllocZero?relay
   \   00002E   8A..         MOV     ?V0 + 10,R2
   \   000030   8B..         MOV     ?V0 + 11,R3
   \   000032   AE..         MOV     R6,?V0 + 10
   \   000034   AF..         MOV     R7,?V0 + 11
    190              pObj = GUI_TIMER_H2P(hObj);
   \   000036                ; Setup parameters for call to function GUI_ALLOC_h2p
   \   000036   12....       LCALL   ??GUI_ALLOC_h2p?relay
    191              /* init member variables */
    192              pObj->cb = cb;
   \   000039   8A82         MOV     DPL,R2
   \   00003B   8B83         MOV     DPH,R3
   \   00003D   12....       LCALL   ?Subroutine5 & 0xFFFF
    193          		pObj->Context = Context;
   \                     ??CrossCallReturnLabel_7:
   \   000040   78..         MOV     R0,#?V0 + 4
   \   000042   12....       LCALL   ?L_MOV_TO_X
    194          		pObj->t0 = Time;	//houhh 20061018...
   \   000045   8A82         MOV     DPL,R2
   \   000047   8B83         MOV     DPH,R3
   \   000049   A3           INC     DPTR
   \   00004A   A3           INC     DPTR
   \   00004B   A3           INC     DPTR
   \   00004C   A3           INC     DPTR
   \   00004D   A3           INC     DPTR
   \   00004E   A3           INC     DPTR
   \   00004F   A3           INC     DPTR
   \   000050   A3           INC     DPTR
   \   000051   A3           INC     DPTR
   \   000052   A3           INC     DPTR
   \   000053   E5..         MOV     A,?V0 + 2
   \   000055   F0           MOVX    @DPTR,A
   \   000056   A3           INC     DPTR
   \   000057   E5..         MOV     A,?V0 + 3
   \   000059   F0           MOVX    @DPTR,A
    195              /* Link it */
    196          		_Link(hObj);
   \   00005A                ; Setup parameters for call to function _Link
   \   00005A   EE           MOV     A,R6
   \   00005B   FA           MOV     R2,A
   \   00005C   EF           MOV     A,R7
   \   00005D   FB           MOV     R3,A
   \   00005E   12....       LCALL   ??_Link?relay
    197          	} GUI_UNLOCK(state);
   \   000061   E5..         MOV     A,?V0 + 8
   \   000063   A2E7         MOV     C,0xE0 /* A   */.7
   \   000065   92AF         MOV     0xa8.7,C
    198            return hObj;
   \   000067   EE           MOV     A,R6
   \   000068   FA           MOV     R2,A
   \   000069   EF           MOV     A,R7
   \   00006A   FB           MOV     R3,A
   \   00006B   7F0C         MOV     R7,#0xc
   \   00006D   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000070                REQUIRE _A_IEN0
    199          }
    200          
    201          /*********************************************************************
    202          *
    203          *       GUI_TIMER_Delete
    204          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    205          void GUI_TIMER_Delete(GUI_TIMER_HANDLE hObj) {
   \                     GUI_TIMER_Delete:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    206          /* Unlink Timer */
    207            halIntState_t state;
    208            GUI_LOCK(state);
   \   000009   E5A8         MOV     A,0xa8
   \   00000B   F5..         MOV     ?V0 + 0,A
   \   00000D   C2AF         CLR     0xa8.7
    209            _Unlink(hObj);
   \   00000F                ; Setup parameters for call to function _Unlink
   \   00000F   12....       LCALL   ??_Unlink?relay
    210            GUI_ALLOC_Free(hObj);
   \   000012                ; Setup parameters for call to function GUI_ALLOC_Free
   \   000012   EE           MOV     A,R6
   \   000013   FA           MOV     R2,A
   \   000014   EF           MOV     A,R7
   \   000015   FB           MOV     R3,A
   \   000016   12....       LCALL   ??GUI_ALLOC_Free?relay
    211            GUI_UNLOCK(state);
   \   000019                REQUIRE ?Subroutine1
   \   000019                REQUIRE _A_IEN0
   \   000019                ; // Fall through to label ?Subroutine1
    212          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   E5..         MOV     A,?V0 + 0
   \   000002   A2E7         MOV     C,0xE0 /* A   */.7
   \   000004   92AF         MOV     0xa8.7,C
   \   000006   7F01         MOV     R7,#0x1
   \   000008   02....       LJMP    ?BANKED_LEAVE_XDATA
    213          
    214          /*********************************************************************
    215          *
    216          *       GUI_TIMER_SetPeriod
    217          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    218          void GUI_TIMER_SetPeriod(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Period) {
   \                     GUI_TIMER_SetPeriod:
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EC           MOV     A,R4
   \   000006   FE           MOV     R6,A
   \   000007   ED           MOV     A,R5
   \   000008   FF           MOV     R7,A
    219            halIntState_t state;
    220            GUI_LOCK(state); {
   \   000009   E5A8         MOV     A,0xa8
   \   00000B   F5..         MOV     ?V0 + 0,A
   \   00000D   C2AF         CLR     0xa8.7
    221              GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
    222              pObj->Period = Period;
   \   00000F                ; Setup parameters for call to function GUI_ALLOC_h2p
   \   00000F   12....       LCALL   ??GUI_ALLOC_h2p?relay
   \   000012   EA           MOV     A,R2
   \   000013   240C         ADD     A,#0xc
   \   000015   F582         MOV     DPL,A
   \   000017   EB           MOV     A,R3
   \   000018   3400         ADDC    A,#0x0
   \   00001A   F583         MOV     DPH,A
   \   00001C   EE           MOV     A,R6
   \   00001D   F0           MOVX    @DPTR,A
   \   00001E   A3           INC     DPTR
   \   00001F   EF           MOV     A,R7
   \   000020   F0           MOVX    @DPTR,A
    223            } GUI_UNLOCK(state); 
   \   000021   E5..         MOV     A,?V0 + 0
   \   000023                REQUIRE ?Subroutine0
   \   000023                REQUIRE _A_IEN0
   \   000023                ; // Fall through to label ?Subroutine0
    224          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   A2E7         MOV     C,0xE0 /* A   */.7
   \   000002   92AF         MOV     0xa8.7,C
   \   000004                REQUIRE ??Subroutine15_0
   \   000004                ; // Fall through to label ??Subroutine15_0
    225          
    226          /*********************************************************************
    227          *
    228          *       GUI_TIMER_SetTime
    229          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    230          void GUI_TIMER_SetTime(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Time) {
   \                     GUI_TIMER_SetTime:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EC           MOV     A,R4
   \   000006   FE           MOV     R6,A
   \   000007   ED           MOV     A,R5
   \   000008   FF           MOV     R7,A
    231            halIntState_t state;
    232            GUI_LOCK(state); {
   \   000009   E5A8         MOV     A,0xa8
   \   00000B   F5..         MOV     ?V0 + 0,A
   \   00000D   12....       LCALL   ?Subroutine3 & 0xFFFF
    233             	GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
    234              pObj->t0 = Time;
   \                     ??CrossCallReturnLabel_2:
   \   000010   EE           MOV     A,R6
   \   000011   F0           MOVX    @DPTR,A
   \   000012   A3           INC     DPTR
   \   000013   EF           MOV     A,R7
   \   000014   F0           MOVX    @DPTR,A
    235            } GUI_UNLOCK(state); 
   \   000015   80..         SJMP    ?Subroutine1
   \   000017                REQUIRE _A_IEN0
    236          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   C2AF         CLR     0xa8.7
   \   000002                ; Setup parameters for call to function GUI_ALLOC_h2p
   \   000002                ; Setup parameters for call to function GUI_ALLOC_h2p
   \   000002   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_19:
   \   000005   A3           INC     DPTR
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   A3           INC     DPTR
   \   00000D   22           RET
    237          
    238          //////

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    239          void GUI_TIMER_Context(GUI_TIMER_HANDLE hObj, U32 Context) {
   \                     GUI_TIMER_Context:
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   740C         MOV     A,#0xc
   \   000007   12....       LCALL   ?XSTACK_DISP0_8
   \   00000A   78..         MOV     R0,#?V0 + 0
   \   00000C   12....       LCALL   ?L_MOV_X
    240            halIntState_t state;
    241            GUI_LOCK(state); {
   \   00000F   E5A8         MOV     A,0xa8
   \   000011   FE           MOV     R6,A
   \   000012   C2AF         CLR     0xa8.7
    242             	GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
    243              pObj->Context = Context;
   \   000014                ; Setup parameters for call to function GUI_ALLOC_h2p
   \   000014   12....       LCALL   ?Subroutine7 & 0xFFFF
    244            } GUI_UNLOCK(state); 
   \                     ??CrossCallReturnLabel_11:
   \   000017   A3           INC     DPTR
   \   000018   A3           INC     DPTR
   \   000019   A3           INC     DPTR
   \   00001A   A3           INC     DPTR
   \   00001B   78..         MOV     R0,#?V0 + 0
   \   00001D   12....       LCALL   ?L_MOV_TO_X
   \   000020   EE           MOV     A,R6
   \   000021   80..         SJMP    ?Subroutine0
   \   000023                REQUIRE _A_IEN0
    245          }
    246          //////
    247          
    248          /*********************************************************************
    249          *
    250          *       GUI_TIMER_SetDelay
    251          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    252          void GUI_TIMER_SetDelay(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Delay) {
   \                     GUI_TIMER_SetDelay:
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 0,R4
   \   00000B   8D..         MOV     ?V0 + 1,R5
    253            halIntState_t state;
    254            GUI_LOCK(state); {
   \   00000D   E5A8         MOV     A,0xa8
   \   00000F   F5..         MOV     ?V0 + 2,A
   \   000011   12....       LCALL   ?Subroutine3 & 0xFFFF
    255             	GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
    256              pObj->t0 = Delay;
   \                     ??CrossCallReturnLabel_3:
   \   000014   E5..         MOV     A,?V0 + 0
   \   000016   F0           MOVX    @DPTR,A
   \   000017   A3           INC     DPTR
   \   000018   E5..         MOV     A,?V0 + 1
   \   00001A   12....       LCALL   ?Subroutine4 & 0xFFFF
    257          		_Unlink(hObj);
    258          		_Link(hObj);
    259            } GUI_UNLOCK(state); 
   \                     ??CrossCallReturnLabel_4:
   \   00001D   A2E7         MOV     C,0xE0 /* A   */.7
   \   00001F   92AF         MOV     0xa8.7,C
    260          }
   \   000021   7F03         MOV     R7,#0x3
   \   000023   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000026                REQUIRE _A_IEN0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function _Unlink
   \   000001                ; Setup parameters for call to function _Unlink
   \   000001   EE           MOV     A,R6
   \   000002   FA           MOV     R2,A
   \   000003   EF           MOV     A,R7
   \   000004   FB           MOV     R3,A
   \   000005   12....       LCALL   ??_Unlink?relay
   \   000008                ; Setup parameters for call to function _Link
   \   000008                ; Setup parameters for call to function _Link
   \   000008   EE           MOV     A,R6
   \   000009   FA           MOV     R2,A
   \   00000A   EF           MOV     A,R7
   \   00000B   FB           MOV     R3,A
   \   00000C   12....       LCALL   ??_Link?relay
   \   00000F   E5..         MOV     A,?V0 + 2
   \   000011   22           RET
    261          
    262          /*********************************************************************
    263          *
    264          *       GUI_TIMER_Restart
    265          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    266          void GUI_TIMER_Restart(GUI_TIMER_HANDLE hObj) {
   \                     GUI_TIMER_Restart:
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    267            halIntState_t state;
    268            GUI_TIMER_Obj* pObj;
    269            GUI_LOCK(state);
   \   000009   A2AF         MOV     C,0xa8.7
   \   00000B   E4           CLR     A
   \   00000C   33           RLC     A
   \   00000D   F5..         MOV     ?V0 + 2,A
   \   00000F   C2AF         CLR     0xa8.7
    270            {
    271              if (hObj == 0) {
   \   000011   EE           MOV     A,R6
   \   000012   4F           ORL     A,R7
   \   000013   7008         JNZ     ??GUI_TIMER_Restart_0
    272                hObj = _hActiveTimer;
   \   000015   90....       MOV     DPTR,#_hActiveTimer
   \   000018   E0           MOVX    A,@DPTR
   \   000019   FE           MOV     R6,A
   \   00001A   A3           INC     DPTR
   \   00001B   E0           MOVX    A,@DPTR
   \   00001C   FF           MOV     R7,A
    273              }
    274             	pObj = GUI_TIMER_H2P(hObj);
   \                     ??GUI_TIMER_Restart_0:
   \   00001D                ; Setup parameters for call to function GUI_ALLOC_h2p
   \   00001D   EE           MOV     A,R6
   \   00001E   FA           MOV     R2,A
   \   00001F   EF           MOV     A,R7
   \   000020   FB           MOV     R3,A
   \   000021   12....       LCALL   ??GUI_ALLOC_h2p?relay
   \   000024   8A..         MOV     ?V0 + 0,R2
   \   000026   8B..         MOV     ?V0 + 1,R3
    275              pObj->t0 = GUI_GetTime() +pObj->Period;
   \   000028                ; Setup parameters for call to function GUI_GetTime
   \   000028   12....       LCALL   ??GUI_GetTime?relay
   \   00002B   8A..         MOV     ?V0 + 4,R2
   \   00002D   8B..         MOV     ?V0 + 5,R3
   \   00002F   E5..         MOV     A,?V0 + 0
   \   000031   240C         ADD     A,#0xc
   \   000033   F582         MOV     DPL,A
   \   000035   E5..         MOV     A,?V0 + 1
   \   000037   3400         ADDC    A,#0x0
   \   000039   F583         MOV     DPH,A
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   25..         ADD     A,?V0 + 4
   \   00003E   F8           MOV     R0,A
   \   00003F   A3           INC     DPTR
   \   000040   E0           MOVX    A,@DPTR
   \   000041   35..         ADDC    A,?V0 + 5
   \   000043   F9           MOV     R1,A
   \   000044   85..82       MOV     DPL,?V0 + 0
   \   000047   85..83       MOV     DPH,?V0 + 1
   \   00004A   A3           INC     DPTR
   \   00004B   A3           INC     DPTR
   \   00004C   A3           INC     DPTR
   \   00004D   A3           INC     DPTR
   \   00004E   A3           INC     DPTR
   \   00004F   A3           INC     DPTR
   \   000050   A3           INC     DPTR
   \   000051   A3           INC     DPTR
   \   000052   A3           INC     DPTR
   \   000053   A3           INC     DPTR
   \   000054   E8           MOV     A,R0
   \   000055   F0           MOVX    @DPTR,A
   \   000056   A3           INC     DPTR
   \   000057   E9           MOV     A,R1
   \   000058   12....       LCALL   ?Subroutine4 & 0xFFFF
    276          		_Unlink(hObj);
    277          		_Link(hObj);
    278            } GUI_UNLOCK(state); 
   \                     ??CrossCallReturnLabel_5:
   \   00005B   A2E0         MOV     C,0xE0 /* A   */.0
   \   00005D   92AF         MOV     0xa8.7,C
    279          }
   \   00005F   7F06         MOV     R7,#0x6
   \   000061   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000064                REQUIRE _A_IEN0

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_Unlink?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _Unlink

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_Link?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _Link

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI_TIMER_Exec?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI_TIMER_Exec

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI_TIMER_Create?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI_TIMER_Create

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI_TIMER_Delete?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI_TIMER_Delete

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI_TIMER_SetPeriod?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI_TIMER_SetPeriod

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI_TIMER_SetTime?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI_TIMER_SetTime

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI_TIMER_Context?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI_TIMER_Context

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI_TIMER_SetDelay?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI_TIMER_SetDelay

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI_TIMER_Restart?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI_TIMER_Restart
    280          
    281          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                 ISTACK PSTACK XSTACK
     --------                 ------ ------ ------
     GUI_TIMER_Context            0      0     16
       -> GUI_ALLOC_h2p           0      0     24
     GUI_TIMER_Create             0      0     26
       -> GUI_ALLOC_AllocZero     0      0     40
       -> GUI_ALLOC_h2p           0      0     40
       -> _Link                   0      0     40
     GUI_TIMER_Delete             0      0      9
       -> _Unlink                 0      0     18
       -> GUI_ALLOC_Free          0      0     18
     GUI_TIMER_Exec               0      0     22
       -> GUI_GetTime             0      0     44
       -> GUI_ALLOC_h2p           0      0     44
     GUI_TIMER_Restart            0      0     14
       -> GUI_ALLOC_h2p           0      0     28
       -> GUI_GetTime             0      0     28
       -> _Unlink                 0      0     28
       -> _Link                   0      0     28
     GUI_TIMER_SetDelay           0      0     11
       -> GUI_ALLOC_h2p           0      0     22
       -> _Unlink                 0      0     22
       -> _Link                   0      0     22
     GUI_TIMER_SetPeriod          0      0     12
       -> GUI_ALLOC_h2p           0      0     24
     GUI_TIMER_SetTime            0      0      9
       -> GUI_ALLOC_h2p           0      0     18
     _Link                        2      0     38
       -> GUI_ALLOC_h2p           0      0     36
       -> GUI_ALLOC_h2p           0      0     36
       -> GUI_ALLOC_h2p           0      0     36
       -> GUI_ALLOC_h2p           0      0     36
     _Unlink                      0      0     26
       -> GUI_ALLOC_h2p           0      0     24
       -> GUI_ALLOC_h2p           0      0     24


   Segment part sizes:

     Function/Label              Bytes
     --------------              -----
     _A_IEN0                        1
     hFirstTimer                    2
     _hActiveTimer                  2
     _Unlink                       84
     ??Subroutine13_0               2
     ??Subroutine14_0               6
     ?Subroutine6                  12
     ?Subroutine9                  11
     ??Subroutine15_0               5
     ?Subroutine7                   4
     ?Subroutine12                 10
     ?Subroutine10                 12
     _Link                        224
     ?Subroutine2                  11
     ?Subroutine11                 14
     ?Subroutine8                   9
     GUI_TIMER_Exec               174
     ?Subroutine5                  18
     GUI_TIMER_Create             112
     GUI_TIMER_Delete              25
     ?Subroutine1                  11
     GUI_TIMER_SetPeriod           35
     ?Subroutine0                   4
     GUI_TIMER_SetTime             23
     ?Subroutine3                  14
     GUI_TIMER_Context             35
     GUI_TIMER_SetDelay            38
     ?Subroutine4                  18
     GUI_TIMER_Restart            100
     ??_Unlink?relay                6
     ??_Link?relay                  6
     ??GUI_TIMER_Exec?relay         6
     ??GUI_TIMER_Create?relay       6
     ??GUI_TIMER_Delete?relay       6
     ??GUI_TIMER_SetPeriod?relay    6
     ??GUI_TIMER_SetTime?relay      6
     ??GUI_TIMER_Context?relay      6
     ??GUI_TIMER_SetDelay?relay     6
     ??GUI_TIMER_Restart?relay      6

 
 1 011 bytes in segment BANKED_CODE
    60 bytes in segment BANK_RELAYS
     1 byte  in segment SFR_AN
     4 bytes in segment XDATA_Z
 
 1 071 bytes of CODE  memory
     0 bytes of DATA  memory (+ 1 byte shared)
     4 bytes of XDATA memory

Errors: none
Warnings: none
