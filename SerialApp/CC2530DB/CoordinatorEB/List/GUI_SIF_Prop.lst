###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         14/Jun/2016  16:18:45 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Cor #
#                          e\GUI_SIF_Prop.c                                   #
#    Command line       =  -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\..\..\..\Tools\CC2530D #
#                          B\f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func      #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\..\..\..\Tools\CC2530D #
#                          B\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0            #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1001                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโ #
#                          ลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5. #
#                          1a\Components\uCGUI\Core\GUI_SIF_Prop.c -D         #
#                          HAL_UART=TRUE -D SERIAL_APP_PORT=0 -D COOR -D      #
#                          LCD_SUPPORTED -D NV_INIT -lC                       #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\ -lA   #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\       #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\Obj\ -e     #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\ -I                    #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\Public\ -I             #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \uCGUI\Core\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ2 #
#                          10\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\uCGUI\MultiLayer\ -I              #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \uCGUI\Config\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสม #
#                          ฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Pr #
#                          ojects\zstack\Utilities\SerialApp\CC2530DB\..\Coor #
#                          dinator\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Z #
#                          igBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Utilities\SerialApp\CC2530DB\..\..\..\ZMai #
#                          n\TI2530DB\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ21 #
#                          0\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje #
#                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\. #
#                          .\..\Components\hal\include\ -I                    #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \hal\target\CC2530EB\ -I                           #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ #
#                          210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\high_level\ -I               #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\ -I                           #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\single_chip\ -I               #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mt\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBe #
#                          eอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zst #
#                          ack\Utilities\SerialApp\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \services\saddr\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื #
#                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ #
#                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\.. #
#                          \..\..\..\Components\services\sdata\ -I            #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\af\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210 #
#                          \ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projec #
#                          ts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\.. #
#                          \..\Components\stack\nwk\ -I                       #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\sapi\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ2 #
#                          10\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\stack\sec\ -I                     #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\sys\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ21 #
#                          0\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje #
#                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\. #
#                          .\..\Components\stack\zdo\ -I                      #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \zmac\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Zig #
#                          Beeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\z #
#                          stack\Utilities\SerialApp\CC2530DB\..\..\..\..\..\ #
#                          Components\zmac\f8w\ -Ohz --require_prototypes     #
#    List file          =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\GUI_SI #
#                          F_Prop.lst                                         #
#    Object file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\Obj\GUI_SIF #
#                          _Prop.r51                                          #
#                                                                             #
#                                                                             #
###############################################################################

F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Core\GUI_SIF_Prop.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              ตC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_SIF_Prop.c
     16          Purpose     : Implementation of system independend fonts
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "GUI_Private.h"
     21          
     22          /*********************************************************************
     23          *
     24          *       Static code
     25          *
     26          **********************************************************************
     27          */
     28          
     29          /*********************************************************************
     30          *
     31          *       _GetNumCharAreas
     32          */
     33          static int _GetNumCharAreas(const GUI_FONT GUI_UNI_PTR * pFont) {
     34            U16 NumCharAreas;
     35            const U8 * pData;
     36            pData = (const U8 *)pFont->p.pFontData + 14 /* Skip ID, YSize, YDist, Baseline, LHeight and CHeight */;
     37            NumCharAreas = GUI__Read16(&pData);
     38            return NumCharAreas;
     39          }
     40          
     41          /*********************************************************************
     42          *
     43          *       _GetpCharInfo
     44          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     45          static const U8 * _GetpCharInfo(const GUI_FONT GUI_UNI_PTR * pFont, U16P c) {
   \                     _GetpCharInfo:
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 4
   \   000005   74FC         MOV     A,#-0x4
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   8C..         MOV     ?V0 + 2,R4
   \   00000C   8D..         MOV     ?V0 + 3,R5
     46            const U8 * pCharArea, * pCharInfo;
     47            int NumCharAreas;
     48            NumCharAreas = _GetNumCharAreas(pFont);                 /* Get # of char areas */
   \   00000E   EA           MOV     A,R2
   \   00000F   240E         ADD     A,#0xe
   \   000011   F8           MOV     R0,A
   \   000012   EB           MOV     A,R3
   \   000013   3400         ADDC    A,#0x0
   \   000015   F9           MOV     R1,A
   \   000016   88..         MOV     ?V0 + 0,R0
   \   000018   89..         MOV     ?V0 + 1,R1
   \   00001A   8882         MOV     DPL,R0
   \   00001C   F583         MOV     DPH,A
   \   00001E   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   000021   7402         MOV     A,#0x2
   \   000023   12....       LCALL   ?XSTACK_DISP0_8
   \   000026   E8           MOV     A,R0
   \   000027   F0           MOVX    @DPTR,A
   \   000028   A3           INC     DPTR
   \   000029   E9           MOV     A,R1
   \   00002A   F0           MOVX    @DPTR,A
   \   00002B                ; Setup parameters for call to function GUI__Read16
   \   00002B   7402         MOV     A,#0x2
   \   00002D   12....       LCALL   ?XSTACK_DISP0_8
   \   000030   AA82         MOV     R2,DPL
   \   000032   AB83         MOV     R3,DPH
   \   000034   12....       LCALL   ??GUI__Read16?relay
   \   000037   8A..         MOV     ?V0 + 4,R2
   \   000039   8B..         MOV     ?V0 + 5,R3
   \   00003B   AE..         MOV     R6,?V0 + 4
   \   00003D   AF..         MOV     R7,?V0 + 5
     49            pCharArea = (const U8 *)pFont->p.pFontData 
     50                        + sizeof(GUI_SI_FONT);                      /* Set char area pointer to first char area */
   \   00003F   85..82       MOV     DPL,?V0 + 0
   \   000042   85..83       MOV     DPH,?V0 + 1
   \   000045   E0           MOVX    A,@DPTR
   \   000046   2410         ADD     A,#0x10
   \   000048   F8           MOV     R0,A
   \   000049   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_14:
   \   00004C   F0           MOVX    @DPTR,A
     51            pCharInfo = pCharArea
     52                        + sizeof(GUI_SIF_CHAR_AREA) * NumCharAreas; /* Set char info pointer to first character info */
   \   00004D   8E..         MOV     ?V0 + 0,R6
   \   00004F   8F..         MOV     ?V0 + 1,R7
   \   000051   7402         MOV     A,#0x2
   \   000053   78..         MOV     R0,#?V0 + 0
   \   000055   12....       LCALL   ?S_SHL
   \   000058   85..82       MOV     DPL,?XSP + 0
   \   00005B   85..83       MOV     DPH,?XSP + 1
   \   00005E   E0           MOVX    A,@DPTR
   \   00005F   25..         ADD     A,?V0 + 0
   \   000061   F5..         MOV     ?V0 + 0,A
   \   000063   A3           INC     DPTR
   \   000064   E0           MOVX    A,@DPTR
   \   000065   35..         ADDC    A,?V0 + 1
   \   000067   F5..         MOV     ?V0 + 1,A
     53            do {
     54              GUI_SIF_CHAR_AREA CharArea;
     55              CharArea.First    = GUI__Read16(&pCharArea);
   \                     ??_GetpCharInfo_0:
   \   000069                ; Setup parameters for call to function GUI__Read16
   \   000069   85..82       MOV     DPL,?XSP + 0
   \   00006C   85..83       MOV     DPH,?XSP + 1
   \   00006F   AA82         MOV     R2,DPL
   \   000071   AB83         MOV     R3,DPH
   \   000073   12....       LCALL   ??GUI__Read16?relay
   \   000076   8A..         MOV     ?V0 + 4,R2
   \   000078   8B..         MOV     ?V0 + 5,R3
     56              CharArea.Last     = GUI__Read16(&pCharArea);
   \   00007A                ; Setup parameters for call to function GUI__Read16
   \   00007A   85..82       MOV     DPL,?XSP + 0
   \   00007D   85..83       MOV     DPH,?XSP + 1
   \   000080   AA82         MOV     R2,DPL
   \   000082   AB83         MOV     R3,DPH
   \   000084   12....       LCALL   ??GUI__Read16?relay
   \   000087   8A..         MOV     ?V0 + 6,R2
   \   000089   8B..         MOV     ?V0 + 7,R3
   \   00008B   A8..         MOV     R0,?V0 + 6
   \   00008D   A9..         MOV     R1,?V0 + 7
     57              if ((c >= CharArea.First) && (c <= CharArea.Last)) {
   \   00008F   C3           CLR     C
   \   000090   E5..         MOV     A,?V0 + 2
   \   000092   95..         SUBB    A,?V0 + 4
   \   000094   E5..         MOV     A,?V0 + 3
   \   000096   95..         SUBB    A,?V0 + 5
   \   000098   401B         JC      ??_GetpCharInfo_1
   \   00009A   C3           CLR     C
   \   00009B   E8           MOV     A,R0
   \   00009C   95..         SUBB    A,?V0 + 2
   \   00009E   E9           MOV     A,R1
   \   00009F   95..         SUBB    A,?V0 + 3
   \   0000A1   4012         JC      ??_GetpCharInfo_1
     58                pCharInfo += sizeof(GUI_SIF_CHARINFO) * (c - CharArea.First);
     59                return pCharInfo;
   \   0000A3   E5..         MOV     A,?V0 + 2
   \   0000A5   C3           CLR     C
   \   0000A6   95..         SUBB    A,?V0 + 4
   \   0000A8   F8           MOV     R0,A
   \   0000A9   E5..         MOV     A,?V0 + 3
   \   0000AB   12....       LCALL   ?Subroutine7 & 0xFFFF
     60              }
   \                     ??CrossCallReturnLabel_10:
   \   0000AE   FA           MOV     R2,A
   \   0000AF   E5..         MOV     A,?V0 + 1
   \   0000B1   39           ADDC    A,R1
   \   0000B2   FB           MOV     R3,A
   \   0000B3   8028         SJMP    ??_GetpCharInfo_2
     61              pCharInfo += sizeof(GUI_SIF_CHARINFO) * (CharArea.Last - CharArea.First + 1);
   \                     ??_GetpCharInfo_1:
   \   0000B5   E8           MOV     A,R0
   \   0000B6   C3           CLR     C
   \   0000B7   95..         SUBB    A,?V0 + 4
   \   0000B9   F8           MOV     R0,A
   \   0000BA   E9           MOV     A,R1
   \   0000BB   12....       LCALL   ?Subroutine7 & 0xFFFF
     62            } while(--NumCharAreas);
   \                     ??CrossCallReturnLabel_11:
   \   0000BE   F8           MOV     R0,A
   \   0000BF   E5..         MOV     A,?V0 + 1
   \   0000C1   39           ADDC    A,R1
   \   0000C2   F9           MOV     R1,A
   \   0000C3   E8           MOV     A,R0
   \   0000C4   240C         ADD     A,#0xc
   \   0000C6   F5..         MOV     ?V0 + 0,A
   \   0000C8   E9           MOV     A,R1
   \   0000C9   3400         ADDC    A,#0x0
   \   0000CB   F5..         MOV     ?V0 + 1,A
   \   0000CD   EE           MOV     A,R6
   \   0000CE   24FF         ADD     A,#-0x1
   \   0000D0   1E           DEC     R6
   \   0000D1   EF           MOV     A,R7
   \   0000D2   34FF         ADDC    A,#-0x1
   \   0000D4   FF           MOV     R7,A
   \   0000D5   EE           MOV     A,R6
   \   0000D6   4F           ORL     A,R7
   \   0000D7   7090         JNZ     ??_GetpCharInfo_0
     63            return 0;
   \   0000D9   7A00         MOV     R2,#0x0
   \   0000DB   7B00         MOV     R3,#0x0
   \                     ??_GetpCharInfo_2:
   \   0000DD   7404         MOV     A,#0x4
   \   0000DF   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000E2   7F08         MOV     R7,#0x8
   \   0000E4   02....       LJMP    ?BANKED_LEAVE_XDATA
     64          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   95..         SUBB    A,?V0 + 5
   \   000002   F9           MOV     R1,A
   \   000003   E8           MOV     A,R0
   \   000004   75F00C       MOV     B,#0xc
   \   000007   A4           MUL     AB
   \   000008   F8           MOV     R0,A
   \   000009   AAF0         MOV     R2,B
   \   00000B   75F00C       MOV     B,#0xc
   \   00000E   E9           MOV     A,R1
   \   00000F   A4           MUL     AB
   \   000010   2A           ADD     A,R2
   \   000011   F9           MOV     R1,A
   \   000012   E5..         MOV     A,?V0 + 0
   \   000014   28           ADD     A,R0
   \   000015   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   240E         ADD     A,#0xe
   \   000003   F8           MOV     R0,A
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   3400         ADDC    A,#0x0
   \   000008   F9           MOV     R1,A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   A3           INC     DPTR
   \   000001   E0           MOVX    A,@DPTR
   \   000002   3400         ADDC    A,#0x0
   \   000004   F9           MOV     R1,A
   \   000005   85..82       MOV     DPL,?XSP + 0
   \   000008   85..83       MOV     DPH,?XSP + 1
   \   00000B   E8           MOV     A,R0
   \   00000C   F0           MOVX    @DPTR,A
   \   00000D   A3           INC     DPTR
   \   00000E   E9           MOV     A,R1
   \   00000F   22           RET
     65          
     66          /*********************************************************************
     67          *
     68          *       Exported code
     69          *
     70          **********************************************************************
     71          */
     72          
     73          /*********************************************************************
     74          *
     75          *       GUI_SIF_DispChar
     76          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     77          static void _GUI_SIF_DispChar(U16P c) {
   \                     _GUI_SIF_DispChar:
   \   000000   74EC         MOV     A,#-0x14
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 2
   \   000005   74FE         MOV     A,#-0x2
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
     78            const U8 * pCharInfo, * pData;
     79            pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c);
   \   00000A                ; Setup parameters for call to function _GetpCharInfo
   \   00000A   12....       LCALL   ?Subroutine1 & 0xFFFF
     80            if (pCharInfo) {
   \                     ??CrossCallReturnLabel_0:
   \   00000D   7003         JNZ     $+5
   \   00000F   02....       LJMP    ??_GUI_SIF_DispChar_0 & 0xFFFF
     81              GUI_DRAWMODE DrawMode, OldDrawMode;
     82              GUI_SIF_CHARINFO CharInfo;
     83              CharInfo.XSize        = GUI__Read16(&pCharInfo);
   \   000012                ; Setup parameters for call to function GUI__Read16
   \   000012   85..82       MOV     DPL,?XSP + 0
   \   000015   85..83       MOV     DPH,?XSP + 1
   \   000018   AA82         MOV     R2,DPL
   \   00001A   AB83         MOV     R3,DPH
   \   00001C   12....       LCALL   ??GUI__Read16?relay
   \   00001F   8A..         MOV     ?V0 + 0,R2
   \   000021   8B..         MOV     ?V0 + 1,R3
   \   000023   AE..         MOV     R6,?V0 + 0
   \   000025   AF..         MOV     R7,?V0 + 1
     84              CharInfo.XDist        = GUI__Read16(&pCharInfo);
   \   000027                ; Setup parameters for call to function GUI__Read16
   \   000027   85..82       MOV     DPL,?XSP + 0
   \   00002A   85..83       MOV     DPH,?XSP + 1
   \   00002D   AA82         MOV     R2,DPL
   \   00002F   AB83         MOV     R3,DPH
   \   000031   12....       LCALL   ??GUI__Read16?relay
   \   000034   8A..         MOV     ?V0 + 10,R2
   \   000036   8B..         MOV     ?V0 + 11,R3
     85              CharInfo.BytesPerLine = GUI__Read16(&pCharInfo);
   \   000038                ; Setup parameters for call to function GUI__Read16
   \   000038   85..82       MOV     DPL,?XSP + 0
   \   00003B   85..83       MOV     DPH,?XSP + 1
   \   00003E   AA82         MOV     R2,DPL
   \   000040   AB83         MOV     R3,DPH
   \   000042   12....       LCALL   ??GUI__Read16?relay
   \   000045   8A..         MOV     ?V0 + 2,R2
   \   000047   8B..         MOV     ?V0 + 3,R3
     86                                      GUI__Read16(&pCharInfo); /* Dummy */
   \   000049                ; Setup parameters for call to function GUI__Read16
   \   000049   85..82       MOV     DPL,?XSP + 0
   \   00004C   85..83       MOV     DPH,?XSP + 1
   \   00004F   AA82         MOV     R2,DPL
   \   000051   AB83         MOV     R3,DPH
   \   000053   12....       LCALL   ??GUI__Read16?relay
     87              CharInfo.OffData      = GUI__Read32(&pCharInfo);
   \   000056                ; Setup parameters for call to function GUI__Read32
   \   000056   85..82       MOV     DPL,?XSP + 0
   \   000059   85..83       MOV     DPH,?XSP + 1
   \   00005C   AA82         MOV     R2,DPL
   \   00005E   AB83         MOV     R3,DPH
   \   000060   12....       LCALL   ??GUI__Read32?relay
     88              pData = (const U8 *)GUI_Context.pAFont->p.pFontData + CharInfo.OffData;
   \   000063   8A..         MOV     ?V0 + 0,R2
   \   000065   8B..         MOV     ?V0 + 1,R3
   \   000067   90....       MOV     DPTR,#GUI_Context + 21
   \   00006A   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   00006D   8882         MOV     DPL,R0
   \   00006F   8983         MOV     DPH,R1
   \   000071   E0           MOVX    A,@DPTR
   \   000072   25..         ADD     A,?V0 + 0
   \   000074   F5..         MOV     ?V0 + 4,A
   \   000076   A3           INC     DPTR
   \   000077   E0           MOVX    A,@DPTR
   \   000078   35..         ADDC    A,?V0 + 1
   \   00007A   F5..         MOV     ?V0 + 5,A
     89              DrawMode = GUI_Context.TextMode;
   \   00007C   90....       MOV     DPTR,#GUI_Context + 35
   \   00007F   E0           MOVX    A,@DPTR
   \   000080   F5..         MOV     ?V0 + 0,A
   \   000082   A3           INC     DPTR
   \   000083   E0           MOVX    A,@DPTR
   \   000084   F5..         MOV     ?V0 + 1,A
     90              OldDrawMode  = LCD_SetDrawMode(DrawMode);
   \   000086                ; Setup parameters for call to function LCD_SetDrawMode
   \   000086   AA..         MOV     R2,?V0 + 0
   \   000088   FB           MOV     R3,A
   \   000089   12....       LCALL   ??LCD_SetDrawMode?relay
   \   00008C   8A..         MOV     ?V0 + 8,R2
   \   00008E   8B..         MOV     ?V0 + 9,R3
     91              LCD_DrawBitmap(GUI_Context.DispPosX, GUI_Context.DispPosY,
     92                             CharInfo.XSize,
     93          									 GUI_Context.pAFont->YSize,
     94                             GUI_Context.pAFont->XMag,
     95          									 GUI_Context.pAFont->YMag,
     96                             1,
     97                             CharInfo.BytesPerLine,
     98                             pData,
     99                             &LCD_BKCOLORINDEX);
   \   000090   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   000093                ; Setup parameters for call to function LCD_DrawBitmap
   \   000093   75....       MOV     ?V0 + 6,#GUI_Context & 0xff
   \   000096   75....       MOV     ?V0 + 7,#(GUI_Context >> 8) & 0xff
   \   000099   78..         MOV     R0,#?V0 + 6
   \   00009B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00009E   78..         MOV     R0,#?V0 + 4
   \   0000A0   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A3   78..         MOV     R0,#?V0 + 2
   \   0000A5   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A8   75..01       MOV     ?V0 + 2,#0x1
   \   0000AB   75..00       MOV     ?V0 + 3,#0x0
   \   0000AE   78..         MOV     R0,#?V0 + 2
   \   0000B0   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000B3   EA           MOV     A,R2
   \   0000B4   240D         ADD     A,#0xd
   \   0000B6   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   0000B9   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000BC   EA           MOV     A,R2
   \   0000BD   240C         ADD     A,#0xc
   \   0000BF   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   0000C2   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000C5   8A82         MOV     DPL,R2
   \   0000C7   8B83         MOV     DPH,R3
   \   0000C9   A3           INC     DPTR
   \   0000CA   A3           INC     DPTR
   \   0000CB   A3           INC     DPTR
   \   0000CC   A3           INC     DPTR
   \   0000CD   A3           INC     DPTR
   \   0000CE   A3           INC     DPTR
   \   0000CF   A3           INC     DPTR
   \   0000D0   A3           INC     DPTR
   \   0000D1   A3           INC     DPTR
   \   0000D2   A3           INC     DPTR
   \   0000D3   E0           MOVX    A,@DPTR
   \   0000D4   F5..         MOV     ?V0 + 2,A
   \   0000D6   78..         MOV     R0,#?V0 + 2
   \   0000D8   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000DB   8E..         MOV     ?V0 + 2,R6
   \   0000DD   8F..         MOV     ?V0 + 3,R7
   \   0000DF   78..         MOV     R0,#?V0 + 2
   \   0000E1   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000E4   90....       MOV     DPTR,#GUI_Context + 29
   \   0000E7   E0           MOVX    A,@DPTR
   \   0000E8   FC           MOV     R4,A
   \   0000E9   A3           INC     DPTR
   \   0000EA   E0           MOVX    A,@DPTR
   \   0000EB   FD           MOV     R5,A
   \   0000EC   90....       MOV     DPTR,#GUI_Context + 27
   \   0000EF   12....       LCALL   ??Subroutine12_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_20:
   \   0000F2   12....       LCALL   ??LCD_DrawBitmap?relay
   \   0000F5   7410         MOV     A,#0x10
   \   0000F7   12....       LCALL   ?DEALLOC_XSTACK8
    100              /* Fill empty pixel lines */
    101              if (GUI_Context.pAFont->YDist > GUI_Context.pAFont->YSize) {
   \   0000FA   90....       MOV     DPTR,#GUI_Context + 21
   \   0000FD   E0           MOVX    A,@DPTR
   \   0000FE   F8           MOV     R0,A
   \   0000FF   A3           INC     DPTR
   \   000100   E0           MOVX    A,@DPTR
   \   000101   F9           MOV     R1,A
   \   000102   E8           MOV     A,R0
   \   000103   240B         ADD     A,#0xb
   \   000105   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_18:
   \   000108   FA           MOV     R2,A
   \   000109   8882         MOV     DPL,R0
   \   00010B   8983         MOV     DPH,R1
   \   00010D   A3           INC     DPTR
   \   00010E   A3           INC     DPTR
   \   00010F   A3           INC     DPTR
   \   000110   A3           INC     DPTR
   \   000111   A3           INC     DPTR
   \   000112   A3           INC     DPTR
   \   000113   A3           INC     DPTR
   \   000114   A3           INC     DPTR
   \   000115   A3           INC     DPTR
   \   000116   A3           INC     DPTR
   \   000117   E0           MOVX    A,@DPTR
   \   000118   C3           CLR     C
   \   000119   9A           SUBB    A,R2
   \   00011A   4003         JC      $+5
   \   00011C   02....       LJMP    ??_GUI_SIF_DispChar_1 & 0xFFFF
    102                int YMag = GUI_Context.pAFont->YMag;
   \   00011F   E8           MOV     A,R0
   \   000120   240D         ADD     A,#0xd
   \   000122   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_19:
   \   000125   F5..         MOV     ?V0 + 4,A
    103                int YDist = GUI_Context.pAFont->YDist * YMag;
   \   000127   8AF0         MOV     B,R2
   \   000129   A4           MUL     AB
   \   00012A   F5..         MOV     ?V0 + 6,A
   \   00012C   E5F0         MOV     A,B
   \   00012E   F5..         MOV     ?V0 + 7,A
    104                int YSize = GUI_Context.pAFont->YSize * YMag;
   \   000130   8882         MOV     DPL,R0
   \   000132   8983         MOV     DPH,R1
   \   000134   A3           INC     DPTR
   \   000135   A3           INC     DPTR
   \   000136   A3           INC     DPTR
   \   000137   A3           INC     DPTR
   \   000138   A3           INC     DPTR
   \   000139   A3           INC     DPTR
   \   00013A   A3           INC     DPTR
   \   00013B   A3           INC     DPTR
   \   00013C   A3           INC     DPTR
   \   00013D   A3           INC     DPTR
   \   00013E   E0           MOVX    A,@DPTR
   \   00013F   F5..         MOV     ?V0 + 2,A
   \   000141   E5..         MOV     A,?V0 + 4
   \   000143   85..F0       MOV     B,?V0 + 2
   \   000146   A4           MUL     AB
   \   000147   F5..         MOV     ?V0 + 4,A
   \   000149   E5F0         MOV     A,B
   \   00014B   F5..         MOV     ?V0 + 5,A
    105                if (DrawMode != LCD_DRAWMODE_TRANS) {
   \   00014D   7402         MOV     A,#0x2
   \   00014F   65..         XRL     A,?V0 + 0
   \   000151   7002         JNZ     ??_GUI_SIF_DispChar_2
   \   000153   E5..         MOV     A,?V0 + 1
   \                     ??_GUI_SIF_DispChar_2:
   \   000155   6054         JZ      ??_GUI_SIF_DispChar_1
    106                  LCD_COLOR OldColor = GUI_GetColor();
   \   000157                ; Setup parameters for call to function GUI_GetColor
   \   000157   12....       LCALL   ??GUI_GetColor?relay
   \   00015A   8A..         MOV     ?V0 + 0,R2
   \   00015C   8B..         MOV     ?V0 + 1,R3
   \   00015E   8C..         MOV     ?V0 + 2,R4
   \   000160   8D..         MOV     ?V0 + 3,R5
    107                  GUI_SetColor(GUI_GetBkColor());
   \   000162                ; Setup parameters for call to function GUI_SetColor
   \   000162                ; Setup parameters for call to function GUI_GetBkColor
   \   000162   12....       LCALL   ??GUI_GetBkColor?relay
   \   000165   12....       LCALL   ??GUI_SetColor?relay
    108                  LCD_FillRect(GUI_Context.DispPosX, 
    109                               GUI_Context.DispPosY + YSize, 
    110                               GUI_Context.DispPosX + CharInfo.XSize, 
    111                               GUI_Context.DispPosY + YDist);
   \   000168   90....       MOV     DPTR,#GUI_Context + 27
   \   00016B   12....       LCALL   ??Subroutine12_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_21:
   \   00016E   A3           INC     DPTR
   \   00016F   E0           MOVX    A,@DPTR
   \   000170   FC           MOV     R4,A
   \   000171   A3           INC     DPTR
   \   000172   E0           MOVX    A,@DPTR
   \   000173   FD           MOV     R5,A
   \   000174                ; Setup parameters for call to function LCD_FillRect
   \   000174   EC           MOV     A,R4
   \   000175   25..         ADD     A,?V0 + 6
   \   000177   F5..         MOV     ?V0 + 6,A
   \   000179   ED           MOV     A,R5
   \   00017A   35..         ADDC    A,?V0 + 7
   \   00017C   F5..         MOV     ?V0 + 7,A
   \   00017E   78..         MOV     R0,#?V0 + 6
   \   000180   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000183   EA           MOV     A,R2
   \   000184   2E           ADD     A,R6
   \   000185   F5..         MOV     ?V0 + 6,A
   \   000187   EB           MOV     A,R3
   \   000188   3F           ADDC    A,R7
   \   000189   F5..         MOV     ?V0 + 7,A
   \   00018B   78..         MOV     R0,#?V0 + 6
   \   00018D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000190   EC           MOV     A,R4
   \   000191   25..         ADD     A,?V0 + 4
   \   000193   FC           MOV     R4,A
   \   000194   ED           MOV     A,R5
   \   000195   35..         ADDC    A,?V0 + 5
   \   000197   FD           MOV     R5,A
   \   000198   12....       LCALL   ??LCD_FillRect?relay
   \   00019B   7404         MOV     A,#0x4
   \   00019D   12....       LCALL   ?DEALLOC_XSTACK8
    112                  GUI_SetColor(OldColor);
   \   0001A0                ; Setup parameters for call to function GUI_SetColor
   \   0001A0   AA..         MOV     R2,?V0 + 0
   \   0001A2   AB..         MOV     R3,?V0 + 1
   \   0001A4   AC..         MOV     R4,?V0 + 2
   \   0001A6   AD..         MOV     R5,?V0 + 3
   \   0001A8   12....       LCALL   ??GUI_SetColor?relay
    113                }
    114              }
    115              LCD_SetDrawMode(OldDrawMode); /* Restore draw mode */
   \                     ??_GUI_SIF_DispChar_1:
   \   0001AB                ; Setup parameters for call to function LCD_SetDrawMode
   \   0001AB   AA..         MOV     R2,?V0 + 8
   \   0001AD   AB..         MOV     R3,?V0 + 9
   \   0001AF   12....       LCALL   ??LCD_SetDrawMode?relay
    116              GUI_Context.DispPosX += CharInfo.XDist;
   \   0001B2   90....       MOV     DPTR,#GUI_Context + 27
   \   0001B5   E0           MOVX    A,@DPTR
   \   0001B6   25..         ADD     A,?V0 + 10
   \   0001B8   F0           MOVX    @DPTR,A
   \   0001B9   A3           INC     DPTR
   \   0001BA   E0           MOVX    A,@DPTR
   \   0001BB   35..         ADDC    A,?V0 + 11
   \   0001BD   F0           MOVX    @DPTR,A
    117            }
    118          }
   \                     ??_GUI_SIF_DispChar_0:
   \   0001BE   7402         MOV     A,#0x2
   \   0001C0   12....       LCALL   ?DEALLOC_XSTACK8
   \   0001C3   7F0C         MOV     R7,#0xc
   \   0001C5   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   F582         MOV     DPL,A
   \   000002   EB           MOV     A,R3
   \   000003   12....       LCALL   ??Subroutine11_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_17:
   \   000006   F5..         MOV     ?V0 + 2,A
   \   000008   78..         MOV     R0,#?V0 + 2
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   EA           MOV     A,R2
   \   000001   FC           MOV     R4,A
   \   000002   EB           MOV     A,R3
   \   000003   FD           MOV     R5,A
   \   000004   90....       MOV     DPTR,#GUI_Context + 21
   \   000007   E0           MOVX    A,@DPTR
   \   000008   FA           MOV     R2,A
   \   000009   A3           INC     DPTR
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   FB           MOV     R3,A
   \   00000C   12....       LCALL   ??_GetpCharInfo?relay
   \   00000F   85..82       MOV     DPL,?XSP + 0
   \   000012   85..83       MOV     DPH,?XSP + 1
   \   000015   EA           MOV     A,R2
   \   000016   F0           MOVX    @DPTR,A
   \   000017   A3           INC     DPTR
   \   000018   EB           MOV     A,R3
   \   000019   F0           MOVX    @DPTR,A
   \   00001A   85..82       MOV     DPL,?XSP + 0
   \   00001D   85..83       MOV     DPH,?XSP + 1
   \   000020   E0           MOVX    A,@DPTR
   \   000021   F8           MOV     R0,A
   \   000022   A3           INC     DPTR
   \   000023   E0           MOVX    A,@DPTR
   \   000024   F9           MOV     R1,A
   \   000025   E8           MOV     A,R0
   \   000026   49           ORL     A,R1
   \   000027   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   F582         MOV     DPL,A
   \   000002   E9           MOV     A,R1
   \   000003                REQUIRE ??Subroutine11_0
   \   000003                ; // Fall through to label ??Subroutine11_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine11_0:
   \   000000   3400         ADDC    A,#0x0
   \   000002   F583         MOV     DPH,A
   \   000004   E0           MOVX    A,@DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   90....       MOV     DPTR,#GUI_Context + 21
   \   000003                REQUIRE ??Subroutine12_0
   \   000003                ; // Fall through to label ??Subroutine12_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine12_0:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FA           MOV     R2,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FB           MOV     R3,A
   \   000005   22           RET
    119          
    120          /*********************************************************************
    121          *
    122          *       GUI_SIF_GetCharDistX
    123          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    124          static int _GUI_SIF_GetCharDistX(U16P c) {
   \                     _GUI_SIF_GetCharDistX:
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 2
   \   000005   74FE         MOV     A,#-0x2
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    125            const U8 * pCharInfo;
    126            U16 DistX = 0;
   \   00000A   7E00         MOV     R6,#0x0
   \   00000C   7F00         MOV     R7,#0x0
    127            pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c); /* Get pointer to char info data */
   \   00000E                ; Setup parameters for call to function _GetpCharInfo
   \   00000E   12....       LCALL   ?Subroutine1 & 0xFFFF
    128            if (pCharInfo) {
   \                     ??CrossCallReturnLabel_1:
   \   000011   6016         JZ      ??_GUI_SIF_GetCharDistX_0
    129              pCharInfo += 2 /* Skip XSize */;
   \   000013   85..82       MOV     DPL,?XSP + 0
   \   000016   85..83       MOV     DPH,?XSP + 1
   \   000019   E0           MOVX    A,@DPTR
   \   00001A   2402         ADD     A,#0x2
   \   00001C   08           INC     R0
   \   00001D   08           INC     R0
   \   00001E   12....       LCALL   ?Subroutine2 & 0xFFFF
    130              DistX = GUI__Read16(&pCharInfo);
    131            }
   \                     ??CrossCallReturnLabel_2:
   \   000021   8A..         MOV     ?V0 + 0,R2
   \   000023   8B..         MOV     ?V0 + 1,R3
   \   000025   AE..         MOV     R6,?V0 + 0
   \   000027   AF..         MOV     R7,?V0 + 1
    132            return DistX;
   \                     ??_GUI_SIF_GetCharDistX_0:
   \   000029   EE           MOV     A,R6
   \   00002A   FA           MOV     R2,A
   \   00002B   EF           MOV     A,R7
   \   00002C   FB           MOV     R3,A
   \   00002D   7402         MOV     A,#0x2
   \   00002F   12....       LCALL   ?DEALLOC_XSTACK8
   \   000032                REQUIRE ?Subroutine0
   \   000032                ; // Fall through to label ?Subroutine0
    133          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_15:
   \   000003   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_13:
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function GUI__Read16
   \   000001                ; Setup parameters for call to function GUI__Read16
   \   000001                ; Setup parameters for call to function GUI__Read16
   \   000001                ; Setup parameters for call to function GUI__Read16
   \   000001   85..82       MOV     DPL,?XSP + 0
   \   000004   85..83       MOV     DPH,?XSP + 1
   \   000007   AA82         MOV     R2,DPL
   \   000009   AB83         MOV     R3,DPH
   \   00000B   12....       LCALL   ??GUI__Read16?relay
   \   00000E   22           RET
    134          
    135          /*********************************************************************
    136          *
    137          *       GUI_SIF_GetFontInfo
    138          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    139          static void _GUI_SIF_GetFontInfo(const GUI_FONT GUI_UNI_PTR * pFont, GUI_FONTINFO * pfi) {
   \                     _GUI_SIF_GetFontInfo:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 2
   \   000005   74FE         MOV     A,#-0x2
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EC           MOV     A,R4
   \   00000B   FE           MOV     R6,A
   \   00000C   ED           MOV     A,R5
   \   00000D   FF           MOV     R7,A
    140            const U8 * pData;
    141            pData = (const U8 *)pFont->p.pFontData + 4 /* Skip XSize and XDist */;
   \   00000E   EA           MOV     A,R2
   \   00000F   240E         ADD     A,#0xe
   \   000011   F582         MOV     DPL,A
   \   000013   EB           MOV     A,R3
   \   000014   12....       LCALL   ??Subroutine11_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_16:
   \   000017   2404         ADD     A,#0x4
   \   000019   F8           MOV     R0,A
   \   00001A   12....       LCALL   ?Subroutine2 & 0xFFFF
    142            pfi->Baseline = GUI__Read16(&pData);
   \                     ??CrossCallReturnLabel_3:
   \   00001D   EA           MOV     A,R2
   \   00001E   8E82         MOV     DPL,R6
   \   000020   8F83         MOV     DPH,R7
   \   000022   A3           INC     DPTR
   \   000023   A3           INC     DPTR
   \   000024   12....       LCALL   ?Subroutine3 & 0xFFFF
    143            pfi->LHeight  = GUI__Read16(&pData);
   \                     ??CrossCallReturnLabel_4:
   \   000027   12....       LCALL   ?Subroutine3 & 0xFFFF
    144            pfi->CHeight  = GUI__Read16(&pData);
   \                     ??CrossCallReturnLabel_5:
   \   00002A   A3           INC     DPTR
   \   00002B   F0           MOVX    @DPTR,A
    145            pfi->Flags    = GUI_FONTINFO_FLAG_PROP;
   \   00002C   8E82         MOV     DPL,R6
   \   00002E   8F83         MOV     DPH,R7
   \   000030   7401         MOV     A,#0x1
   \   000032   F0           MOVX    @DPTR,A
   \   000033   A3           INC     DPTR
   \   000034   E4           CLR     A
   \   000035   F0           MOVX    @DPTR,A
    146          }
   \   000036   7402         MOV     A,#0x2
   \   000038   12....       LCALL   ?DEALLOC_XSTACK8
   \   00003B   7F01         MOV     R7,#0x1
   \   00003D   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_12:
   \   000003   EA           MOV     A,R2
   \   000004   8E82         MOV     DPL,R6
   \   000006   8F83         MOV     DPH,R7
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   22           RET
    147          
    148          /*********************************************************************
    149          *
    150          *       GUI_SIF_IsInFont
    151          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    152          static char _GUI_SIF_IsInFont(const GUI_FONT GUI_UNI_PTR * pFont, U16 c) {
   \                     _GUI_SIF_IsInFont:
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    153            const U8 * pCharInfo;
    154            GUI_USE_PARA(pFont);
    155            pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c);
    156            return (pCharInfo) ? 1 : 0;
   \   000005                ; Setup parameters for call to function _GetpCharInfo
   \   000005   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   000008   12....       LCALL   ??_GetpCharInfo?relay
   \   00000B   8B..         MOV     ?V0 + 1,R3
   \   00000D   EA           MOV     A,R2
   \   00000E   45..         ORL     A,?V0 + 1
   \   000010   6004         JZ      ??_GUI_SIF_IsInFont_0
   \   000012   7901         MOV     R1,#0x1
   \   000014   8002         SJMP    ??_GUI_SIF_IsInFont_1
   \                     ??_GUI_SIF_IsInFont_0:
   \   000016   7900         MOV     R1,#0x0
   \                     ??_GUI_SIF_IsInFont_1:
   \   000018   02....       LJMP    ?Subroutine0 & 0xFFFF
    157          }
    158          
    159          /*********************************************************************
    160          *
    161          *       GUI_SIF_TYPE_PROP
    162          */

   \                                 In  segment XDATA_ROM_C, align 1
    163          const tGUI_SIF_APIList GUI_SIF_APIList_Prop = {
   \                     GUI_SIF_APIList_Prop:
   \   000000   ....         DW ??_GUI_SIF_DispChar?relay
   \   000002   ....         DW ??_GUI_SIF_GetCharDistX?relay
   \   000004   ....         DW ??_GUI_SIF_GetFontInfo?relay
   \   000006   ....         DW ??_GUI_SIF_IsInFont?relay

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_GetpCharInfo?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _GetpCharInfo

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_GUI_SIF_DispChar?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _GUI_SIF_DispChar

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_GUI_SIF_GetCharDistX?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _GUI_SIF_GetCharDistX

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_GUI_SIF_GetFontInfo?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _GUI_SIF_GetFontInfo

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_GUI_SIF_IsInFont?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _GUI_SIF_IsInFont
    164            _GUI_SIF_DispChar,
    165            _GUI_SIF_GetCharDistX,
    166            _GUI_SIF_GetFontInfo,
    167            _GUI_SIF_IsInFont
    168          };

   Maximum stack usage in bytes:

     Function              ISTACK PSTACK XSTACK
     --------              ------ ------ ------
     _GUI_SIF_DispChar         0      0     38
       -> _GetpCharInfo        0      0     44
       -> GUI__Read16          0      0     44
       -> GUI__Read16          0      0     44
       -> GUI__Read16          0      0     44
       -> GUI__Read16          0      0     44
       -> GUI__Read32          0      0     44
       -> LCD_SetDrawMode      0      0     44
       -> LCD_DrawBitmap       0      0     76
       -> GUI_GetColor         0      0     44
       -> GUI_GetBkColor       0      0     44
       -> GUI_SetColor         0      0     44
       -> LCD_FillRect         0      0     52
       -> GUI_SetColor         0      0     44
       -> LCD_SetDrawMode      0      0     44
     _GUI_SIF_GetCharDistX     0      0     12
       -> _GetpCharInfo        0      0     24
       -> GUI__Read16          0      0     24
     _GUI_SIF_GetFontInfo      1      0     11
       -> GUI__Read16          0      0     22
       -> GUI__Read16          0      0     22
       -> GUI__Read16          0      0     22
     _GUI_SIF_IsInFont         0      0     10
       -> _GetpCharInfo        0      0     20
     _GetpCharInfo             0      0     42
       -> GUI__Read16          0      0     40
       -> GUI__Read16          0      0     40
       -> GUI__Read16          0      0     40


   Segment part sizes:

     Function/Label                Bytes
     --------------                -----
     _GetpCharInfo                  231
     ?Subroutine7                    22
     ?Subroutine5                    10
     ?Subroutine9                    16
     _GUI_SIF_DispChar              456
     ?Subroutine4                    11
     ?Subroutine1                    40
     ?Subroutine10                    3
     ??Subroutine11_0                 6
     ?Subroutine6                     3
     ??Subroutine12_0                 6
     _GUI_SIF_GetCharDistX           50
     ?Subroutine0                     5
     ?Subroutine2                     7
     ?Subroutine8                    15
     _GUI_SIF_GetFontInfo            64
     ?Subroutine3                    12
     _GUI_SIF_IsInFont               27
     GUI_SIF_APIList_Prop             8
     ??_GetpCharInfo?relay            6
     ??_GUI_SIF_DispChar?relay        6
     ??_GUI_SIF_GetCharDistX?relay    6
     ??_GUI_SIF_GetFontInfo?relay     6
     ??_GUI_SIF_IsInFont?relay        6

 
 984 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
   8 bytes in segment XDATA_ROM_C
 
 1 014 bytes of CODE  memory
     8 bytes of CONST memory

Errors: none
Warnings: none
