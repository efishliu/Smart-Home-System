///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        14/Jun/2016  16:18:07 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\C /
//                          ore\GUI_FillPolygon.c                             /
//    Command line       =  -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย /
//                          ็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack /
//                          \Utilities\SerialApp\CC2530DB\..\..\..\Tools\CC25 /
//                          30DB\f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func  /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8        /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)   /
//                          -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย /
//                          ็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack /
//                          \Utilities\SerialApp\CC2530DB\..\..\..\Tools\CC25 /
//                          30DB\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0        /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0x1001                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘น /
//                          โลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2. /
//                          5.1a\Components\uCGUI\Core\GUI_FillPolygon.c -D   /
//                          HAL_UART=TRUE -D SERIAL_APP_PORT=0 -D COOR -D     /
//                          LCD_SUPPORTED -D NV_INIT -lC                      /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\CoordinatorEB\List\    /
//                          -lA F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ /
//                          ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstac /
//                          k\Utilities\SerialApp\CC2530DB\CoordinatorEB\List /
//                          \ --diag_suppress Pe001,Pa010 -o                  /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\CoordinatorEB\Obj\ -e  /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\ -I                    /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\Public\ -I          /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\uCGUI\Core\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื /
//                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a /
//                          \Projects\zstack\Utilities\SerialApp\CC2530DB\..\ /
//                          ..\..\..\..\Components\uCGUI\MultiLayer\ -I       /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\uCGUI\Config\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโล /
//                          ฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5. /
//                          1a\Projects\zstack\Utilities\SerialApp\CC2530DB\. /
//                          .\Coordinator\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืส /
//                          มฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ /
//                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\. /
//                          .\..\ZMain\TI2530DB\ -I                           /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\hal\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬ /
//                          ืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Utilities\SerialApp\CC2530DB\.. /
//                          \..\..\..\..\Components\hal\target\CC2530EB\ -I   /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mac\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬ /
//                          ืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Utilities\SerialApp\CC2530DB\.. /
//                          \..\..\..\..\Components\mac\high_level\ -I        /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mac\low_level\srf04\ -I                       /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mac\low_level\srf04\single_chip\ -I           /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mt\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Z /
//                          igBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Project /
//                          s\zstack\Utilities\SerialApp\CC2530DB\..\..\..\.. /
//                          \..\Components\osal\include\ -I                   /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\services\saddr\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘น /
//                          โลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2. /
//                          5.1a\Projects\zstack\Utilities\SerialApp\CC2530DB /
//                          \..\..\..\..\..\Components\services\sdata\ -I     /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\stack\af\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสม /
//                          ฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\P /
//                          rojects\zstack\Utilities\SerialApp\CC2530DB\..\.. /
//                          \..\..\..\Components\stack\nwk\ -I                /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\stack\sapi\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื /
//                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a /
//                          \Projects\zstack\Utilities\SerialApp\CC2530DB\..\ /
//                          ..\..\..\..\Components\stack\sec\ -I              /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\stack\sys\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืส /
//                          มฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ /
//                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\. /
//                          .\..\..\..\Components\stack\zdo\ -I               /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\zmac\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210 /
//                          \ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje /
//                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ /
//                          ..\..\Components\zmac\f8w\ -Ohz                   /
//                          --require_prototypes                              /
//    List file          =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\CoordinatorEB\List\GUI /
//                          _FillPolygon.s51                                  /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME GUI_FillPolygon

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_ADD
        EXTERN ?L_DIV_MOD
        EXTERN ?L_MUL
        EXTERN ?L_SUB
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?SL_GE_X
        EXTERN ?SS_SHR
        EXTERN ?S_SHL
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??GL_FillPolygon?relay
        FUNCTION ??GL_FillPolygon?relay,0203H
        PUBLIC ??GUI_FillPolygon?relay
        FUNCTION ??GUI_FillPolygon?relay,0203H
        FUNCTION ??_Add?relay,0203H
        FUNCTION ??_CheckYInterSect?relay,0203H
        PUBLIC GL_FillPolygon
        FUNCTION GL_FillPolygon,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 32, STACK
        PUBLIC GUI_FillPolygon
        FUNCTION GUI_FillPolygon,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBWEAK _A_IEN0
        FUNCTION _Add,0203H
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        FUNCTION _CheckYInterSect,0203H
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBWEAK __Constant_1
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
LCD_DrawHLine       SYMBOL "LCD_DrawHLine"
??LCD_DrawHLine?relay SYMBOL "?relay", LCD_DrawHLine
GL_FillPolygon      SYMBOL "GL_FillPolygon"
??GL_FillPolygon?relay SYMBOL "?relay", GL_FillPolygon
GUI_FillPolygon     SYMBOL "GUI_FillPolygon"
??GUI_FillPolygon?relay SYMBOL "?relay", GUI_FillPolygon

        EXTERN LCD_DrawHLine
        FUNCTION LCD_DrawHLine,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??LCD_DrawHLine?relay
        FUNCTION ??LCD_DrawHLine?relay,00H
        EXTERN GUI_Context

// F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Core\GUI_FillPolygon.c
//    1 /*
//    2 *********************************************************************************************************
//    3 *                                                uC/GUI
//    4 *                        Universal graphic software for embedded applications
//    5 *
//    6 *                       (c) Copyright 2002, Micrium Inc., Weston, FL
//    7 *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
//    8 *
//    9 *              ตC/GUI is protected by international copyright laws. Knowledge of the
//   10 *              source code may not be used to write a similar product. This file may
//   11 *              only be used in accordance with a license and should not be redistributed
//   12 *              in any way. We appreciate your understanding and fairness.
//   13 *
//   14 ----------------------------------------------------------------------
//   15 File        : GUI_FillPolygon.C
//   16 Purpose     : Fill polygon routine
//   17 ---------------------------END-OF-HEADER------------------------------
//   18 */
//   19 
//   20 #include <stddef.h>           /* needed for definition of NULL */
//   21 #include "GUI_Protected.h"

        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DATA8
        DS 1
//   22 #include "GUIDebug.h"
//   23 
//   24 /*********************************************************************
//   25 *
//   26 *       defines, Configs
//   27 *
//   28 **********************************************************************
//   29 */
//   30 
//   31 #define GUI_FP_MAXCOUNT 12
//   32 
//   33 /*********************************************************************
//   34 *
//   35 *       static data
//   36 *
//   37 **********************************************************************
//   38 */
//   39 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   40 static int GL_FP_Cnt;
GL_FP_Cnt:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   41 static I16 _aX[GUI_FP_MAXCOUNT];
_aX:
        DS 24
        REQUIRE __INIT_XDATA_Z
//   42 
//   43 /*********************************************************************
//   44 *
//   45 *       static code
//   46 *
//   47 **********************************************************************
//   48 */
//   49 /*********************************************************************
//   50 *
//   51 *       _DrawHLine
//   52 */
//   53 static void _DrawHLine(int x0, int y, int x1) {
//   54   if (x0 < x1) {
//   55     LCD_HL_DrawHLine(x0, y, x1);
//   56   } else {
//   57     LCD_HL_DrawHLine(x1, y, x0);
//   58   }
//   59 }
//   60 
//   61 /*********************************************************************
//   62 *
//   63 *       _CheckYInterSect
//   64 *
//   65 *  This function returns the x-coordinate of the intersection
//   66 *  of the given line at the given y-coordinate.
//   67 *  If there is no intersection, GUI_XMAX is returned.
//   68 *  This routine does not work for horizontal lines, as there
//   69 *  would be more than a single point as intersection. This situation
//   70 *  needs to be checked prior to calling the routine.
//   71 *  Returns:
//   72 *    0 if no intersection
//   73 *    1 if we have an intersection
//   74 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   75 static int _CheckYInterSect(int y, int* px, const GUI_POINT*paPoint0, const GUI_POINT*paPoint1) {
_CheckYInterSect:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function _CheckYInterSect
        CODE
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     ?V0 + 8,R4
        MOV     ?V0 + 9,R5
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine26_0 & 0xFFFF
??CrossCallReturnLabel_53:
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine26_0 & 0xFFFF
??CrossCallReturnLabel_54:
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
//   76   int x0, y0, x1, y1;
//   77   if (paPoint0->y <= (paPoint1)->y) {
        MOV     DPL,R2
        MOV     DPH,A
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine26_0 & 0xFFFF
??CrossCallReturnLabel_55:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine6 & 0xFFFF
??CrossCallReturnLabel_10:
        JC      ??_CheckYInterSect_0
//   78     y0 = paPoint0->y;
//   79     if (y0 > y)      /* Check if there is an intersection ... (early out) */
        LCALL   ?Subroutine8 & 0xFFFF
??CrossCallReturnLabel_16:
        JNC     ??_CheckYInterSect_1
//   80       return 0;
??_CheckYInterSect_2:
        MOV     R2,#0x0
        LJMP    ??_CheckYInterSect_3 & 0xFFFF
//   81     y1 = paPoint1->y;
??_CheckYInterSect_1:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ?Subroutine0 & 0xFFFF
//   82     if (y1 < y)      /* Check if there is an intersection ... (early out) */
??CrossCallReturnLabel_0:
        JC      ??_CheckYInterSect_2
//   83       return 0;
//   84     x0 = paPoint0->x;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
//   85     x1 = paPoint1->x;
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        SJMP    ??_CheckYInterSect_4
//   86   } else {
//   87     y0 = paPoint1->y;
??_CheckYInterSect_0:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine26_0 & 0xFFFF
//   88     if (y0 > y)      /* Check if there is an intersection ... (early out) */
??CrossCallReturnLabel_56:
        LCALL   ?Subroutine8 & 0xFFFF
??CrossCallReturnLabel_17:
        JC      ??_CheckYInterSect_2
//   89       return 0;
//   90     y1 = paPoint0->y;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine0 & 0xFFFF
//   91     if (y1 < y)      /* Check if there is an intersection ... (early out) */
??CrossCallReturnLabel_1:
        JC      ??_CheckYInterSect_2
//   92       return 0;
//   93     x0 = paPoint1->x;
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
//   94     x1 = paPoint0->x;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
??_CheckYInterSect_4:
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
//   95   }
//   96 /* Calculate intersection */
//   97   {
//   98     I32 Mul = (I32)(x1 - x0) * (I32)(y - y0);
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,R6
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        SUBB    A,R7
        MOV     ?V0 + 1,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     A,R0
        CLR     C
        SUBB    A,R2
        MOV     ?V0 + 4,A
        MOV     A,R1
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_40:
        LCALL   ?L_MUL
//   99     if (Mul > 0) {
        MOV     DPTR,#__Constant_1
        MOV     R0,#?V0 + 0
        LCALL   ?SL_GE_X
        MOV     A,R4
        JNC     ??_CheckYInterSect_5
//  100       Mul += (y1 - y0) >> 1;	          /* for proper rounding */
        LCALL   ?Subroutine5 & 0xFFFF
//  101     } else {
??CrossCallReturnLabel_8:
        LCALL   ?SS_SHR
        MOV     A,?V0 + 5
        LCALL   ??Subroutine23_0 & 0xFFFF
??CrossCallReturnLabel_38:
        LCALL   ?L_ADD
        SJMP    ??_CheckYInterSect_6
//  102       Mul -= ((y1 - y0) >> 1) - 1;	    /* for proper rounding */
??_CheckYInterSect_5:
        LCALL   ?Subroutine5 & 0xFFFF
//  103     }
??CrossCallReturnLabel_9:
        LCALL   ?SS_SHR
        MOV     A,?V0 + 4
        ADD     A,#-0x1
        MOV     ?V0 + 4,A
        MOV     A,?V0 + 5
        ADDC    A,#-0x1
        LCALL   ??Subroutine22_0 & 0xFFFF
??CrossCallReturnLabel_39:
        LCALL   ?L_SUB
//  104     x0 += Mul / (y1 - y0);
//  105   }
//  106   *px = x0;
??_CheckYInterSect_6:
        MOV     A,R4
        CLR     C
        SUBB    A,R2
        MOV     ?V0 + 4,A
        MOV     A,R5
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_41:
        LCALL   ?L_DIV_MOD
        MOV     A,R6
        ADD     A,?V0 + 0
        MOV     R0,A
        MOV     A,R7
        ADDC    A,?V0 + 1
        MOV     R1,A
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
//  107   return 1;
        MOV     R2,#0x1
??_CheckYInterSect_3:
        MOV     R3,#0x0
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
//  108 } 

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
        CFI Block cfiCond1 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_40
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond2 Using cfiCommon0
        CFI (cfiCond2) NoFunction
        CFI (cfiCond2) Conditional ??CrossCallReturnLabel_41
        CFI (cfiCond2) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond2) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond2) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond2) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond2) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond2) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond2) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond2) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond2) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond2) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond2) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond2) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond2) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond2) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond2) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond2) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond2) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond2) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond2) CFA_SP SP+0
        CFI (cfiCond2) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker3 Using cfiCommon1
        CFI (cfiPicker3) NoFunction
        CFI (cfiPicker3) Picker
        SUBB    A,R3
        CFI EndBlock cfiCond1
        CFI EndBlock cfiCond2
        CFI EndBlock cfiPicker3
        REQUIRE ??Subroutine22_0
        ; // Fall through to label ??Subroutine22_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine22_0:
        CFI Block cfiCond4 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_39
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond5 Using cfiCommon0
        CFI (cfiCond5) NoFunction
        CFI (cfiCond5) Conditional ??CrossCallReturnLabel_40
        CFI (cfiCond5) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond5) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond5) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond5) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond5) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond5) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond5) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond5) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond5) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond5) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond5) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond5) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond5) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond5) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond5) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond5) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond5) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond5) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond5) CFA_SP SP+0
        CFI (cfiCond5) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond6 Using cfiCommon0
        CFI (cfiCond6) NoFunction
        CFI (cfiCond6) Conditional ??CrossCallReturnLabel_41
        CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond6) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond6) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond6) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond6) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond6) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond6) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond6) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond6) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond6) CFA_SP SP+0
        CFI (cfiCond6) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker7 Using cfiCommon1
        CFI (cfiPicker7) NoFunction
        CFI (cfiPicker7) Picker
        MOV     ?V0 + 5,A
        CFI EndBlock cfiCond4
        CFI EndBlock cfiCond5
        CFI EndBlock cfiCond6
        CFI EndBlock cfiPicker7
        REQUIRE ??Subroutine23_0
        ; // Fall through to label ??Subroutine23_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine23_0:
        CFI Block cfiCond8 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_38
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond9 Using cfiCommon0
        CFI (cfiCond9) NoFunction
        CFI (cfiCond9) Conditional ??CrossCallReturnLabel_39
        CFI (cfiCond9) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond9) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond9) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond9) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond9) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond9) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond9) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond9) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond9) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond9) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond9) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond9) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond9) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond9) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond9) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond9) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond9) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond9) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond9) CFA_SP SP+0
        CFI (cfiCond9) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond10 Using cfiCommon0
        CFI (cfiCond10) NoFunction
        CFI (cfiCond10) Conditional ??CrossCallReturnLabel_40
        CFI (cfiCond10) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond10) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond10) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond10) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond10) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond10) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond10) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond10) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond10) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond10) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond10) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond10) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond10) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond10) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond10) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond10) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond10) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond10) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond10) CFA_SP SP+0
        CFI (cfiCond10) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond11 Using cfiCommon0
        CFI (cfiCond11) NoFunction
        CFI (cfiCond11) Conditional ??CrossCallReturnLabel_41
        CFI (cfiCond11) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond11) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond11) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond11) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond11) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond11) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond11) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond11) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond11) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond11) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond11) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond11) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond11) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond11) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond11) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond11) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond11) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond11) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond11) CFA_SP SP+0
        CFI (cfiCond11) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker12 Using cfiCommon1
        CFI (cfiPicker12) NoFunction
        CFI (cfiPicker12) Picker
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 6,A
        MOV     ?V0 + 7,A
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        RET
        CFI EndBlock cfiCond8
        CFI EndBlock cfiCond9
        CFI EndBlock cfiCond10
        CFI EndBlock cfiCond11
        CFI EndBlock cfiPicker12

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
        CFI Block cfiCond13 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_16
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond14 Using cfiCommon0
        CFI (cfiCond14) NoFunction
        CFI (cfiCond14) Conditional ??CrossCallReturnLabel_17
        CFI (cfiCond14) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond14) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond14) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond14) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond14) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond14) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond14) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond14) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond14) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond14) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond14) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond14) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond14) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond14) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond14) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond14) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond14) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond14) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond14) CFA_SP SP+0
        CFI (cfiCond14) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker15 Using cfiCommon1
        CFI (cfiPicker15) NoFunction
        CFI (cfiPicker15) Picker
        CLR     C
        MOV     A,R0
        SUBB    A,R2
        MOV     A,R1
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_34:
        RET
        CFI EndBlock cfiCond13
        CFI EndBlock cfiCond14
        CFI EndBlock cfiPicker15

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
        CFI Block cfiCond16 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_8
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond17 Using cfiCommon0
        CFI (cfiCond17) NoFunction
        CFI (cfiCond17) Conditional ??CrossCallReturnLabel_9
        CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond17) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond17) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond17) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond17) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond17) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond17) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond17) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond17) CFA_SP SP+0
        CFI (cfiCond17) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker18 Using cfiCommon1
        CFI (cfiPicker18) NoFunction
        CFI (cfiPicker18) Picker
        CLR     C
        SUBB    A,R2
        MOV     ?V0 + 4,A
        MOV     A,R5
        SUBB    A,R3
        MOV     ?V0 + 5,A
        MOV     A,#0x1
        MOV     R0,#?V0 + 4
        RET
        CFI EndBlock cfiCond16
        CFI EndBlock cfiCond17
        CFI EndBlock cfiPicker18

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiCond19 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond20 Using cfiCommon0
        CFI (cfiCond20) NoFunction
        CFI (cfiCond20) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond20) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond20) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond20) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond20) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond20) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond20) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond20) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond20) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond20) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond20) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond20) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond20) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond20) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond20) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond20) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond20) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond20) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond20) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond20) CFA_SP SP+0
        CFI (cfiCond20) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker21 Using cfiCommon1
        CFI (cfiPicker21) NoFunction
        CFI (cfiPicker21) Picker
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        CLR     C
        MOV     A,R4
        SUBB    A,R0
        MOV     A,R5
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_50:
        RET
        CFI EndBlock cfiCond19
        CFI EndBlock cfiCond20
        CFI EndBlock cfiPicker21
//  109 
//  110 /*********************************************************************
//  111 *
//  112 *       _Add
//  113 *
//  114 *  This function adds a point into the sorted array
//  115 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  116 static void _Add(int x) {
_Add:
        CFI Block cfiBlock22 Using cfiCommon0
        CFI Function _Add
        CODE
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//  117   if (GL_FP_Cnt < GUI_FP_MAXCOUNT) {
        MOV     DPTR,#GL_FP_Cnt
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,#0xc
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JNC     ??_Add_0
//  118     int i;
//  119     /* Move all entries to the right (bigger x-value) */
//  120     for (i=GL_FP_Cnt; i ; i--) {
        MOV     DPTR,#GL_FP_Cnt
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        SJMP    ??_Add_1
//  121       if (_aX[i-1] < x)
//  122         break;
//  123       _aX[i] = _aX[i-1];
??_Add_2:
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        MOV     A,R4
        CLR     C
        RLC     A
        MOV     R4,A
        MOV     A,R5
        RLC     A
        MOV     R5,A
        MOV     A,#_aX & 0xff
        ADD     A,R4
        MOV     R4,A
        MOV     A,#(_aX >> 8) & 0xff
        ADDC    A,R5
        MOV     R5,A
        MOV     A,R4
        ADD     A,#-0x2
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,#-0x1
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#-0x1
        DEC     R0
        MOV     A,R1
        ADDC    A,#-0x1
??_Add_1:
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??_Add_3
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        MOV     A,R4
        CLR     C
        RLC     A
        MOV     R4,A
        MOV     A,R5
        RLC     A
        MOV     R5,A
        MOV     A,#(_aX + 254) & 0xff
        ADD     A,R4
        MOV     DPL,A
        MOV     A,#((_aX - 2) >> 8) & 0xff
        ADDC    A,R5
        MOV     DPH,A
        LCALL   ?Subroutine6 & 0xFFFF
//  124     }
??CrossCallReturnLabel_11:
        JNC     ??_Add_2
//  125     /* Insert new entry */
//  126     _aX[i]    = x;
??_Add_3:
        MOV     A,R0
        CLR     C
        RLC     A
        MOV     R0,A
        MOV     A,R1
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_20:
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  127     GL_FP_Cnt++;
        MOV     DPTR,#GL_FP_Cnt
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOVX    @DPTR,A
//  128   }
//  129 }
??_Add_0:
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock22

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
        CFI Block cfiCond23 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_10
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond24 Using cfiCommon0
        CFI (cfiCond24) NoFunction
        CFI (cfiCond24) Conditional ??CrossCallReturnLabel_11
        CFI (cfiCond24) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond24) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond24) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond24) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond24) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond24) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond24) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond24) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond24) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond24) CFA_SP SP+0
        CFI (cfiCond24) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker25 Using cfiCommon1
        CFI (cfiPicker25) NoFunction
        CFI (cfiPicker25) Picker
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,R2
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_33:
        RET
        CFI EndBlock cfiCond23
        CFI EndBlock cfiCond24
        CFI EndBlock cfiPicker25

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
        CFI Block cfiCond26 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_34, ??CrossCallReturnLabel_16
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond27 Using cfiCommon0
        CFI (cfiCond27) NoFunction
        CFI (cfiCond27) Conditional ??CrossCallReturnLabel_34, ??CrossCallReturnLabel_17
        CFI (cfiCond27) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond27) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond27) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond27) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond27) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond27) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond27) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond27) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond27) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond27) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond27) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond27) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond27) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond27) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond27) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond27) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond27) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond27) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond27) CFA_SP SP+0
        CFI (cfiCond27) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond28 Using cfiCommon0
        CFI (cfiCond28) NoFunction
        CFI (cfiCond28) Conditional ??CrossCallReturnLabel_33, ??CrossCallReturnLabel_10
        CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond28) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond28) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond28) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond28) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond28) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond28) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond28) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond28) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond28) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond28) CFA_SP SP+0
        CFI (cfiCond28) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond29 Using cfiCommon0
        CFI (cfiCond29) NoFunction
        CFI (cfiCond29) Conditional ??CrossCallReturnLabel_33, ??CrossCallReturnLabel_11
        CFI (cfiCond29) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond29) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond29) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond29) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond29) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond29) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond29) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond29) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond29) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond29) CFA_SP SP+0
        CFI (cfiCond29) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond30 Using cfiCommon0
        CFI (cfiCond30) NoFunction
        CFI (cfiCond30) Conditional ??CrossCallReturnLabel_32
        CFI (cfiCond30) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond30) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond30) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond30) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond30) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond30) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond30) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond30) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond30) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond30) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond30) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond30) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond30) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond30) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond30) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond30) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond30) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond30) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond30) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond30) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond30) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond30) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond30) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond30) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond30) CFA_SP SP+0
        CFI (cfiCond30) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker31 Using cfiCommon1
        CFI (cfiPicker31) NoFunction
        CFI (cfiPicker31) Picker
        SUBB    A,R3
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        RET
        CFI EndBlock cfiCond26
        CFI EndBlock cfiCond27
        CFI EndBlock cfiCond28
        CFI EndBlock cfiCond29
        CFI EndBlock cfiCond30
        CFI EndBlock cfiPicker31
//  130 
//  131 /*********************************************************************
//  132 *
//  133 *       _Init
//  134 *
//  135 *  This function initialise the sorted array
//  136 */
//  137 static void _Init(void) {
//  138   GL_FP_Cnt = 0;
//  139 }
//  140 
//  141 /*********************************************************************
//  142 *
//  143 *       _Flush
//  144 *
//  145 *  This function draw lines between points in the array
//  146 */
//  147 static void _Flush(int x0, int y) {
//  148   int i, x = 0;
//  149   char On=0;
//  150   for (i=0; i<GL_FP_Cnt; i++) {
//  151     int xNew = _aX[i];
//  152     if (On) {
//  153       LCD_HL_DrawHLine(x0 + x, y, x0 + xNew);
//  154     }
//  155     On ^= 1;
//  156     x = xNew;
//  157   }
//  158 }
//  159 
//  160 /*********************************************************************
//  161 *
//  162 *       _AddPoint
//  163 *
//  164 *  This function decides either if there a V-point or a
//  165 *  X-point. An X-point is added to the array, a V-point
//  166 *  is drawn.
//  167 */
//  168 static void _AddPoint(int x, int y, int y0, int y1, int xOff, int yOff) {
//  169   if ((y0 ^ y1) >= 0) {
//  170     x += xOff;
//  171     LCD_HL_DrawHLine(x, y + yOff, x);    /* V-point, not crossing the polygon */
//  172   } else {
//  173     _Add(x);
//  174   }
//  175 }
//  176 
//  177 /*********************************************************************
//  178 *
//  179 *       _GetPrevPointDiffy
//  180 *
//  181 *  Find previous point which is not on the same height
//  182 */
//  183 static int _GetPrevPointDiffy(const GUI_POINT* paPoint, int i,
//  184                               const int NumPoints, const int y0) {
//  185   int j, y1;
//  186   for (j = 0; j < (NumPoints - 1) ; j++) {
//  187     i = (i != 0) ? i - 1 : NumPoints - 1;
//  188     y1 = (paPoint + i)->y;
//  189     if (y1 != y0) {
//  190       return y1;
//  191     }
//  192   }
//  193   return y0;
//  194 }
//  195 
//  196 /*********************************************************************
//  197 *
//  198 *       Public code
//  199 *
//  200 **********************************************************************
//  201 */
//  202 /*********************************************************************
//  203 *
//  204 *       GL_FillPolygon
//  205 *
//  206 *  This function calculates the polygon
//  207 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  208 void GL_FillPolygon  (const GUI_POINT*paPoint, int NumPoints, int xOff, int yOff) {
GL_FillPolygon:
        CFI Block cfiBlock32 Using cfiCommon0
        CFI Function GL_FillPolygon
        CODE
        FUNCALL GL_FillPolygon, LCD_DrawHLine
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_FillPolygon, _CheckYInterSect
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_FillPolygon, _Add
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_FillPolygon, LCD_DrawHLine
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_FillPolygon, LCD_DrawHLine
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_FillPolygon, LCD_DrawHLine
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GL_FillPolygon, _Add
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     A,#0x1c
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 14,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 15,A
        MOV     A,#0x1e
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
//  209   int i, y;
//  210   int yMin = GUI_YMAX;
        MOV     R2,#-0x1
        MOV     R3,#0xf
//  211   int yMax = GUI_YMIN;
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#-0x10
//  212 /* First step : find uppermost and lowermost coordinates */
//  213   for (i=0; i<NumPoints; i++) {
        MOV     R6,#0x0
        MOV     R7,#0x0
        SJMP    ??GL_FillPolygon_0
//  214     y = (paPoint + i)->y;
??GL_FillPolygon_1:
        MOV     ?V0 + 2,R6
        MOV     ?V0 + 3,R7
        MOV     A,#0x2
        MOV     R0,#?V0 + 2
        LCALL   ?S_SHL
        MOV     A,?V0 + 4
        ADD     A,?V0 + 2
        MOV     DPL,A
        MOV     A,?V0 + 5
        ADDC    A,?V0 + 3
        MOV     DPH,A
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
//  215     if (y < yMin)
        CLR     C
        MOV     A,?V0 + 2
        SUBB    A,R2
        MOV     A,?V0 + 3
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_32:
        JNC     ??GL_FillPolygon_2
//  216       yMin = y;
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
//  217     if (y > yMax)
??GL_FillPolygon_2:
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_44:
        JNC     ??GL_FillPolygon_3
//  218       yMax = y;
        MOV     ?V0 + 0,?V0 + 2
        MOV     ?V0 + 1,?V0 + 3
//  219   }
??GL_FillPolygon_3:
        MOV     A,R6
        ADD     A,#0x1
        INC     R6
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
??GL_FillPolygon_0:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine1 & 0xFFFF
??CrossCallReturnLabel_2:
        JC      ??GL_FillPolygon_1
//  220 /* Use Clipping rect to reduce calculation (if possible) */
//  221   if (GUI_Context.pClipRect_HL) {
        MOV     DPTR,#GUI_Context + 15
        LCALL   ?Subroutine7 & 0xFFFF
??CrossCallReturnLabel_12:
        MOV     A,R0
        ORL     A,R1
        JZ      ??GL_FillPolygon_4
//  222     if (yMax > (GUI_Context.pClipRect_HL->y1 - yOff))
        LCALL   ?Subroutine2 & 0xFFFF
??CrossCallReturnLabel_4:
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,?V0 + 7
        MOV     R1,A
        CLR     C
        MOV     A,R0
        SUBB    A,?V0 + 0
        MOV     A,R1
        SUBB    A,?V0 + 1
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JNC     ??GL_FillPolygon_5
//  223       yMax = (GUI_Context.pClipRect_HL->y1 - yOff);
        MOV     DPTR,#GUI_Context + 15
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        LCALL   ?Subroutine2 & 0xFFFF
??CrossCallReturnLabel_5:
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,?V0 + 7
        MOV     ?V0 + 1,A
//  224     if (yMin < (GUI_Context.pClipRect_HL->y0 - yOff))
??GL_FillPolygon_5:
        LCALL   ?Subroutine3 & 0xFFFF
??CrossCallReturnLabel_6:
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,?V0 + 7
        MOV     R1,A
        CLR     C
        MOV     A,R2
        SUBB    A,R0
        MOV     A,R3
        LCALL   ??Subroutine25_0 & 0xFFFF
??CrossCallReturnLabel_46:
        JNC     ??GL_FillPolygon_4
//  225       yMin = (GUI_Context.pClipRect_HL->y0 - yOff);
        LCALL   ?Subroutine3 & 0xFFFF
//  226   }
??CrossCallReturnLabel_7:
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,?V0 + 7
        MOV     R3,A
//  227 /* Second step: Calculate and draw horizontal lines */
//  228   for (y=yMin; y<=yMax; y++) {
??GL_FillPolygon_4:
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        SJMP    ??GL_FillPolygon_6
??GL_FillPolygon_7:
        MOV     A,?V0 + 10
        CLR     C
        RLC     A
        MOV     R0,A
        MOV     A,?V0 + 11
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_21:
        LCALL   ?Subroutine7 & 0xFFFF
??CrossCallReturnLabel_13:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,?V0 + 8
        JZ      ??GL_FillPolygon_8
        ; Setup parameters for call to function LCD_DrawHLine
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,?V0 + 14
        MOV     ?V0 + 12,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,?V0 + 15
        MOV     ?V0 + 13,A
        MOV     R0,#?V0 + 12
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0 + 14
        ADD     A,R2
        MOV     R2,A
        MOV     A,?V0 + 15
        ADDC    A,R3
        MOV     R3,A
        LCALL   ??LCD_DrawHLine?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
??GL_FillPolygon_8:
        XRL     ?V0 + 8,#0x1
        LCALL   ?Subroutine4 & 0xFFFF
??CrossCallReturnLabel_57:
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_18:
        MOV     DPTR,#GL_FP_Cnt
        LCALL   ?Subroutine7 & 0xFFFF
??CrossCallReturnLabel_14:
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_48:
        JC      ??GL_FillPolygon_7
//  229     _Init();
//  230     /* find next intersection and count lines*/
//  231     for (i=0; i<NumPoints; i++) {
//  232       int i1 = (i < (NumPoints - 1)) ? i + 1 : 0;
//  233       int y0 = (paPoint + i )->y;
//  234       int y1 = (paPoint + i1)->y;
//  235       /* Check if starting point is on line */
//  236       if (y0 == y) {
//  237         if (y1 == y) {  /* Add the entire line */
//  238           _DrawHLine((paPoint + i )->x + xOff , y + yOff, (paPoint + i1)->x + xOff);
//  239         } else {        /* Add only one point */
//  240           int yPrev = _GetPrevPointDiffy(paPoint, i, NumPoints, y);
//  241           if (yPrev != y) {
//  242             _AddPoint((paPoint + i)->x, y, yPrev - y, y1 - y, xOff, yOff);
//  243           } 
//  244         }
//  245       } else if (y1 != y) {  /* Ignore if end-point is on the line */
//  246         if (((y1 >= y) && (y0 <= y)) || ((y0 >= y) && (y1 <= y))) {
//  247           int xIntersect;
//  248           if (_CheckYInterSect(y, &xIntersect, paPoint + i, paPoint + i1)) {
//  249             _Add(xIntersect);
//  250           }
//  251         }
//  252       }
//  253     }
//  254     _Flush(xOff, y + yOff);
        MOV     A,?V0 + 2
        ADD     A,#0x1
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
??GL_FillPolygon_6:
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_45:
        JNC     $+5
        LJMP    ??GL_FillPolygon_9 & 0xFFFF
        MOV     DPTR,#GL_FP_Cnt
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     R6,A
        LJMP    ??GL_FillPolygon_10 & 0xFFFF
??GL_FillPolygon_11:
        MOV     A,?V0 + 2
        XRL     A,R4
        JNZ     ??GL_FillPolygon_12
        MOV     A,?V0 + 3
        XRL     A,R5
??GL_FillPolygon_12:
        JZ      ??GL_FillPolygon_13
        CLR     C
        MOV     A,R4
        SUBB    A,?V0 + 2
        MOV     A,R5
        LCALL   ??Subroutine24_0 & 0xFFFF
??CrossCallReturnLabel_42:
        JC      ??GL_FillPolygon_14
        CLR     C
        MOV     A,?V0 + 2
        SUBB    A,?V0 + 10
        MOV     A,?V0 + 3
        SUBB    A,?V0 + 11
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JNC     ??GL_FillPolygon_15
??GL_FillPolygon_14:
        CLR     C
        MOV     A,?V0 + 10
        SUBB    A,?V0 + 2
        MOV     A,?V0 + 11
        LCALL   ??Subroutine24_0 & 0xFFFF
??CrossCallReturnLabel_43:
        JC      ??GL_FillPolygon_13
        CLR     C
        MOV     A,?V0 + 2
        SUBB    A,R4
        MOV     A,?V0 + 3
        SUBB    A,R5
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JC      ??GL_FillPolygon_13
??GL_FillPolygon_15:
        ; Setup parameters for call to function _CheckYInterSect
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     A,#0x2
        MOV     R0,#?V0 + 8
        LCALL   ?S_SHL
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_26:
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 8,R6
        MOV     ?V0 + 9,R7
        MOV     A,#0x2
        MOV     R0,#?V0 + 8
        LCALL   ?S_SHL
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_27:
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??_CheckYInterSect?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
        MOV     ?V0 + 9,R3
        MOV     A,R2
        ORL     A,?V0 + 9
        JZ      ??GL_FillPolygon_13
        ; Setup parameters for call to function _Add
        LCALL   ?Subroutine4 & 0xFFFF
??CrossCallReturnLabel_58:
        LCALL   ??_Add?relay
??GL_FillPolygon_13:
        MOV     A,R6
        ADD     A,#0x1
        INC     R6
        MOV     A,R7
        ADDC    A,#0x0
??GL_FillPolygon_10:
        MOV     R7,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine1 & 0xFFFF
??CrossCallReturnLabel_3:
        JC      $+5
        LJMP    ??GL_FillPolygon_16 & 0xFFFF
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#-0x1
        DEC     R0
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOV     R1,A
        CLR     C
        MOV     A,R6
        SUBB    A,R0
        MOV     A,R7
        LCALL   ??Subroutine25_0 & 0xFFFF
??CrossCallReturnLabel_47:
        JNC     ??GL_FillPolygon_17
        MOV     A,R6
        ADD     A,#0x1
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        SJMP    ??GL_FillPolygon_18
??GL_FillPolygon_17:
        MOV     R2,#0x0
        MOV     R3,#0x0
??GL_FillPolygon_18:
        MOV     ?V0 + 8,R6
        MOV     ?V0 + 9,R7
        MOV     A,#0x2
        MOV     R0,#?V0 + 8
        LCALL   ?S_SHL
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_22:
        MOV     ?V0 + 10,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 11,A
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     A,#0x2
        MOV     R0,#?V0 + 8
        LCALL   ?S_SHL
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_23:
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,?V0 + 2
        XRL     A,?V0 + 10
        JNZ     ??GL_FillPolygon_19
        MOV     A,?V0 + 3
        XRL     A,?V0 + 11
??GL_FillPolygon_19:
        JZ      $+5
        LJMP    ??GL_FillPolygon_11 & 0xFFFF
        MOV     A,?V0 + 2
        XRL     A,R4
        JNZ     ??GL_FillPolygon_20
        MOV     A,?V0 + 3
        XRL     A,R5
??GL_FillPolygon_20:
        JNZ     ??GL_FillPolygon_21
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     A,#0x2
        MOV     R0,#?V0 + 8
        LCALL   ?S_SHL
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_24:
        MOV     ?V0 + 10,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,?V0 + 15
        MOV     ?V0 + 11,A
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_30:
        MOV     ?V0 + 8,R6
        MOV     ?V0 + 9,R7
        MOV     A,#0x2
        MOV     R0,#?V0 + 8
        LCALL   ?S_SHL
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_25:
        MOV     ?V0 + 8,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,?V0 + 15
        MOV     ?V0 + 9,A
        CLR     C
        MOV     A,?V0 + 8
        SUBB    A,?V0 + 10
        MOV     A,?V0 + 9
        SUBB    A,?V0 + 11
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JNC     ??GL_FillPolygon_22
        ; Setup parameters for call to function LCD_DrawHLine
        MOV     R0,#?V0 + 10
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 30)
??GL_FillPolygon_23:
        MOV     R2,?V0 + 8
        MOV     R3,?V0 + 9
??GL_FillPolygon_24:
        LCALL   ??LCD_DrawHLine?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
        LJMP    ??GL_FillPolygon_13 & 0xFFFF
??GL_FillPolygon_22:
        ; Setup parameters for call to function LCD_DrawHLine
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     R2,?V0 + 10
        MOV     R3,?V0 + 11
        SJMP    ??GL_FillPolygon_24
        CFI CFA_XSP16 add(XSP16, 28)
??GL_FillPolygon_21:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     ?V0 + 10,#0x0
        MOV     ?V0 + 11,#0x0
        SJMP    ??CrossCallReturnLabel_19
??GL_FillPolygon_25:
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_19:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOV     R1,A
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_49:
        JC      $+5
        LJMP    ??GL_FillPolygon_13 & 0xFFFF
        MOV     A,R2
        ORL     A,R3
        JZ      ??GL_FillPolygon_26
        MOV     A,R2
        ADD     A,#-0x1
        DEC     R2
        MOV     A,R3
        SJMP    ??GL_FillPolygon_27
??GL_FillPolygon_26:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
??GL_FillPolygon_27:
        ADDC    A,#-0x1
        MOV     R3,A
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     A,#0x2
        MOV     R0,#?V0 + 8
        LCALL   ?S_SHL
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_28:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine7 & 0xFFFF
??CrossCallReturnLabel_15:
        MOV     A,?V0 + 2
        XRL     A,R0
        JNZ     ??GL_FillPolygon_28
        MOV     A,?V0 + 3
        XRL     A,R1
??GL_FillPolygon_28:
        JZ      ??GL_FillPolygon_25
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     ?V0 + 8,R6
        MOV     ?V0 + 9,R7
        MOV     A,#0x2
        MOV     R0,#?V0 + 8
        LCALL   ?S_SHL
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_29:
        MOVX    A,@DPTR
        MOV     ?V0 + 8,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 9,A
        MOV     A,R2
        CLR     C
        SUBB    A,?V0 + 2
        MOV     A,R3
        SUBB    A,?V0 + 3
        MOV     R1,A
        MOV     A,R4
        CLR     C
        SUBB    A,?V0 + 2
        MOV     A,R5
        SUBB    A,?V0 + 3
        MOV     R3,A
        MOV     A,R1
        XRL     A,R3
        CLR     C
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JC      ??GL_FillPolygon_29
        MOV     A,?V0 + 8
        ADD     A,?V0 + 14
        MOV     ?V0 + 8,A
        MOV     A,?V0 + 9
        ADDC    A,?V0 + 15
        MOV     ?V0 + 9,A
        ; Setup parameters for call to function LCD_DrawHLine
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 30)
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_31:
        LJMP    ??GL_FillPolygon_23 & 0xFFFF
        CFI CFA_XSP16 add(XSP16, 28)
??GL_FillPolygon_29:
        ; Setup parameters for call to function _Add
        MOV     R2,?V0 + 8
        MOV     R3,?V0 + 9
        LJMP    ??CrossCallReturnLabel_58 & 0xFFFF
??GL_FillPolygon_16:
        MOV     A,?V0 + 2
        ADD     A,?V0 + 6
        MOV     R6,A
        MOV     A,?V0 + 3
        ADDC    A,?V0 + 7
        MOV     R7,A
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 10,R2
        MOV     ?V0 + 11,R2
        LJMP    ??CrossCallReturnLabel_18 & 0xFFFF
//  255   }  
//  256 }
??GL_FillPolygon_9:
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 24)
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock32

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
        CFI Block cfiCond33 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_30
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond34 Using cfiCommon0
        CFI (cfiCond34) NoFunction
        CFI (cfiCond34) Conditional ??CrossCallReturnLabel_31
        CFI (cfiCond34) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond34) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond34) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond34) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond34) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond34) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond34) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond34) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond34) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond34) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond34) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond34) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond34) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond34) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond34) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond34) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond34) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond34) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond34) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond34) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond34) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond34) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond34) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond34) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond34) CFA_SP SP+0
        CFI (cfiCond34) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiPicker35 Using cfiCommon1
        CFI (cfiPicker35) NoFunction
        CFI (cfiPicker35) Picker
        MOV     A,?V0 + 2
        ADD     A,?V0 + 6
        MOV     R4,A
        MOV     A,?V0 + 3
        ADDC    A,?V0 + 7
        MOV     R5,A
        RET
        CFI EndBlock cfiCond33
        CFI EndBlock cfiCond34
        CFI EndBlock cfiPicker35

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
        CFI Block cfiCond36 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_28
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond37 Using cfiCommon0
        CFI (cfiCond37) NoFunction
        CFI (cfiCond37) Conditional ??CrossCallReturnLabel_29
        CFI (cfiCond37) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond37) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond37) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond37) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond37) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond37) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond37) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond37) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond37) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond37) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond37) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond37) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond37) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond37) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond37) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond37) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond37) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond37) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond37) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond37) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond37) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond37) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond37) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond37) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond37) CFA_SP SP+0
        CFI (cfiCond37) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker38 Using cfiCommon1
        CFI (cfiPicker38) NoFunction
        CFI (cfiPicker38) Picker
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_37:
        RET
        CFI EndBlock cfiCond36
        CFI EndBlock cfiCond37
        CFI EndBlock cfiPicker38

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
        CFI Block cfiCond39 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_37, ??CrossCallReturnLabel_28
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond40 Using cfiCommon0
        CFI (cfiCond40) NoFunction
        CFI (cfiCond40) Conditional ??CrossCallReturnLabel_37, ??CrossCallReturnLabel_29
        CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond40) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond40) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond40) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond40) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond40) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond40) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond40) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond40) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond40) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond40) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond40) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond40) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond40) CFA_SP SP+0
        CFI (cfiCond40) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond41 Using cfiCommon0
        CFI (cfiCond41) NoFunction
        CFI (cfiCond41) Conditional ??CrossCallReturnLabel_36, ??CrossCallReturnLabel_24
        CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond41) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond41) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond41) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond41) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond41) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond41) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond41) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond41) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond41) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond41) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond41) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond41) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond41) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond41) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond41) CFA_SP SP+0
        CFI (cfiCond41) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond42 Using cfiCommon0
        CFI (cfiCond42) NoFunction
        CFI (cfiCond42) Conditional ??CrossCallReturnLabel_36, ??CrossCallReturnLabel_25
        CFI (cfiCond42) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond42) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond42) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond42) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond42) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond42) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond42) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond42) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond42) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond42) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond42) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond42) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond42) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond42) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond42) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond42) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond42) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond42) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond42) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond42) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond42) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond42) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond42) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond42) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond42) CFA_SP SP+0
        CFI (cfiCond42) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond43 Using cfiCommon0
        CFI (cfiCond43) NoFunction
        CFI (cfiCond43) Conditional ??CrossCallReturnLabel_35, ??CrossCallReturnLabel_22
        CFI (cfiCond43) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond43) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond43) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond43) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond43) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond43) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond43) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond43) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond43) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond43) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond43) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond43) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond43) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond43) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond43) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond43) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond43) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond43) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond43) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond43) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond43) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond43) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond43) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond43) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond43) CFA_SP SP+0
        CFI (cfiCond43) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond44 Using cfiCommon0
        CFI (cfiCond44) NoFunction
        CFI (cfiCond44) Conditional ??CrossCallReturnLabel_35, ??CrossCallReturnLabel_23
        CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond44) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond44) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond44) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond44) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond44) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond44) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond44) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond44) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond44) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond44) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond44) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond44) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond44) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond44) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond44) CFA_SP SP+0
        CFI (cfiCond44) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker45 Using cfiCommon1
        CFI (cfiPicker45) NoFunction
        CFI (cfiPicker45) Picker
        MOV     A,?V0 + 4
        ADD     A,?V0 + 8
        MOV     DPL,A
        MOV     A,?V0 + 5
        ADDC    A,?V0 + 9
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond39
        CFI EndBlock cfiCond40
        CFI EndBlock cfiCond41
        CFI EndBlock cfiCond42
        CFI EndBlock cfiCond43
        CFI EndBlock cfiCond44
        CFI EndBlock cfiPicker45

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
        CFI Block cfiCond46 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_26
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond47 Using cfiCommon0
        CFI (cfiCond47) NoFunction
        CFI (cfiCond47) Conditional ??CrossCallReturnLabel_27
        CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond47) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond47) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond47) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond47) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond47) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond47) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond47) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond47) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond47) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond47) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond47) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond47) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond47) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond47) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond47) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond47) CFA_SP SP+0
        CFI (cfiCond47) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiPicker48 Using cfiCommon1
        CFI (cfiPicker48) NoFunction
        CFI (cfiPicker48) Picker
        MOV     A,?V0 + 4
        ADD     A,?V0 + 8
        MOV     ?V0 + 8,A
        MOV     A,?V0 + 5
        ADDC    A,?V0 + 9
        MOV     ?V0 + 9,A
        MOV     R0,#?V0 + 8
        RET
        CFI EndBlock cfiCond46
        CFI EndBlock cfiCond47
        CFI EndBlock cfiPicker48

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
        CFI Block cfiCond49 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_24
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond50 Using cfiCommon0
        CFI (cfiCond50) NoFunction
        CFI (cfiCond50) Conditional ??CrossCallReturnLabel_25
        CFI (cfiCond50) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond50) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond50) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond50) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond50) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond50) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond50) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond50) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond50) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond50) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond50) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond50) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond50) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond50) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond50) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond50) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond50) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond50) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond50) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond50) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond50) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond50) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond50) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond50) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond50) CFA_SP SP+0
        CFI (cfiCond50) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker51 Using cfiCommon1
        CFI (cfiPicker51) NoFunction
        CFI (cfiPicker51) Picker
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_36:
        MOVX    A,@DPTR
        ADD     A,?V0 + 14
        RET
        CFI EndBlock cfiCond49
        CFI EndBlock cfiCond50
        CFI EndBlock cfiPicker51

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
        CFI Block cfiCond52 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_22
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond53 Using cfiCommon0
        CFI (cfiCond53) NoFunction
        CFI (cfiCond53) Conditional ??CrossCallReturnLabel_23
        CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond53) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond53) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond53) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond53) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond53) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond53) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond53) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond53) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond53) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond53) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond53) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond53) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond53) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond53) CFA_SP SP+0
        CFI (cfiCond53) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker54 Using cfiCommon1
        CFI (cfiPicker54) NoFunction
        CFI (cfiPicker54) Picker
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_35:
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond52
        CFI EndBlock cfiCond53
        CFI EndBlock cfiPicker54

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
        CFI Block cfiCond55 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_44
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond56 Using cfiCommon0
        CFI (cfiCond56) NoFunction
        CFI (cfiCond56) Conditional ??CrossCallReturnLabel_45
        CFI (cfiCond56) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond56) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond56) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond56) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond56) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond56) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond56) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond56) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond56) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond56) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond56) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond56) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond56) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond56) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond56) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond56) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond56) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond56) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond56) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond56) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond56) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond56) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond56) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond56) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond56) CFA_SP SP+0
        CFI (cfiCond56) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker57 Using cfiCommon1
        CFI (cfiPicker57) NoFunction
        CFI (cfiPicker57) Picker
        CLR     C
        MOV     A,?V0 + 0
        SUBB    A,?V0 + 2
        MOV     A,?V0 + 1
        CFI EndBlock cfiCond55
        CFI EndBlock cfiCond56
        CFI EndBlock cfiPicker57
        REQUIRE ??Subroutine24_0
        ; // Fall through to label ??Subroutine24_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine24_0:
        CFI Block cfiCond58 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_42
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond59 Using cfiCommon0
        CFI (cfiCond59) NoFunction
        CFI (cfiCond59) Conditional ??CrossCallReturnLabel_43
        CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond59) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond59) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond59) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond59) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond59) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond59) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond59) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond59) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond59) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond59) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond59) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond59) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond59) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond59) CFA_SP SP+0
        CFI (cfiCond59) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond60 Using cfiCommon0
        CFI (cfiCond60) NoFunction
        CFI (cfiCond60) Conditional ??CrossCallReturnLabel_44
        CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond60) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond60) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond60) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond60) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond60) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond60) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond60) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond60) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond60) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond60) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond60) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond60) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond60) CFA_SP SP+0
        CFI (cfiCond60) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond61 Using cfiCommon0
        CFI (cfiCond61) NoFunction
        CFI (cfiCond61) Conditional ??CrossCallReturnLabel_45
        CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond61) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond61) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond61) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond61) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond61) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond61) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond61) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond61) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond61) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond61) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond61) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond61) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond61) CFA_SP SP+0
        CFI (cfiCond61) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker62 Using cfiCommon1
        CFI (cfiPicker62) NoFunction
        CFI (cfiPicker62) Picker
        SUBB    A,?V0 + 3
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        RET
        CFI EndBlock cfiCond58
        CFI EndBlock cfiCond59
        CFI EndBlock cfiCond60
        CFI EndBlock cfiCond61
        CFI EndBlock cfiPicker62

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
        CFI Block cfiCond63 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_20
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond64 Using cfiCommon0
        CFI (cfiCond64) NoFunction
        CFI (cfiCond64) Conditional ??CrossCallReturnLabel_21
        CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond64) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond64) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond64) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond64) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond64) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond64) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond64) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond64) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond64) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond64) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond64) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond64) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond64) CFA_SP SP+0
        CFI (cfiCond64) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker65 Using cfiCommon1
        CFI (cfiPicker65) NoFunction
        CFI (cfiPicker65) Picker
        RLC     A
        MOV     R1,A
        MOV     A,#_aX & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#(_aX >> 8) & 0xff
        ADDC    A,R1
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond63
        CFI EndBlock cfiCond64
        CFI EndBlock cfiPicker65

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
        CFI Block cfiCond66 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_18
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond67 Using cfiCommon0
        CFI (cfiCond67) NoFunction
        CFI (cfiCond67) Conditional ??CrossCallReturnLabel_19
        CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond67) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond67) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond67) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond67) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond67) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond67) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond67) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond67) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond67) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond67) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond67) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond67) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond67) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond67) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond67) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond67) CFA_SP SP+0
        CFI (cfiCond67) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker68 Using cfiCommon1
        CFI (cfiPicker68) NoFunction
        CFI (cfiPicker68) Picker
        MOV     A,?V0 + 10
        ADD     A,#0x1
        MOV     ?V0 + 10,A
        MOV     A,?V0 + 11
        ADDC    A,#0x0
        MOV     ?V0 + 11,A
        RET
        CFI EndBlock cfiCond66
        CFI EndBlock cfiCond67
        CFI EndBlock cfiPicker68

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
        CFI Block cfiCond69 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_48
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond70 Using cfiCommon0
        CFI (cfiCond70) NoFunction
        CFI (cfiCond70) Conditional ??CrossCallReturnLabel_49
        CFI (cfiCond70) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond70) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond70) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond70) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond70) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond70) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond70) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond70) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond70) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond70) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond70) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond70) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond70) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond70) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond70) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond70) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond70) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond70) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond70) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond70) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond70) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond70) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond70) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond70) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond70) CFA_SP SP+0
        CFI (cfiCond70) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker71 Using cfiCommon1
        CFI (cfiPicker71) NoFunction
        CFI (cfiPicker71) Picker
        CLR     C
        MOV     A,?V0 + 10
        SUBB    A,R0
        MOV     A,?V0 + 11
        CFI EndBlock cfiCond69
        CFI EndBlock cfiCond70
        CFI EndBlock cfiPicker71
        REQUIRE ??Subroutine25_0
        ; // Fall through to label ??Subroutine25_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine25_0:
        CFI Block cfiCond72 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_46
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond73 Using cfiCommon0
        CFI (cfiCond73) NoFunction
        CFI (cfiCond73) Conditional ??CrossCallReturnLabel_47
        CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond73) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond73) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond73) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond73) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond73) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond73) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond73) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond73) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond73) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond73) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond73) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond73) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond73) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond73) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond73) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond73) CFA_SP SP+0
        CFI (cfiCond73) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond74 Using cfiCommon0
        CFI (cfiCond74) NoFunction
        CFI (cfiCond74) Conditional ??CrossCallReturnLabel_48
        CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond74) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond74) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond74) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond74) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond74) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond74) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond74) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond74) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond74) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond74) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond74) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond74) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond74) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond74) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond74) CFA_SP SP+0
        CFI (cfiCond74) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond75 Using cfiCommon0
        CFI (cfiCond75) NoFunction
        CFI (cfiCond75) Conditional ??CrossCallReturnLabel_49
        CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond75) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond75) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond75) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond75) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond75) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond75) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond75) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond75) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond75) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond75) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond75) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond75) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond75) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond75) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond75) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond75) CFA_SP SP+0
        CFI (cfiCond75) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker76 Using cfiCommon1
        CFI (cfiPicker76) NoFunction
        CFI (cfiPicker76) Picker
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_52:
        RET
        CFI EndBlock cfiCond72
        CFI EndBlock cfiCond73
        CFI EndBlock cfiCond74
        CFI EndBlock cfiCond75
        CFI EndBlock cfiPicker76

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
        CFI Block cfiCond77 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_50, ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond78 Using cfiCommon0
        CFI (cfiCond78) NoFunction
        CFI (cfiCond78) Conditional ??CrossCallReturnLabel_50, ??CrossCallReturnLabel_1
        CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond78) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond78) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond78) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond78) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond78) CFA_SP SP+0
        CFI (cfiCond78) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond79 Using cfiCommon0
        CFI (cfiCond79) NoFunction
        CFI (cfiCond79) Conditional ??CrossCallReturnLabel_52, ??CrossCallReturnLabel_48
        CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond79) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond79) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond79) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond79) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond79) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond79) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond79) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond79) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond79) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond79) CFA_SP SP+0
        CFI (cfiCond79) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond80 Using cfiCommon0
        CFI (cfiCond80) NoFunction
        CFI (cfiCond80) Conditional ??CrossCallReturnLabel_52, ??CrossCallReturnLabel_49
        CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond80) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond80) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond80) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond80) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond80) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond80) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond80) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond80) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond80) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond80) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond80) CFA_SP SP+0
        CFI (cfiCond80) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond81 Using cfiCommon0
        CFI (cfiCond81) NoFunction
        CFI (cfiCond81) Conditional ??CrossCallReturnLabel_52, ??CrossCallReturnLabel_46
        CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond81) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond81) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond81) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond81) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond81) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond81) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond81) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond81) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond81) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond81) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond81) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond81) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond81) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond81) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond81) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond81) CFA_SP SP+0
        CFI (cfiCond81) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond82 Using cfiCommon0
        CFI (cfiCond82) NoFunction
        CFI (cfiCond82) Conditional ??CrossCallReturnLabel_52, ??CrossCallReturnLabel_47
        CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond82) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond82) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond82) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond82) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond82) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond82) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond82) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond82) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond82) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond82) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond82) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond82) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond82) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond82) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond82) CFA_SP SP+0
        CFI (cfiCond82) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond83 Using cfiCommon0
        CFI (cfiCond83) NoFunction
        CFI (cfiCond83) Conditional ??CrossCallReturnLabel_51, ??CrossCallReturnLabel_2
        CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond83) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond83) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond83) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond83) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond83) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond83) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond83) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond83) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond83) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond83) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond83) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond83) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond83) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond83) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond83) CFA_SP SP+0
        CFI (cfiCond83) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond84 Using cfiCommon0
        CFI (cfiCond84) NoFunction
        CFI (cfiCond84) Conditional ??CrossCallReturnLabel_51, ??CrossCallReturnLabel_3
        CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond84) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond84) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond84) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond84) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond84) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond84) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond84) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond84) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond84) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond84) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond84) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond84) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond84) CFA_SP SP+0
        CFI (cfiCond84) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker85 Using cfiCommon1
        CFI (cfiPicker85) NoFunction
        CFI (cfiPicker85) Picker
        SUBB    A,R1
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        RET
        CFI EndBlock cfiCond77
        CFI EndBlock cfiCond78
        CFI EndBlock cfiCond79
        CFI EndBlock cfiCond80
        CFI EndBlock cfiCond81
        CFI EndBlock cfiCond82
        CFI EndBlock cfiCond83
        CFI EndBlock cfiCond84
        CFI EndBlock cfiPicker85

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
        CFI Block cfiCond86 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_12
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond87 Using cfiCommon0
        CFI (cfiCond87) NoFunction
        CFI (cfiCond87) Conditional ??CrossCallReturnLabel_13
        CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond87) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond87) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond87) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond87) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond87) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond87) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond87) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond87) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond87) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond87) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond87) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond87) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond87) CFA_SP SP+0
        CFI (cfiCond87) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond88 Using cfiCommon0
        CFI (cfiCond88) NoFunction
        CFI (cfiCond88) Conditional ??CrossCallReturnLabel_14
        CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond88) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond88) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond88) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond88) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond88) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond88) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond88) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond88) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond88) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond88) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond88) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond88) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond88) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond88) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond88) CFA_SP SP+0
        CFI (cfiCond88) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond89 Using cfiCommon0
        CFI (cfiCond89) NoFunction
        CFI (cfiCond89) Conditional ??CrossCallReturnLabel_15
        CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond89) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond89) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond89) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond89) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond89) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond89) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond89) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond89) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond89) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond89) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond89) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond89) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond89) CFA_SP SP+0
        CFI (cfiCond89) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker90 Using cfiCommon1
        CFI (cfiPicker90) NoFunction
        CFI (cfiPicker90) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
        CFI EndBlock cfiCond86
        CFI EndBlock cfiCond87
        CFI EndBlock cfiCond88
        CFI EndBlock cfiCond89
        CFI EndBlock cfiPicker90

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
        CFI Block cfiCond91 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_57
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond92 Using cfiCommon0
        CFI (cfiCond92) NoFunction
        CFI (cfiCond92) Conditional ??CrossCallReturnLabel_58
        CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond92) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond92) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond92) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond92) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond92) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond92) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond92) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond92) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond92) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond92) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond92) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond92) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond92) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond92) CFA_SP SP+0
        CFI (cfiCond92) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker93 Using cfiCommon1
        CFI (cfiPicker93) NoFunction
        CFI (cfiPicker93) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CFI EndBlock cfiCond91
        CFI EndBlock cfiCond92
        CFI EndBlock cfiPicker93
        REQUIRE ??Subroutine26_0
        ; // Fall through to label ??Subroutine26_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine26_0:
        CFI Block cfiCond94 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_53
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond95 Using cfiCommon0
        CFI (cfiCond95) NoFunction
        CFI (cfiCond95) Conditional ??CrossCallReturnLabel_54
        CFI (cfiCond95) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond95) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond95) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond95) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond95) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond95) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond95) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond95) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond95) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond95) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond95) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond95) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond95) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond95) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond95) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond95) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond95) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond95) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond95) CFA_SP SP+0
        CFI (cfiCond95) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond96 Using cfiCommon0
        CFI (cfiCond96) NoFunction
        CFI (cfiCond96) Conditional ??CrossCallReturnLabel_55
        CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond96) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond96) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond96) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond96) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond96) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond96) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond96) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond96) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond96) CFA_SP SP+-2
        CFI (cfiCond96) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond97 Using cfiCommon0
        CFI (cfiCond97) NoFunction
        CFI (cfiCond97) Conditional ??CrossCallReturnLabel_56
        CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond97) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond97) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond97) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond97) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond97) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond97) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond97) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond97) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond97) CFA_SP SP+0
        CFI (cfiCond97) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond98 Using cfiCommon0
        CFI (cfiCond98) NoFunction
        CFI (cfiCond98) Conditional ??CrossCallReturnLabel_57
        CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond98) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond98) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond98) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond98) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond98) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond98) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond98) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond98) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond98) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond98) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond98) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond98) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond98) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond98) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond98) CFA_SP SP+0
        CFI (cfiCond98) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond99 Using cfiCommon0
        CFI (cfiCond99) NoFunction
        CFI (cfiCond99) Conditional ??CrossCallReturnLabel_58
        CFI (cfiCond99) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond99) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond99) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond99) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond99) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond99) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond99) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond99) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond99) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond99) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond99) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond99) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond99) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond99) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond99) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond99) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond99) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond99) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond99) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond99) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond99) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond99) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond99) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond99) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond99) CFA_SP SP+0
        CFI (cfiCond99) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker100 Using cfiCommon1
        CFI (cfiPicker100) NoFunction
        CFI (cfiPicker100) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        RET
        CFI EndBlock cfiCond94
        CFI EndBlock cfiCond95
        CFI EndBlock cfiCond96
        CFI EndBlock cfiCond97
        CFI EndBlock cfiCond98
        CFI EndBlock cfiCond99
        CFI EndBlock cfiPicker100

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
        CFI Block cfiCond101 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_6
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond102 Using cfiCommon0
        CFI (cfiCond102) NoFunction
        CFI (cfiCond102) Conditional ??CrossCallReturnLabel_7
        CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond102) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond102) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond102) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond102) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond102) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond102) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond102) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond102) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond102) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond102) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond102) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond102) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond102) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond102) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond102) CFA_SP SP+0
        CFI (cfiCond102) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker103 Using cfiCommon1
        CFI (cfiPicker103) NoFunction
        CFI (cfiPicker103) Picker
        MOV     DPTR,#GUI_Context + 15
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V0 + 6
        RET
        CFI EndBlock cfiCond101
        CFI EndBlock cfiCond102
        CFI EndBlock cfiPicker103

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiCond104 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_4
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond105 Using cfiCommon0
        CFI (cfiCond105) NoFunction
        CFI (cfiCond105) Conditional ??CrossCallReturnLabel_5
        CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond105) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond105) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond105) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond105) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond105) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond105) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond105) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond105) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond105) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond105) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond105) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond105) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond105) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond105) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond105) CFA_SP SP+0
        CFI (cfiCond105) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker106 Using cfiCommon1
        CFI (cfiPicker106) NoFunction
        CFI (cfiPicker106) Picker
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V0 + 6
        RET
        CFI EndBlock cfiCond104
        CFI EndBlock cfiCond105
        CFI EndBlock cfiPicker106

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiCond107 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond108 Using cfiCommon0
        CFI (cfiCond108) NoFunction
        CFI (cfiCond108) Conditional ??CrossCallReturnLabel_3
        CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond108) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond108) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond108) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond108) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond108) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond108) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond108) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond108) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond108) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond108) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond108) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond108) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond108) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond108) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond108) CFA_SP SP+0
        CFI (cfiCond108) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiPicker109 Using cfiCommon1
        CFI (cfiPicker109) NoFunction
        CFI (cfiPicker109) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        CLR     C
        MOV     A,R6
        SUBB    A,R0
        MOV     A,R7
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_51:
        RET
        CFI EndBlock cfiCond107
        CFI EndBlock cfiCond108
        CFI EndBlock cfiPicker109
//  257 
//  258 /*********************************************************************
//  259 *
//  260 *       GUI_FillPolygon
//  261 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  262 void GUI_FillPolygon(const GUI_POINT* pPoints, int NumPoints, int x0, int y0) {
GUI_FillPolygon:
        CFI Block cfiBlock110 Using cfiCommon0
        CFI Function GUI_FillPolygon
        CODE
        FUNCALL GUI_FillPolygon, GL_FillPolygon
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
//  263   halIntState_t state;
//  264   GUI_LOCK(state);
        MOV     A,0xa8
        MOV     R6,A
        CLR     0xa8.7
//  265   #if (GUI_WINSUPPORT)
//  266     WM_ADDORG(x0, y0);
//  267     WM_ITERATE_START(NULL); {
//  268   #endif
//  269   GL_FillPolygon (pPoints, NumPoints, x0, y0);
        ; Setup parameters for call to function GL_FillPolygon
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ??GL_FillPolygon?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
//  270   #if (GUI_WINSUPPORT)
//  271     } WM_ITERATE_END();
//  272   #endif
//  273   GUI_UNLOCK(state);
        MOV     A,R6
        MOV     C,0xE0 /* A   */.7
        MOV     0xa8.7,C
//  274 }
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock110
        REQUIRE _A_IEN0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_1:
        DD 1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??_CheckYInterSect?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    _CheckYInterSect

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??_Add?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    _Add

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GL_FillPolygon?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GL_FillPolygon

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GUI_FillPolygon?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GUI_FillPolygon

        END
//  275 
//  276 /*************************** End of file ****************************/
// 
// 1 625 bytes in segment BANKED_CODE
//    24 bytes in segment BANK_RELAYS
//     1 byte  in segment SFR_AN
//     4 bytes in segment XDATA_ROM_C
//    26 bytes in segment XDATA_Z
// 
// 1 649 bytes of CODE  memory
//     0 bytes of CONST memory (+ 4 bytes shared)
//     0 bytes of DATA  memory (+ 1 byte  shared)
//    26 bytes of XDATA memory
//
//Errors: none
//Warnings: none
