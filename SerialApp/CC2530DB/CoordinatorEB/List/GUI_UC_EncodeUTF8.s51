///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        14/Jun/2016  16:18:05 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\C /
//                          ore\GUI_UC_EncodeUTF8.c                           /
//    Command line       =  -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย /
//                          ็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack /
//                          \Utilities\SerialApp\CC2530DB\..\..\..\Tools\CC25 /
//                          30DB\f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func  /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8        /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)   /
//                          -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย /
//                          ็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack /
//                          \Utilities\SerialApp\CC2530DB\..\..\..\Tools\CC25 /
//                          30DB\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0        /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0x1001                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘น /
//                          โลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2. /
//                          5.1a\Components\uCGUI\Core\GUI_UC_EncodeUTF8.c    /
//                          -D HAL_UART=TRUE -D SERIAL_APP_PORT=0 -D COOR -D  /
//                          LCD_SUPPORTED -D NV_INIT -lC                      /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\CoordinatorEB\List\    /
//                          -lA F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ /
//                          ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstac /
//                          k\Utilities\SerialApp\CC2530DB\CoordinatorEB\List /
//                          \ --diag_suppress Pe001,Pa010 -o                  /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\CoordinatorEB\Obj\ -e  /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\ -I                    /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\Public\ -I          /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\uCGUI\Core\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื /
//                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a /
//                          \Projects\zstack\Utilities\SerialApp\CC2530DB\..\ /
//                          ..\..\..\..\Components\uCGUI\MultiLayer\ -I       /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\uCGUI\Config\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโล /
//                          ฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5. /
//                          1a\Projects\zstack\Utilities\SerialApp\CC2530DB\. /
//                          .\Coordinator\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืส /
//                          มฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ /
//                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\. /
//                          .\..\ZMain\TI2530DB\ -I                           /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\hal\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬ /
//                          ืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Utilities\SerialApp\CC2530DB\.. /
//                          \..\..\..\..\Components\hal\target\CC2530EB\ -I   /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mac\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬ /
//                          ืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Utilities\SerialApp\CC2530DB\.. /
//                          \..\..\..\..\Components\mac\high_level\ -I        /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mac\low_level\srf04\ -I                       /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mac\low_level\srf04\single_chip\ -I           /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mt\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Z /
//                          igBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Project /
//                          s\zstack\Utilities\SerialApp\CC2530DB\..\..\..\.. /
//                          \..\Components\osal\include\ -I                   /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\services\saddr\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘น /
//                          โลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2. /
//                          5.1a\Projects\zstack\Utilities\SerialApp\CC2530DB /
//                          \..\..\..\..\..\Components\services\sdata\ -I     /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\stack\af\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสม /
//                          ฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\P /
//                          rojects\zstack\Utilities\SerialApp\CC2530DB\..\.. /
//                          \..\..\..\Components\stack\nwk\ -I                /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\stack\sapi\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื /
//                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a /
//                          \Projects\zstack\Utilities\SerialApp\CC2530DB\..\ /
//                          ..\..\..\..\Components\stack\sec\ -I              /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\stack\sys\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืส /
//                          มฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ /
//                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\. /
//                          .\..\..\..\Components\stack\zdo\ -I               /
//                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\zmac\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210 /
//                          \ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje /
//                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ /
//                          ..\..\Components\zmac\f8w\ -Ohz                   /
//                          --require_prototypes                              /
//    List file          =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\W /
//                          SN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Ut /
//                          ilities\SerialApp\CC2530DB\CoordinatorEB\List\GUI /
//                          _UC_EncodeUTF8.s51                                /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME GUI_UC_EncodeUTF8

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?S_SHL
        EXTERN ?US_SHR
        EXTERN ?US_SWITCH_DENSE
        EXTERN ?V0

        PUBLIC ??GUI_UC_SetEncodeUTF8?relay
        FUNCTION ??GUI_UC_SetEncodeUTF8?relay,0203H
        FUNCTION ??_CalcSizeOfChar?relay,0203H
        FUNCTION ??_Encode?relay,0203H
        FUNCTION ??_GetCharCode?relay,0203H
        FUNCTION ??_GetCharSize?relay,0203H
        PUBLIC GUI_UC_SetEncodeUTF8
        FUNCTION GUI_UC_SetEncodeUTF8,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBWEAK _A_IEN0
        FUNCTION _CalcSizeOfChar,0603H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCTION _Encode,0a1603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        FUNCTION _GetCharCode,0603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        FUNCTION _GetCharSize,0603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
GUI_UC_SetEncodeUTF8 SYMBOL "GUI_UC_SetEncodeUTF8"
??GUI_UC_SetEncodeUTF8?relay SYMBOL "?relay", GUI_UC_SetEncodeUTF8

        EXTERN GUI_Context

// F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Core\GUI_UC_EncodeUTF8.c
//    1 /*
//    2 *********************************************************************************************************
//    3 *                                                uC/GUI
//    4 *                        Universal graphic software for embedded applications
//    5 *
//    6 *                       (c) Copyright 2002, Micrium Inc., Weston, FL
//    7 *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
//    8 *
//    9 *              ตC/GUI is protected by international copyright laws. Knowledge of the
//   10 *              source code may not be used to write a similar product. This file may
//   11 *              only be used in accordance with a license and should not be redistributed
//   12 *              in any way. We appreciate your understanding and fairness.
//   13 *
//   14 ----------------------------------------------------------------------
//   15 File        : GUI_UC_EncodeUTF8.c
//   16 Purpose     : Encoding routines
//   17 ---------------------------END-OF-HEADER------------------------------
//   18 */
//   19 
//   20 #include "GUI_Protected.h"

        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DATA8
        DS 1
//   21 
//   22 /*********************************************************************
//   23 *
//   24 *       Static code
//   25 *
//   26 **********************************************************************
//   27 */
//   28 /*********************************************************************
//   29 *
//   30 *       _GetCharCode
//   31 *
//   32 * Purpose:
//   33 *   Return the UNICODE character code of the current character.
//   34 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   35 static U16 _GetCharCode(const char GUI_UNI_PTR * s) {
_GetCharCode:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function _GetCharCode
        CODE
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
//   36   U16 r;
//   37   U8 Char = *(const U8*)s;
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
//   38   if ((Char & 0x80) == 0) {                /* Single byte (ASCII)  */
        MOV     C,0xE0 /* A   */.7
        JC      ??_GetCharCode_0
//   39     r = Char;
        MOV     DPL,A
        MOV     R2,DPL
        SJMP    ??_GetCharCode_1
//   40   } else if ((Char & 0xe0) == 0xc0) {      /* Double byte sequence */
??_GetCharCode_0:
        MOV     A,#-0x20
        ANL     A,?V0 + 2
        XRL     A,#0xc0
        JNZ     ??_GetCharCode_2
//   41     r = (Char & 0x1f) << 6;
//   42     Char = *(++s);
//   43     Char &= 0x3f;
//   44     r |= Char;
        MOV     A,?V0 + 2
        ANL     A,#0x1f
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,#0x0
        MOV     A,#0x6
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x3f
        MOV     R0,A
        MOV     A,?V0 + 0
        ORL     A,R0
        MOV     R2,A
        MOV     R3,?V0 + 1
        SJMP    ??_GetCharCode_3
//   45   } else if ((Char & 0xf0) == 0xe0) {      /* 3 byte sequence      */
??_GetCharCode_2:
        MOV     A,#-0x10
        ANL     A,?V0 + 2
        XRL     A,#0xe0
        JNZ     ??_GetCharCode_4
//   46     r = (Char & 0x0f) << 12;
//   47     Char = *(++s);
        INC     DPTR
//   48     Char &= 0x3f;
//   49     r |= (Char << 6);
//   50     Char = *(++s);
//   51     Char &= 0x3f;
//   52     r |= Char;
        MOV     ?V0 + 3,#0x0
        MOV     A,#0xc
        MOV     R0,#?V0 + 2
        LCALL   ?S_SHL
        MOVX    A,@DPTR
        ANL     A,#0x3f
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,#0x0
        MOV     A,#0x6
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,?V0 + 3
        ORL     A,?V0 + 1
        MOV     R1,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x3f
        MOV     R2,A
        MOV     A,?V0 + 0
        ORL     A,R2
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        SJMP    ??_GetCharCode_3
//   53   } else {
//   54     GUI_DEBUG_ERROROUT("Illegal character during UTF-8 decoding!");
//   55     r = 1;       /* Illegal character. To avoid endless loops in upper layers, we return 1 rather than 0. */
??_GetCharCode_4:
        MOV     R2,#0x1
??_GetCharCode_1:
        MOV     R3,#0x0
        CFI EndBlock cfiBlock0
//   56   }
//   57   return r;
??_GetCharCode_3:
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0
//   58 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//   59 
//   60 /*********************************************************************
//   61 *
//   62 *       _GetCharSize
//   63 *
//   64 * Purpose:
//   65 *   Return the number of bytes of the current character.
//   66 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   67 static int _GetCharSize(const char GUI_UNI_PTR * s) {
_GetCharSize:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function _GetCharSize
        CODE
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   68   U8 Char = *s;
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R0,A
//   69   if ((Char & 0x80) == 0) {
        MOV     C,0xE0 /* A   */.7
        JC      ??_GetCharSize_0
//   70     return 1;
??_GetCharSize_1:
        MOV     R2,#0x1
        SJMP    ??_GetCharSize_2
//   71   } else if ((Char & 0xe0) == 0xc0) {
??_GetCharSize_0:
        MOV     A,#-0x20
        ANL     A,R0
        XRL     A,#0xc0
        JNZ     ??_GetCharSize_3
//   72     return 2;
        MOV     R2,#0x2
        SJMP    ??_GetCharSize_2
//   73   } else if ((Char & 0xf0) == 0xe0) {
??_GetCharSize_3:
        MOV     A,#-0x10
        ANL     A,R0
        XRL     A,#0xe0
        JNZ     ??_GetCharSize_1
//   74     return 3;
        MOV     R2,#0x3
??_GetCharSize_2:
        MOV     R3,#0x0
        CFI EndBlock cfiBlock2
//   75   }
        REQUIRE ?Subroutine1
        ; // Fall through to label ?Subroutine1
//   76   GUI_DEBUG_ERROROUT("Illegal character during UTF-8 decoding!");
//   77   return 1;       /* Illegal character. To avoid endless loops in upper layers, we return 1 rather than 0. */
//   78 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock3
//   79 
//   80 /*********************************************************************
//   81 *
//   82 *       _CalcSizeOfChar
//   83 *
//   84 * Purpose:
//   85 *   Return the number of bytes needed for the given character.
//   86 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   87 static int _CalcSizeOfChar(U16 Char) {
_CalcSizeOfChar:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function _CalcSizeOfChar
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//   88   int r;
//   89   if (Char & 0xF800) {                /* Single byte (ASCII)  */
        MOV     A,R3
        ANL     A,#0xf8
        JZ      ??_CalcSizeOfChar_0
//   90     r = 3;
        MOV     R2,#0x3
        SJMP    ??_CalcSizeOfChar_1
//   91   } else if (Char & 0xFF80) {         /* Double byte sequence */
??_CalcSizeOfChar_0:
        MOV     A,R2
        ANL     A,#0x80
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??_CalcSizeOfChar_2
//   92     r = 2;
        MOV     R2,#0x2
        SJMP    ??_CalcSizeOfChar_1
//   93   } else {                            /* 3 byte sequence      */
//   94     r = 1;
??_CalcSizeOfChar_2:
        MOV     R2,#0x1
??_CalcSizeOfChar_1:
        MOV     R3,#0x0
//   95   }
//   96   return r;
        LJMP    ?BRET
        CFI EndBlock cfiBlock4
//   97 }
//   98 
//   99 /*********************************************************************
//  100 *
//  101 *       _Encode
//  102 *
//  103 * Purpose:
//  104 *   Encode character into 1/2/3 bytes.
//  105 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  106 static int _Encode(char *s, U16 Char) {
_Encode:
        CFI Block cfiBlock5 Using cfiCommon0
        CFI Function _Encode
        CODE
        FUNCALL _Encode, _CalcSizeOfChar
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
//  107   int r;
//  108   r = _CalcSizeOfChar(Char);
        ; Setup parameters for call to function _CalcSizeOfChar
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??_CalcSizeOfChar?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
//  109   switch (r) {
        MOV     R0,#?V0 + 2
        LCALL   ?US_SWITCH_DENSE
`?<Jumptable for _Encode>_0`:
        DATA
        DATA16
        DATA
        DATA16
        DW        1
        DATA
        DATA8
        DATA
        DATA8
        DB        2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??_Encode_0
        DATA
        DATA16
        DATA
        DATA16
        DW        ??_Encode_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??_Encode_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??_Encode_3
        CODE
//  110   case 1:
//  111     *s = (char)Char;
??_Encode_1:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V0 + 0
        SJMP    ??_Encode_4
//  112     break;
//  113   case 2:
//  114     *s++ = 0xC0 | (Char >> 6);
??_Encode_2:
        MOV     ?V0 + 2,?V0 + 0
        MOV     ?V0 + 3,?V0 + 1
        MOV     A,#0x6
        MOV     R0,#?V0 + 2
        LCALL   ?US_SHR
        MOV     A,?V0 + 2
        ORL     A,#0xc0
        MOV     DPL,R6
        MOV     DPH,R7
        SJMP    ??_Encode_5
//  115     *s   = 0x80 | (Char & 0x3F);
//  116     break;
//  117   case 3:
//  118     *s++ = 0xE0 | (Char >> 12);
??_Encode_3:
        MOV     ?V0 + 2,?V0 + 0
        MOV     ?V0 + 3,?V0 + 1
        MOV     A,#0xc
        MOV     R0,#?V0 + 2
        LCALL   ?US_SHR
        MOV     A,?V0 + 2
        ORL     A,#0xe0
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
        INC     DPTR
//  119     *s++ = 0x80 | ((Char >> 6) & 0x3F);
        MOV     ?V0 + 2,?V0 + 0
        MOV     ?V0 + 3,?V0 + 1
        MOV     A,#0x6
        MOV     R0,#?V0 + 2
        LCALL   ?US_SHR
        MOV     A,?V0 + 2
        ANL     A,#0x3f
        ORL     A,#0x80
??_Encode_5:
        MOVX    @DPTR,A
        INC     DPTR
//  120     *s   = 0x80 | (Char & 0x3F);
        MOV     A,?V0 + 0
        ANL     A,#0x3f
        ORL     A,#0x80
??_Encode_4:
        MOVX    @DPTR,A
//  121     break;
//  122   }
//  123   return r;
??_Encode_0:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock5
//  124 }
//  125 
//  126 /*********************************************************************
//  127 *
//  128 *       _API_Table
//  129 */

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  130 static const GUI_UC_ENC_APILIST _API_Table = {
_API_Table:
        DATA16
        DW ??_GetCharCode?relay
        DW ??_GetCharSize?relay
        DW ??_CalcSizeOfChar?relay
        DW ??_Encode?relay
//  131   _GetCharCode,     /*  return character code as U16 (Unicode) */
//  132   _GetCharSize,     /*  return size of character: 1/2/3        */
//  133   _CalcSizeOfChar,  /*  return size of character: 1/2/3        */
//  134   _Encode           /*  Encode character into 1/2/3 bytes      */
//  135 };
//  136 
//  137 /*********************************************************************
//  138 *
//  139 *       Exported code
//  140 *
//  141 **********************************************************************
//  142 */
//  143 /*********************************************************************
//  144 *
//  145 *       GUI_UC_SetEncodeUTF8
//  146 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  147 void GUI_UC_SetEncodeUTF8(void) {
GUI_UC_SetEncodeUTF8:
        CFI Block cfiBlock6 Using cfiCommon0
        CFI Function GUI_UC_SetEncodeUTF8
        CODE
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  148   halIntState_t state;  
//  149   GUI_LOCK(state);
        MOV     A,0xa8
        MOV     R0,A
        CLR     0xa8.7
//  150   GUI_Context.pUC_API = &_API_Table;
        MOV     DPTR,#GUI_Context + 23
        MOV     A,#_API_Table & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(_API_Table >> 8) & 0xff
        MOVX    @DPTR,A
//  151   GUI_UNLOCK(state);
        MOV     A,R0
        MOV     C,0xE0 /* A   */.7
        MOV     0xa8.7,C
//  152 }
        LJMP    ?Subroutine1 & 0xFFFF
        CFI EndBlock cfiBlock6
        REQUIRE _A_IEN0

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??_GetCharCode?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    _GetCharCode

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??_GetCharSize?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    _GetCharSize

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??_CalcSizeOfChar?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    _CalcSizeOfChar

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??_Encode?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    _Encode

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GUI_UC_SetEncodeUTF8?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GUI_UC_SetEncodeUTF8

        END
//  153 
//  154 /*************************** End of file ****************************/
// 
// 349 bytes in segment BANKED_CODE
//  30 bytes in segment BANK_RELAYS
//   1 byte  in segment SFR_AN
//   8 bytes in segment XDATA_ROM_C
// 
// 379 bytes of CODE  memory
//   8 bytes of CONST memory
//   0 bytes of DATA  memory (+ 1 byte shared)
//
//Errors: none
//Warnings: none
