###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         14/Jun/2016  16:18:40 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Cor #
#                          e\GUI_BMP_Serialize.c                              #
#    Command line       =  -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\..\..\..\Tools\CC2530D #
#                          B\f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func      #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\..\..\..\Tools\CC2530D #
#                          B\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0            #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1001                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโ #
#                          ลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5. #
#                          1a\Components\uCGUI\Core\GUI_BMP_Serialize.c -D    #
#                          HAL_UART=TRUE -D SERIAL_APP_PORT=0 -D COOR -D      #
#                          LCD_SUPPORTED -D NV_INIT -lC                       #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\ -lA   #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\       #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\Obj\ -e     #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\ -I                    #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\Public\ -I             #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \uCGUI\Core\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ2 #
#                          10\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\uCGUI\MultiLayer\ -I              #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \uCGUI\Config\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสม #
#                          ฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Pr #
#                          ojects\zstack\Utilities\SerialApp\CC2530DB\..\Coor #
#                          dinator\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Z #
#                          igBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Utilities\SerialApp\CC2530DB\..\..\..\ZMai #
#                          n\TI2530DB\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ21 #
#                          0\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje #
#                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\. #
#                          .\..\Components\hal\include\ -I                    #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \hal\target\CC2530EB\ -I                           #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ #
#                          210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\high_level\ -I               #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\ -I                           #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\single_chip\ -I               #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mt\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBe #
#                          eอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zst #
#                          ack\Utilities\SerialApp\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \services\saddr\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื #
#                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ #
#                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\.. #
#                          \..\..\..\Components\services\sdata\ -I            #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\af\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210 #
#                          \ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projec #
#                          ts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\.. #
#                          \..\Components\stack\nwk\ -I                       #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\sapi\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ2 #
#                          10\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\stack\sec\ -I                     #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\sys\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ21 #
#                          0\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje #
#                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\. #
#                          .\..\Components\stack\zdo\ -I                      #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \zmac\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Zig #
#                          Beeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\z #
#                          stack\Utilities\SerialApp\CC2530DB\..\..\..\..\..\ #
#                          Components\zmac\f8w\ -Ohz --require_prototypes     #
#    List file          =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\GUI_BM #
#                          P_Serialize.lst                                    #
#    Object file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\Obj\GUI_BMP #
#                          _Serialize.r51                                     #
#                                                                             #
#                                                                             #
###############################################################################

F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Core\GUI_BMP_Serialize.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              ตC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_BMP_Serialize.c
     16          Purpose     : Implementation of GUI_BMP_Serialize
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "GUI.h"
     21          
     22          /*********************************************************************
     23          *
     24          *       Defines
     25          *
     26          **********************************************************************
     27          */
     28          
     29          #define DIB_HEADER_MARKER ((U16) ('M' << 8) | 'B') /* DIB Header Marker - used in writing DIBs to files */
     30          
     31          #define SIZEOF_BITMAPFILEHEADER 14
     32          #define SIZEOF_BITMAPINFOHEADER 40
     33          
     34          /*********************************************************************
     35          *
     36          *       Static code
     37          *
     38          **********************************************************************
     39          */
     40          /*********************************************************************
     41          *
     42          *       _SendU16
     43          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     44          static void _SendU16(GUI_CALLBACK_VOID_U8_P * pfSerialize, U16 Data, void * p) {
   \                     _SendU16:
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 2,R2
   \   000007   8B..         MOV     ?V0 + 3,R3
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
   \   00000D   740C         MOV     A,#0xc
   \   00000F   12....       LCALL   ?XSTACK_DISP0_8
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F5..         MOV     ?V0 + 0,A
   \   000015   A3           INC     DPTR
   \   000016   E0           MOVX    A,@DPTR
   \   000017   F5..         MOV     ?V0 + 1,A
     45            (*pfSerialize)((U8)Data, p);
   \   000019                ; Setup parameters for indirect call
   \   000019   AA..         MOV     R2,?V0 + 0
   \   00001B   FB           MOV     R3,A
   \   00001C   EE           MOV     A,R6
   \   00001D   F9           MOV     R1,A
   \   00001E   85..82       MOV     DPL,?V0 + 2
   \   000021   85..83       MOV     DPH,?V0 + 3
   \   000024   12....       LCALL   ?CALL_IND
     46            (*pfSerialize)(Data >> 8, p);
   \   000027                ; Setup parameters for indirect call
   \   000027   AA..         MOV     R2,?V0 + 0
   \   000029   AB..         MOV     R3,?V0 + 1
   \   00002B   EF           MOV     A,R7
   \   00002C   F9           MOV     R1,A
   \   00002D   85..82       MOV     DPL,?V0 + 2
   \   000030   85..83       MOV     DPH,?V0 + 3
   \   000033   12....       LCALL   ?CALL_IND
     47          }
   \   000036   7F04         MOV     R7,#0x4
   \   000038   02....       LJMP    ?BANKED_LEAVE_XDATA
     48          
     49          /*********************************************************************
     50          *
     51          *       _SendU32
     52          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     53          static void _SendU32(GUI_CALLBACK_VOID_U8_P * pfSerialize, U32 Data, void * p) {
   \                     _SendU32:
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 2,R4
   \   00000B   8D..         MOV     ?V0 + 3,R5
   \   00000D   7410         MOV     A,#0x10
   \   00000F   12....       LCALL   ?XSTACK_DISP0_8
   \   000012   78..         MOV     R0,#?V0 + 4
   \   000014   12....       LCALL   ?L_MOV_X
     54            _SendU16(pfSerialize, (U16)Data, p);
   \   000017                ; Setup parameters for call to function _SendU16
   \   000017   78..         MOV     R0,#?V0 + 2
   \   000019   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00001C   85....       MOV     ?V0 + 0,?V0 + 4
   \   00001F   85....       MOV     ?V0 + 1,?V0 + 5
   \   000022   AC..         MOV     R4,?V0 + 0
   \   000024   AD..         MOV     R5,?V0 + 1
   \   000026   12....       LCALL   ??_SendU16?relay
   \   000029   7402         MOV     A,#0x2
   \   00002B   12....       LCALL   ?DEALLOC_XSTACK8
     55            _SendU16(pfSerialize, Data >> 16, p);
   \   00002E                ; Setup parameters for call to function _SendU16
   \   00002E   78..         MOV     R0,#?V0 + 2
   \   000030   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000033   7410         MOV     A,#0x10
   \   000035   78..         MOV     R0,#?V0 + 4
   \   000037   12....       LCALL   ?UL_SHR
   \   00003A   AC..         MOV     R4,?V0 + 4
   \   00003C   AD..         MOV     R5,?V0 + 5
   \   00003E   EE           MOV     A,R6
   \   00003F   FA           MOV     R2,A
   \   000040   EF           MOV     A,R7
   \   000041   FB           MOV     R3,A
   \   000042   12....       LCALL   ??_SendU16?relay
   \   000045   7402         MOV     A,#0x2
   \   000047   12....       LCALL   ?DEALLOC_XSTACK8
     56          }
   \   00004A   7F08         MOV     R7,#0x8
   \   00004C   02....       LJMP    ?BANKED_LEAVE_XDATA
     57          
     58          /*********************************************************************
     59          *
     60          *       Exported routines
     61          *
     62          **********************************************************************
     63          */
     64          /*********************************************************************
     65          *
     66          *       GUI_BMP_SerializeEx
     67          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     68          void GUI_BMP_SerializeEx(GUI_CALLBACK_VOID_U8_P * pfSerialize, int x0, int y0, int xSize, int ySize, void * p) {
   \                     GUI_BMP_SerializeEx:
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 8
   \   000005   74F8         MOV     A,#-0x8
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   EA           MOV     A,R2
   \   000011   F0           MOVX    @DPTR,A
   \   000012   A3           INC     DPTR
   \   000013   EB           MOV     A,R3
   \   000014   F0           MOVX    @DPTR,A
   \   000015   7406         MOV     A,#0x6
   \   000017   12....       LCALL   ?XSTACK_DISP0_8
   \   00001A   EC           MOV     A,R4
   \   00001B   F0           MOVX    @DPTR,A
   \   00001C   A3           INC     DPTR
   \   00001D   ED           MOV     A,R5
   \   00001E   F0           MOVX    @DPTR,A
   \   00001F   7424         MOV     A,#0x24
   \   000021   12....       LCALL   ?XSTACK_DISP0_8
   \   000024   E0           MOVX    A,@DPTR
   \   000025   F5..         MOV     ?V0 + 12,A
   \   000027   A3           INC     DPTR
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F5..         MOV     ?V0 + 13,A
     69            int x, y, i;
     70            U32 BitmapOffset, FileSize;
     71            int BPP          = LCD_GetBitsPerPixel();
   \   00002B                ; Setup parameters for call to function LCD_GetBitsPerPixel
   \   00002B   12....       LCALL   ??LCD_GetBitsPerPixel?relay
   \   00002E   7402         MOV     A,#0x2
   \   000030   12....       LCALL   ?XSTACK_DISP0_8
   \   000033   EA           MOV     A,R2
   \   000034   F0           MOVX    @DPTR,A
   \   000035   A3           INC     DPTR
   \   000036   EB           MOV     A,R3
   \   000037   F0           MOVX    @DPTR,A
     72            int BytesPerLine = ((BPP > 8) ? (2 * xSize + 2) : (xSize + 3)) & ~3;
   \   000038   7402         MOV     A,#0x2
   \   00003A   12....       LCALL   ?XSTACK_DISP0_8
   \   00003D   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_26:
   \   000040   7422         MOV     A,#0x22
   \   000042   4015         JC      ??GUI_BMP_SerializeEx_0
   \   000044   12....       LCALL   ?XSTACK_DISP0_8
   \   000047   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_36:
   \   00004A   E8           MOV     A,R0
   \   00004B   C3           CLR     C
   \   00004C   33           RLC     A
   \   00004D   F8           MOV     R0,A
   \   00004E   E9           MOV     A,R1
   \   00004F   33           RLC     A
   \   000050   F9           MOV     R1,A
   \   000051   E8           MOV     A,R0
   \   000052   2402         ADD     A,#0x2
   \   000054   08           INC     R0
   \   000055   08           INC     R0
   \   000056   E9           MOV     A,R1
   \   000057   8009         SJMP    ??GUI_BMP_SerializeEx_1
   \                     ??GUI_BMP_SerializeEx_0:
   \   000059   12....       LCALL   ?XSTACK_DISP0_8
   \   00005C   E0           MOVX    A,@DPTR
   \   00005D   2403         ADD     A,#0x3
   \   00005F   F8           MOV     R0,A
   \   000060   A3           INC     DPTR
   \   000061   E0           MOVX    A,@DPTR
   \                     ??GUI_BMP_SerializeEx_1:
   \   000062   3400         ADDC    A,#0x0
   \   000064   F9           MOV     R1,A
   \   000065   E8           MOV     A,R0
   \   000066   54FC         ANL     A,#0xfc
   \   000068   F5..         MOV     ?V0 + 0,A
   \   00006A   E9           MOV     A,R1
   \   00006B   F5..         MOV     ?V0 + 1,A
     73            int NumColors    = (BPP > 8) ? 0 : (1 << BPP);
   \   00006D   7402         MOV     A,#0x2
   \   00006F   12....       LCALL   ?XSTACK_DISP0_8
   \   000072   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_27:
   \   000075   4006         JC      ??GUI_BMP_SerializeEx_2
   \   000077   7E00         MOV     R6,#0x0
   \   000079   7F00         MOV     R7,#0x0
   \   00007B   8015         SJMP    ??GUI_BMP_SerializeEx_3
   \                     ??GUI_BMP_SerializeEx_2:
   \   00007D   75..01       MOV     ?V0 + 2,#0x1
   \   000080   75..00       MOV     ?V0 + 3,#0x0
   \   000083   7402         MOV     A,#0x2
   \   000085   12....       LCALL   ?XSTACK_DISP0_8
   \   000088   E0           MOVX    A,@DPTR
   \   000089   78..         MOV     R0,#?V0 + 2
   \   00008B   12....       LCALL   ?S_SHL
   \   00008E   AE..         MOV     R6,?V0 + 2
   \   000090   AF..         MOV     R7,?V0 + 3
     74            /* Write BITMAPFILEHEADER */
     75            BitmapOffset   = SIZEOF_BITMAPFILEHEADER
     76                           + SIZEOF_BITMAPINFOHEADER
     77                           + NumColors * 4;
   \                     ??GUI_BMP_SerializeEx_3:
   \   000092   8E..         MOV     ?V0 + 2,R6
   \   000094   8F..         MOV     ?V0 + 3,R7
   \   000096   7402         MOV     A,#0x2
   \   000098   78..         MOV     R0,#?V0 + 2
   \   00009A   12....       LCALL   ?S_SHL
   \   00009D   E5..         MOV     A,?V0 + 2
   \   00009F   2436         ADD     A,#0x36
   \   0000A1   F8           MOV     R0,A
   \   0000A2   E5..         MOV     A,?V0 + 3
   \   0000A4   3400         ADDC    A,#0x0
   \   0000A6   F9           MOV     R1,A
   \   0000A7   33           RLC     A
   \   0000A8   95E0         SUBB    A,0xE0 /* A   */
   \   0000AA   FA           MOV     R2,A
   \   0000AB   FB           MOV     R3,A
   \   0000AC   88..         MOV     ?V0 + 4,R0
   \   0000AE   89..         MOV     ?V0 + 5,R1
   \   0000B0   8A..         MOV     ?V0 + 6,R2
   \   0000B2   8B..         MOV     ?V0 + 7,R3
     78            FileSize       = BitmapOffset
     79                           + ySize * BytesPerLine;
     80            _SendU16(pfSerialize, DIB_HEADER_MARKER, p);       /* bfType */
   \   0000B4                ; Setup parameters for call to function _SendU16
   \   0000B4   7426         MOV     A,#0x26
   \   0000B6   12....       LCALL   ?XSTACK_DISP0_8
   \   0000B9   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000BC   7C42         MOV     R4,#0x42
   \   0000BE   7D4D         MOV     R5,#0x4d
   \   0000C0   7402         MOV     A,#0x2
   \   0000C2   12....       LCALL   ?XSTACK_DISP0_8
   \   0000C5   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_30:
   \   0000C8   12....       LCALL   ?DEALLOC_XSTACK8
     81            _SendU32(pfSerialize, FileSize, p);                /* bfSize */
   \   0000CB                ; Setup parameters for call to function _SendU32
   \   0000CB   85....       MOV     ?V0 + 8,?V0 + 12
   \   0000CE   85....       MOV     ?V0 + 9,?V0 + 13
   \   0000D1   E5..         MOV     A,?V0 + 8
   \   0000D3   85..F0       MOV     B,?V0 + 0
   \   0000D6   A4           MUL     AB
   \   0000D7   C5..         XCH     A,?V0 + 8
   \   0000D9   A8F0         MOV     R0,B
   \   0000DB   85..F0       MOV     B,?V0 + 1
   \   0000DE   A4           MUL     AB
   \   0000DF   28           ADD     A,R0
   \   0000E0   F8           MOV     R0,A
   \   0000E1   85..F0       MOV     B,?V0 + 0
   \   0000E4   E5..         MOV     A,?V0 + 9
   \   0000E6   A4           MUL     AB
   \   0000E7   28           ADD     A,R0
   \   0000E8   F5..         MOV     ?V0 + 9,A
   \   0000EA   33           RLC     A
   \   0000EB   95E0         SUBB    A,0xE0 /* A   */
   \   0000ED   F5..         MOV     ?V0 + 10,A
   \   0000EF   F5..         MOV     ?V0 + 11,A
   \   0000F1   85....       MOV     ?V0 + 0,?V0 + 4
   \   0000F4   85....       MOV     ?V0 + 1,?V0 + 5
   \   0000F7   85....       MOV     ?V0 + 2,?V0 + 6
   \   0000FA   85....       MOV     ?V0 + 3,?V0 + 7
   \   0000FD   78..         MOV     R0,#?V0 + 0
   \   0000FF   79..         MOV     R1,#?V0 + 8
   \   000101   12....       LCALL   ?L_ADD
   \   000104   78..         MOV     R0,#?V0 + 0
   \   000106   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   000109   742A         MOV     A,#0x2a
   \   00010B   12....       LCALL   ?XSTACK_DISP0_8
   \   00010E   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_13:
   \   000111   12....       LCALL   ?XSTACK_DISP0_8
   \   000114   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   000117   12....       LCALL   ?DEALLOC_XSTACK8
     82            _SendU32(pfSerialize, 0, p);                       /* bfReserved1, bfReserved2 */
   \   00011A                ; Setup parameters for call to function _SendU32
   \   00011A   90....       MOV     DPTR,#__Constant_0
   \   00011D   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000120   742A         MOV     A,#0x2a
   \   000122   12....       LCALL   ?XSTACK_DISP0_8
   \   000125   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_14:
   \   000128   12....       LCALL   ?XSTACK_DISP0_8
   \   00012B   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   00012E   12....       LCALL   ?DEALLOC_XSTACK8
     83            _SendU32(pfSerialize, BitmapOffset, p);            /* bfOffBits */
   \   000131                ; Setup parameters for call to function _SendU32
   \   000131   78..         MOV     R0,#?V0 + 4
   \   000133   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   000136   742A         MOV     A,#0x2a
   \   000138   12....       LCALL   ?XSTACK_DISP0_8
   \   00013B   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_15:
   \   00013E   12....       LCALL   ?XSTACK_DISP0_8
   \   000141   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   000144   12....       LCALL   ?DEALLOC_XSTACK8
     84            /* Write BITMAPINFOHEADER */
     85            _SendU32(pfSerialize, SIZEOF_BITMAPINFOHEADER, p); /* biSize */
   \   000147                ; Setup parameters for call to function _SendU32
   \   000147   90....       MOV     DPTR,#__Constant_28
   \   00014A   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   00014D   742A         MOV     A,#0x2a
   \   00014F   12....       LCALL   ?XSTACK_DISP0_8
   \   000152   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_16:
   \   000155   12....       LCALL   ?XSTACK_DISP0_8
   \   000158   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   00015B   12....       LCALL   ?DEALLOC_XSTACK8
     86            _SendU32(pfSerialize, xSize, p);                   /* biWidth */
   \   00015E                ; Setup parameters for call to function _SendU32
   \   00015E   7422         MOV     A,#0x22
   \   000160   12....       LCALL   ?XSTACK_DISP0_8
   \   000163   E0           MOVX    A,@DPTR
   \   000164   F5..         MOV     ?V0 + 0,A
   \   000166   A3           INC     DPTR
   \   000167   E0           MOVX    A,@DPTR
   \   000168   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_40:
   \   00016B   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00016E   742A         MOV     A,#0x2a
   \   000170   12....       LCALL   ?XSTACK_DISP0_8
   \   000173   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_17:
   \   000176   12....       LCALL   ?XSTACK_DISP0_8
   \   000179   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   00017C   12....       LCALL   ?DEALLOC_XSTACK8
     87            _SendU32(pfSerialize, ySize, p);                   /* biHeighth */
   \   00017F                ; Setup parameters for call to function _SendU32
   \   00017F   85....       MOV     ?V0 + 0,?V0 + 12
   \   000182   E5..         MOV     A,?V0 + 13
   \   000184   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_41:
   \   000187   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00018A   742A         MOV     A,#0x2a
   \   00018C   12....       LCALL   ?XSTACK_DISP0_8
   \   00018F   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_18:
   \   000192   12....       LCALL   ?XSTACK_DISP0_8
   \   000195   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   000198   12....       LCALL   ?DEALLOC_XSTACK8
     88            _SendU16(pfSerialize, 1, p);                       /* biPlanes */
   \   00019B                ; Setup parameters for call to function _SendU16
   \   00019B   7426         MOV     A,#0x26
   \   00019D   12....       LCALL   ?XSTACK_DISP0_8
   \   0001A0   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0001A3   7C01         MOV     R4,#0x1
   \   0001A5   7D00         MOV     R5,#0x0
   \   0001A7   7402         MOV     A,#0x2
   \   0001A9   12....       LCALL   ?XSTACK_DISP0_8
   \   0001AC   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_31:
   \   0001AF   12....       LCALL   ?DEALLOC_XSTACK8
     89            _SendU16(pfSerialize, (BPP  <= 8) ? 8 : 16, p);    /* biBitCount */
   \   0001B2   7402         MOV     A,#0x2
   \   0001B4   12....       LCALL   ?XSTACK_DISP0_8
   \   0001B7   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_28:
   \   0001BA   5004         JNC     ??GUI_BMP_SerializeEx_4
   \   0001BC   7C08         MOV     R4,#0x8
   \   0001BE   8002         SJMP    ??GUI_BMP_SerializeEx_5
   \                     ??GUI_BMP_SerializeEx_4:
   \   0001C0   7C10         MOV     R4,#0x10
   \                     ??GUI_BMP_SerializeEx_5:
   \   0001C2   7D00         MOV     R5,#0x0
   \   0001C4                ; Setup parameters for call to function _SendU16
   \   0001C4   7426         MOV     A,#0x26
   \   0001C6   12....       LCALL   ?XSTACK_DISP0_8
   \   0001C9   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0001CC   7402         MOV     A,#0x2
   \   0001CE   12....       LCALL   ?XSTACK_DISP0_8
   \   0001D1   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_32:
   \   0001D4   12....       LCALL   ?DEALLOC_XSTACK8
     90            _SendU32(pfSerialize, 0, p);                       /* biCompression */
   \   0001D7                ; Setup parameters for call to function _SendU32
   \   0001D7   90....       MOV     DPTR,#__Constant_0
   \   0001DA   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   0001DD   742A         MOV     A,#0x2a
   \   0001DF   12....       LCALL   ?XSTACK_DISP0_8
   \   0001E2   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_19:
   \   0001E5   12....       LCALL   ?XSTACK_DISP0_8
   \   0001E8   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   0001EB   12....       LCALL   ?DEALLOC_XSTACK8
     91            _SendU32(pfSerialize, 0, p);                       /* biSizeImage */
   \   0001EE                ; Setup parameters for call to function _SendU32
   \   0001EE   90....       MOV     DPTR,#__Constant_0
   \   0001F1   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   0001F4   742A         MOV     A,#0x2a
   \   0001F6   12....       LCALL   ?XSTACK_DISP0_8
   \   0001F9   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_20:
   \   0001FC   12....       LCALL   ?XSTACK_DISP0_8
   \   0001FF   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   000202   12....       LCALL   ?DEALLOC_XSTACK8
     92            _SendU32(pfSerialize, 0, p);                       /* biXPelsPerMeter */
   \   000205                ; Setup parameters for call to function _SendU32
   \   000205   90....       MOV     DPTR,#__Constant_0
   \   000208   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   00020B   742A         MOV     A,#0x2a
   \   00020D   12....       LCALL   ?XSTACK_DISP0_8
   \   000210   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_21:
   \   000213   12....       LCALL   ?XSTACK_DISP0_8
   \   000216   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   000219   12....       LCALL   ?DEALLOC_XSTACK8
     93            _SendU32(pfSerialize, 0, p);                       /* biYPelsPerMeter */
   \   00021C                ; Setup parameters for call to function _SendU32
   \   00021C   90....       MOV     DPTR,#__Constant_0
   \   00021F   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000222   742A         MOV     A,#0x2a
   \   000224   12....       LCALL   ?XSTACK_DISP0_8
   \   000227   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   00022A   12....       LCALL   ?XSTACK_DISP0_8
   \   00022D   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   000230   12....       LCALL   ?DEALLOC_XSTACK8
     94            _SendU32(pfSerialize, NumColors, p);               /* biClrUsed */
   \   000233                ; Setup parameters for call to function _SendU32
   \   000233   8E..         MOV     ?V0 + 0,R6
   \   000235   EF           MOV     A,R7
   \   000236   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_42:
   \   000239   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00023C   742A         MOV     A,#0x2a
   \   00023E   12....       LCALL   ?XSTACK_DISP0_8
   \   000241   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   000244   12....       LCALL   ?XSTACK_DISP0_8
   \   000247   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   00024A   12....       LCALL   ?DEALLOC_XSTACK8
     95            _SendU32(pfSerialize, 0, p);                       /* biClrImportant */
   \   00024D                ; Setup parameters for call to function _SendU32
   \   00024D   90....       MOV     DPTR,#__Constant_0
   \   000250   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000253   742A         MOV     A,#0x2a
   \   000255   12....       LCALL   ?XSTACK_DISP0_8
   \   000258   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_24:
   \   00025B   12....       LCALL   ?XSTACK_DISP0_8
   \   00025E   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   000261   12....       LCALL   ?DEALLOC_XSTACK8
     96            /* Write palette */
     97            for (i = 0; i < NumColors; i++) {
   \   000264   75..00       MOV     ?V0 + 14,#0x0
   \   000267   75..00       MOV     ?V0 + 15,#0x0
   \   00026A   8075         SJMP    ??GUI_BMP_SerializeEx_6
     98              U32 Color;
     99              Color = GUI_Index2Color(i);
   \                     ??GUI_BMP_SerializeEx_7:
   \   00026C                ; Setup parameters for call to function GUI_Index2Color
   \   00026C   AA..         MOV     R2,?V0 + 14
   \   00026E   AB..         MOV     R3,?V0 + 15
   \   000270   12....       LCALL   ??GUI_Index2Color?relay
   \   000273   8A..         MOV     ?V0 + 4,R2
   \   000275   8B..         MOV     ?V0 + 5,R3
   \   000277   8C..         MOV     ?V0 + 6,R4
   \   000279   8D..         MOV     ?V0 + 7,R5
    100              Color = ((Color >> 16) & 255) | (Color & 0xff00) | ((Color & 0xff) << 16);
    101              _SendU32(pfSerialize, Color, p);
   \   00027B                ; Setup parameters for call to function _SendU32
   \   00027B   8A..         MOV     ?V0 + 8,R2
   \   00027D   8B..         MOV     ?V0 + 9,R3
   \   00027F   8C..         MOV     ?V0 + 10,R4
   \   000281   8D..         MOV     ?V0 + 11,R5
   \   000283   7410         MOV     A,#0x10
   \   000285   78..         MOV     R0,#?V0 + 8
   \   000287   12....       LCALL   ?UL_SHR
   \   00028A   90....       MOV     DPTR,#__Constant_ff
   \   00028D   78..         MOV     R0,#?V0 + 8
   \   00028F   12....       LCALL   ?L_AND_X
   \   000292   8A..         MOV     ?V0 + 0,R2
   \   000294   8B..         MOV     ?V0 + 1,R3
   \   000296   8C..         MOV     ?V0 + 2,R4
   \   000298   8D..         MOV     ?V0 + 3,R5
   \   00029A   90....       MOV     DPTR,#__Constant_ff00
   \   00029D   78..         MOV     R0,#?V0 + 0
   \   00029F   12....       LCALL   ?L_AND_X
   \   0002A2   78..         MOV     R0,#?V0 + 8
   \   0002A4   79..         MOV     R1,#?V0 + 0
   \   0002A6   12....       LCALL   ?L_IOR
   \   0002A9   90....       MOV     DPTR,#__Constant_ff
   \   0002AC   78..         MOV     R0,#?V0 + 4
   \   0002AE   12....       LCALL   ?L_AND_X
   \   0002B1   7410         MOV     A,#0x10
   \   0002B3   78..         MOV     R0,#?V0 + 4
   \   0002B5   12....       LCALL   ?L_SHL
   \   0002B8   78..         MOV     R0,#?V0 + 8
   \   0002BA   79..         MOV     R1,#?V0 + 4
   \   0002BC   12....       LCALL   ?L_IOR
   \   0002BF   78..         MOV     R0,#?V0 + 8
   \   0002C1   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   0002C4   742A         MOV     A,#0x2a
   \   0002C6   12....       LCALL   ?XSTACK_DISP0_8
   \   0002C9   12....       LCALL   ?Subroutine1 & 0xFFFF
    102            }
   \                     ??CrossCallReturnLabel_25:
   \   0002CC   12....       LCALL   ?XSTACK_DISP0_8
   \   0002CF   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_12:
   \   0002D2   12....       LCALL   ?DEALLOC_XSTACK8
   \   0002D5   E5..         MOV     A,?V0 + 14
   \   0002D7   2401         ADD     A,#0x1
   \   0002D9   F5..         MOV     ?V0 + 14,A
   \   0002DB   E5..         MOV     A,?V0 + 15
   \   0002DD   3400         ADDC    A,#0x0
   \   0002DF   F5..         MOV     ?V0 + 15,A
   \                     ??GUI_BMP_SerializeEx_6:
   \   0002E1   C3           CLR     C
   \   0002E2   E5..         MOV     A,?V0 + 14
   \   0002E4   9E           SUBB    A,R6
   \   0002E5   E5..         MOV     A,?V0 + 15
   \   0002E7   9F           SUBB    A,R7
   \   0002E8   A2D2         MOV     C,0xD0 /* PSW */.2
   \   0002EA   65D0         XRL     A,PSW
   \   0002EC   33           RLC     A
   \   0002ED   5003         JNC     $+5
   \   0002EF   02....       LJMP    ??GUI_BMP_SerializeEx_7 & 0xFFFF
    103            /* Write pixels */
    104            for (y = ySize - 1; y >= 0; y--) {
   \   0002F2   E5..         MOV     A,?V0 + 12
   \   0002F4   24FF         ADD     A,#-0x1
   \   0002F6   F5..         MOV     ?V0 + 0,A
   \   0002F8   E5..         MOV     A,?V0 + 13
   \   0002FA   8008         SJMP    ??GUI_BMP_SerializeEx_8
    105              for (x = 0; x < xSize; x++) {
    106                if (BPP <= 8) {
    107                  pfSerialize(LCD_GetPixelIndex(x0 + x, y0 + y), p);
    108                } else {
    109                  U16 Color16;
    110                  U32 Color = LCD_GetPixelColor(x0 + x, y0 + y);
    111                  int b = ((Color >> 16) * 31 + 127) / 255;
    112                  int g = (((Color >> 8) & 255) * 31 + 127) / 255;
    113                  int r = ((Color & 255) * 31 + 127) / 255;
    114                  Color16 = (r << 10) | (g << 5) | b;       /* 16 bpp Bitmaps in windows are 555: rrrrrgggggbbbbb */
    115                  _SendU16(pfSerialize, Color16, p);
    116                }
    117              }
    118              /* Align pointer to next U32 */
    119              for (i = BytesPerLine & 3; i > 0; i--) {
   \                     ??GUI_BMP_SerializeEx_9:
   \   0002FC   E5..         MOV     A,?V0 + 0
   \   0002FE   24FF         ADD     A,#-0x1
   \   000300   F5..         MOV     ?V0 + 0,A
   \   000302   E5..         MOV     A,?V0 + 1
   \                     ??GUI_BMP_SerializeEx_8:
   \   000304   34FF         ADDC    A,#-0x1
   \   000306   F5..         MOV     ?V0 + 1,A
   \   000308   C3           CLR     C
   \   000309   E5..         MOV     A,?V0 + 1
   \   00030B   9400         SUBB    A,#0x0
   \   00030D   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00030F   65D0         XRL     A,PSW
   \   000311   33           RLC     A
   \   000312   5003         JNC     $+5
   \   000314   02....       LJMP    ??GUI_BMP_SerializeEx_10 & 0xFFFF
   \   000317   7404         MOV     A,#0x4
   \   000319   12....       LCALL   ?XSTACK_DISP0_8
   \   00031C   E4           CLR     A
   \   00031D   F0           MOVX    @DPTR,A
   \   00031E   A3           INC     DPTR
   \   00031F   02....       LJMP    ??GUI_BMP_SerializeEx_11 & 0xFFFF
   \                     ??GUI_BMP_SerializeEx_12:
   \   000322                ; Setup parameters for call to function LCD_GetPixelColor
   \   000322   7420         MOV     A,#0x20
   \   000324   12....       LCALL   ?XSTACK_DISP0_8
   \   000327   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_34:
   \   00032A   12....       LCALL   ?XSTACK_DISP0_8
   \   00032D   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_37:
   \   000330   7404         MOV     A,#0x4
   \   000332   12....       LCALL   ?XSTACK_DISP0_8
   \   000335   E0           MOVX    A,@DPTR
   \   000336   28           ADD     A,R0
   \   000337   FA           MOV     R2,A
   \   000338   A3           INC     DPTR
   \   000339   E0           MOVX    A,@DPTR
   \   00033A   39           ADDC    A,R1
   \   00033B   FB           MOV     R3,A
   \   00033C   12....       LCALL   ??LCD_GetPixelColor?relay
   \   00033F   8A..         MOV     ?V0 + 8,R2
   \   000341   8B..         MOV     ?V0 + 9,R3
   \   000343   8C..         MOV     ?V0 + 10,R4
   \   000345   8D..         MOV     ?V0 + 11,R5
   \   000347                ; Setup parameters for call to function _SendU16
   \   000347   7426         MOV     A,#0x26
   \   000349   12....       LCALL   ?XSTACK_DISP0_8
   \   00034C   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   00034F   8A..         MOV     ?V0 + 4,R2
   \   000351   8B..         MOV     ?V0 + 5,R3
   \   000353   8C..         MOV     ?V0 + 6,R4
   \   000355   8D..         MOV     ?V0 + 7,R5
   \   000357   90....       MOV     DPTR,#__Constant_ff
   \   00035A   78..         MOV     R0,#?V0 + 4
   \   00035C   12....       LCALL   ?L_AND_X
   \   00035F   90....       MOV     DPTR,#__Constant_1f
   \   000362   78..         MOV     R0,#?V0 + 12
   \   000364   12....       LCALL   ?L_MOV_X
   \   000367   78..         MOV     R0,#?V0 + 4
   \   000369   79..         MOV     R1,#?V0 + 12
   \   00036B   12....       LCALL   ?L_MUL
   \   00036E   90....       MOV     DPTR,#__Constant_7f
   \   000371   78..         MOV     R0,#?V0 + 4
   \   000373   12....       LCALL   ?L_ADD_X
   \   000376   90....       MOV     DPTR,#__Constant_ff
   \   000379   78..         MOV     R0,#?V0 + 12
   \   00037B   12....       LCALL   ?L_MOV_X
   \   00037E   78..         MOV     R0,#?V0 + 4
   \   000380   79..         MOV     R1,#?V0 + 12
   \   000382   12....       LCALL   ?UL_DIV_MOD
   \   000385   740A         MOV     A,#0xa
   \   000387   78..         MOV     R0,#?V0 + 4
   \   000389   12....       LCALL   ?S_SHL
   \   00038C   85....       MOV     ?V0 + 3,?V0 + 5
   \   00038F   8B..         MOV     ?V0 + 5,R3
   \   000391   C5..         XCH     A,?V0 + 5
   \   000393   F5..         MOV     ?V0 + 4,A
   \   000395   E4           CLR     A
   \   000396   F5..         MOV     ?V0 + 6,A
   \   000398   F5..         MOV     ?V0 + 7,A
   \   00039A   90....       MOV     DPTR,#__Constant_1f
   \   00039D   78..         MOV     R0,#?V0 + 12
   \   00039F   12....       LCALL   ?L_MOV_X
   \   0003A2   78..         MOV     R0,#?V0 + 4
   \   0003A4   79..         MOV     R1,#?V0 + 12
   \   0003A6   12....       LCALL   ?L_MUL
   \   0003A9   90....       MOV     DPTR,#__Constant_7f
   \   0003AC   78..         MOV     R0,#?V0 + 4
   \   0003AE   12....       LCALL   ?L_ADD_X
   \   0003B1   90....       MOV     DPTR,#__Constant_ff
   \   0003B4   78..         MOV     R0,#?V0 + 12
   \   0003B6   12....       LCALL   ?L_MOV_X
   \   0003B9   78..         MOV     R0,#?V0 + 4
   \   0003BB   79..         MOV     R1,#?V0 + 12
   \   0003BD   12....       LCALL   ?UL_DIV_MOD
   \   0003C0   7405         MOV     A,#0x5
   \   0003C2   78..         MOV     R0,#?V0 + 4
   \   0003C4   12....       LCALL   ?S_SHL
   \   0003C7   AA..         MOV     R2,?V0 + 4
   \   0003C9   E5..         MOV     A,?V0 + 3
   \   0003CB   45..         ORL     A,?V0 + 5
   \   0003CD   FB           MOV     R3,A
   \   0003CE   7410         MOV     A,#0x10
   \   0003D0   78..         MOV     R0,#?V0 + 8
   \   0003D2   12....       LCALL   ?UL_SHR
   \   0003D5   90....       MOV     DPTR,#__Constant_1f
   \   0003D8   78..         MOV     R0,#?V0 + 4
   \   0003DA   12....       LCALL   ?L_MOV_X
   \   0003DD   78..         MOV     R0,#?V0 + 8
   \   0003DF   79..         MOV     R1,#?V0 + 4
   \   0003E1   12....       LCALL   ?L_MUL
   \   0003E4   90....       MOV     DPTR,#__Constant_7f
   \   0003E7   78..         MOV     R0,#?V0 + 8
   \   0003E9   12....       LCALL   ?L_ADD_X
   \   0003EC   90....       MOV     DPTR,#__Constant_ff
   \   0003EF   78..         MOV     R0,#?V0 + 4
   \   0003F1   12....       LCALL   ?L_MOV_X
   \   0003F4   78..         MOV     R0,#?V0 + 8
   \   0003F6   79..         MOV     R1,#?V0 + 4
   \   0003F8   12....       LCALL   ?UL_DIV_MOD
   \   0003FB   EA           MOV     A,R2
   \   0003FC   45..         ORL     A,?V0 + 8
   \   0003FE   FC           MOV     R4,A
   \   0003FF   EB           MOV     A,R3
   \   000400   45..         ORL     A,?V0 + 9
   \   000402   FD           MOV     R5,A
   \   000403   7402         MOV     A,#0x2
   \   000405   12....       LCALL   ?XSTACK_DISP0_8
   \   000408   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_33:
   \   00040B   12....       LCALL   ?DEALLOC_XSTACK8
   \                     ??GUI_BMP_SerializeEx_13:
   \   00040E   7404         MOV     A,#0x4
   \   000410   12....       LCALL   ?XSTACK_DISP0_8
   \   000413   E0           MOVX    A,@DPTR
   \   000414   2401         ADD     A,#0x1
   \   000416   F0           MOVX    @DPTR,A
   \   000417   A3           INC     DPTR
   \   000418   E0           MOVX    A,@DPTR
   \   000419   3400         ADDC    A,#0x0
   \                     ??GUI_BMP_SerializeEx_11:
   \   00041B   F0           MOVX    @DPTR,A
   \   00041C   7404         MOV     A,#0x4
   \   00041E   12....       LCALL   ?XSTACK_DISP0_8
   \   000421   C082         PUSH    DPL
   \   000423   C083         PUSH    DPH
   \   000425   7422         MOV     A,#0x22
   \   000427   12....       LCALL   ?XSTACK_DISP0_8
   \   00042A   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_38:
   \   00042D   D083         POP     DPH
   \   00042F   D082         POP     DPL
   \   000431   C3           CLR     C
   \   000432   E0           MOVX    A,@DPTR
   \   000433   98           SUBB    A,R0
   \   000434   A3           INC     DPTR
   \   000435   E0           MOVX    A,@DPTR
   \   000436   99           SUBB    A,R1
   \   000437   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000439   65D0         XRL     A,PSW
   \   00043B   33           RLC     A
   \   00043C   4003         JC      $+5
   \   00043E   02....       LJMP    ??GUI_BMP_SerializeEx_9 & 0xFFFF
   \   000441   7402         MOV     A,#0x2
   \   000443   12....       LCALL   ?XSTACK_DISP0_8
   \   000446   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   000449   4003         JC      $+5
   \   00044B   02....       LJMP    ??GUI_BMP_SerializeEx_12 & 0xFFFF
   \   00044E                ; Setup parameters for indirect call
   \   00044E   7426         MOV     A,#0x26
   \   000450   12....       LCALL   ?XSTACK_DISP0_8
   \   000453   E0           MOVX    A,@DPTR
   \   000454   FA           MOV     R2,A
   \   000455   A3           INC     DPTR
   \   000456   E0           MOVX    A,@DPTR
   \   000457   FB           MOV     R3,A
   \   000458   EA           MOV     A,R2
   \   000459   FE           MOV     R6,A
   \   00045A   EB           MOV     A,R3
   \   00045B   FF           MOV     R7,A
   \   00045C                ; Setup parameters for call to function LCD_GetPixelIndex
   \   00045C   7420         MOV     A,#0x20
   \   00045E   12....       LCALL   ?XSTACK_DISP0_8
   \   000461   12....       LCALL   ?Subroutine4 & 0xFFFF
    120                pfSerialize(0, p);
    121              }
    122            }
   \                     ??CrossCallReturnLabel_35:
   \   000464   12....       LCALL   ?XSTACK_DISP0_8
   \   000467   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_39:
   \   00046A   7404         MOV     A,#0x4
   \   00046C   12....       LCALL   ?XSTACK_DISP0_8
   \   00046F   E0           MOVX    A,@DPTR
   \   000470   28           ADD     A,R0
   \   000471   FA           MOV     R2,A
   \   000472   A3           INC     DPTR
   \   000473   E0           MOVX    A,@DPTR
   \   000474   39           ADDC    A,R1
   \   000475   FB           MOV     R3,A
   \   000476   12....       LCALL   ??LCD_GetPixelIndex?relay
   \   000479   EA           MOV     A,R2
   \   00047A   F9           MOV     R1,A
   \   00047B   EE           MOV     A,R6
   \   00047C   FA           MOV     R2,A
   \   00047D   EF           MOV     A,R7
   \   00047E   FB           MOV     R3,A
   \   00047F   85..82       MOV     DPL,?XSP + 0
   \   000482   85..83       MOV     DPH,?XSP + 1
   \   000485   E0           MOVX    A,@DPTR
   \   000486   F8           MOV     R0,A
   \   000487   A3           INC     DPTR
   \   000488   E0           MOVX    A,@DPTR
   \   000489   F583         MOV     DPH,A
   \   00048B   8882         MOV     DPL,R0
   \   00048D   12....       LCALL   ?CALL_IND
   \   000490   02....       LJMP    ??GUI_BMP_SerializeEx_13 & 0xFFFF
    123          }
   \                     ??GUI_BMP_SerializeEx_10:
   \   000493   7408         MOV     A,#0x8
   \   000495   12....       LCALL   ?DEALLOC_XSTACK8
   \   000498   7F10         MOV     R7,#0x10
   \   00049A   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   F5..         MOV     ?V0 + 1,A
   \   000002   33           RLC     A
   \   000003   95E0         SUBB    A,0xE0 /* A   */
   \   000005   F5..         MOV     ?V0 + 2,A
   \   000007   F5..         MOV     ?V0 + 3,A
   \   000009   78..         MOV     R0,#?V0 + 0
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F9           MOV     R1,A
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   25..         ADD     A,?V0 + 0
   \   000003   FC           MOV     R4,A
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   35..         ADDC    A,?V0 + 1
   \   000008   FD           MOV     R5,A
   \   000009   7406         MOV     A,#0x6
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FA           MOV     R2,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FB           MOV     R3,A
   \   000005   12....       LCALL   ??_SendU16?relay
   \   000008   7402         MOV     A,#0x2
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   C3           CLR     C
   \   000001   E0           MOVX    A,@DPTR
   \   000002   9409         SUBB    A,#0x9
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   9400         SUBB    A,#0x0
   \   000008   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00000A   65D0         XRL     A,PSW
   \   00000C   33           RLC     A
   \   00000D   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FC           MOV     R4,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FD           MOV     R5,A
   \   000005   7404         MOV     A,#0x4
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FA           MOV     R2,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FB           MOV     R3,A
   \   000005   12....       LCALL   ??_SendU32?relay
   \   000008   7404         MOV     A,#0x4
   \   00000A   22           RET
    124          
    125          /*********************************************************************
    126          *
    127          *       GUI_BMP_Serialize
    128          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    129          void GUI_BMP_Serialize(GUI_CALLBACK_VOID_U8_P * pfSerialize, void * p) {
   \                     GUI_BMP_Serialize:
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 2,R4
   \   00000B   8D..         MOV     ?V0 + 3,R5
    130            GUI_BMP_SerializeEx(pfSerialize, 0, 0, LCD_GetXSize(), LCD_GetYSize(), p);
   \   00000D                ; Setup parameters for call to function LCD_GetYSize
   \   00000D   12....       LCALL   ??LCD_GetYSize?relay
   \   000010   8A..         MOV     ?V0 + 0,R2
   \   000012   8B..         MOV     ?V0 + 1,R3
   \   000014                ; Setup parameters for call to function GUI_BMP_SerializeEx
   \   000014   78..         MOV     R0,#?V0 + 2
   \   000016   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000019   78..         MOV     R0,#?V0 + 0
   \   00001B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00001E                ; Setup parameters for call to function LCD_GetXSize
   \   00001E   12....       LCALL   ??LCD_GetXSize?relay
   \   000021   8A..         MOV     ?V0 + 0,R2
   \   000023   8B..         MOV     ?V0 + 1,R3
   \   000025   78..         MOV     R0,#?V0 + 0
   \   000027   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00002A   E4           CLR     A
   \   00002B   F5..         MOV     ?V0 + 0,A
   \   00002D   F5..         MOV     ?V0 + 1,A
   \   00002F   78..         MOV     R0,#?V0 + 0
   \   000031   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000034   7C00         MOV     R4,#0x0
   \   000036   7D00         MOV     R5,#0x0
   \   000038   EE           MOV     A,R6
   \   000039   FA           MOV     R2,A
   \   00003A   EF           MOV     A,R7
   \   00003B   FB           MOV     R3,A
   \   00003C   12....       LCALL   ??GUI_BMP_SerializeEx?relay
   \   00003F   7408         MOV     A,#0x8
   \   000041   12....       LCALL   ?DEALLOC_XSTACK8
    131          }
   \   000044   7F06         MOV     R7,#0x6
   \   000046   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_0:
   \   000000   00000000     DD 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_28:
   \   000000   28000000     DD 40

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_ff:
   \   000000   FF000000     DD 255

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_ff00:
   \   000000   00FF0000     DD 65280

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_1f:
   \   000000   1F000000     DD 31

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_7f:
   \   000000   7F000000     DD 127

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_SendU16?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _SendU16

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_SendU32?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _SendU32

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI_BMP_SerializeEx?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI_BMP_SerializeEx

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI_BMP_Serialize?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI_BMP_Serialize
    132          
    133          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                 ISTACK PSTACK XSTACK
     --------                 ------ ------ ------
     GUI_BMP_Serialize            0      0     22
       -> LCD_GetYSize            0      0     28
       -> LCD_GetXSize            0      0     36
       -> GUI_BMP_SerializeEx     0      0     44
     GUI_BMP_SerializeEx          2      0     58
       -> LCD_GetBitsPerPixel     0      0     64
       -> _SendU16                0      0     68
       -> _SendU32                0      0     72
       -> _SendU32                0      0     72
       -> _SendU32                0      0     72
       -> _SendU32                0      0     72
       -> _SendU32                0      0     72
       -> _SendU32                0      0     72
       -> _SendU16                0      0     68
       -> _SendU16                0      0     68
       -> _SendU32                0      0     72
       -> _SendU32                0      0     72
       -> _SendU32                0      0     72
       -> _SendU32                0      0     72
       -> _SendU32                0      0     72
       -> _SendU32                0      0     72
       -> GUI_Index2Color         0      0     64
       -> _SendU32                0      0     72
       -> LCD_GetPixelColor       0      0     64
       -> _SendU16                0      0     68
       -> LCD_GetPixelIndex       0      0     64
     _SendU16                     0      0     46
     _SendU32                     0      0     54
       -> _SendU16                0      0     36
       -> _SendU16                0      0     36


   Segment part sizes:

     Function/Label              Bytes
     --------------              -----
     _SendU16                      59
     _SendU32                      79
     GUI_BMP_SerializeEx         1181
     ?Subroutine6                  12
     ?Subroutine5                   6
     ?Subroutine4                  12
     ?Subroutine3                  11
     ?Subroutine2                  14
     ?Subroutine1                   8
     ?Subroutine0                  11
     GUI_BMP_Serialize             73
     __Constant_0                   4
     __Constant_28                  4
     __Constant_ff                  4
     __Constant_ff00                4
     __Constant_1f                  4
     __Constant_7f                  4
     ??_SendU16?relay               6
     ??_SendU32?relay               6
     ??GUI_BMP_SerializeEx?relay    6
     ??GUI_BMP_Serialize?relay      6

 
 1 466 bytes in segment BANKED_CODE
    24 bytes in segment BANK_RELAYS
    24 bytes in segment XDATA_ROM_C
 
 1 490 bytes of CODE  memory
     0 bytes of CONST memory (+ 24 bytes shared)

Errors: none
Warnings: none
