###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         14/Jun/2016  16:18:05 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Cor #
#                          e\GUI_UC_EncodeUTF8.c                              #
#    Command line       =  -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\..\..\..\Tools\CC2530D #
#                          B\f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func      #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\..\..\..\Tools\CC2530D #
#                          B\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0            #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1001                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโ #
#                          ลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5. #
#                          1a\Components\uCGUI\Core\GUI_UC_EncodeUTF8.c -D    #
#                          HAL_UART=TRUE -D SERIAL_APP_PORT=0 -D COOR -D      #
#                          LCD_SUPPORTED -D NV_INIT -lC                       #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\ -lA   #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\       #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\Obj\ -e     #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็ #
#                          \WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\U #
#                          tilities\SerialApp\CC2530DB\ -I                    #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\Public\ -I             #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \uCGUI\Core\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ2 #
#                          10\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\uCGUI\MultiLayer\ -I              #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \uCGUI\Config\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสม #
#                          ฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Pr #
#                          ojects\zstack\Utilities\SerialApp\CC2530DB\..\Coor #
#                          dinator\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Z #
#                          igBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Utilities\SerialApp\CC2530DB\..\..\..\ZMai #
#                          n\TI2530DB\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ21 #
#                          0\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje #
#                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\. #
#                          .\..\Components\hal\include\ -I                    #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \hal\target\CC2530EB\ -I                           #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\include\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ #
#                          210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\high_level\ -I               #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\ -I                           #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\single_chip\ -I               #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \mt\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBe #
#                          eอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zst #
#                          ack\Utilities\SerialApp\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \services\saddr\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬื #
#                          สมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\ #
#                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\.. #
#                          \..\..\..\Components\services\sdata\ -I            #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\af\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210 #
#                          \ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projec #
#                          ts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\.. #
#                          \..\Components\stack\nwk\ -I                       #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\sapi\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ2 #
#                          10\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Utilities\SerialApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\stack\sec\ -I                     #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \stack\sys\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ21 #
#                          0\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Proje #
#                          cts\zstack\Utilities\SerialApp\CC2530DB\..\..\..\. #
#                          .\..\Components\stack\zdo\ -I                      #
#                          F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\..\..\..\..\..\Components #
#                          \zmac\ -I F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\Zig #
#                          Beeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\z #
#                          stack\Utilities\SerialApp\CC2530DB\..\..\..\..\..\ #
#                          Components\zmac\f8w\ -Ohz --require_prototypes     #
#    List file          =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\List\GUI_UC #
#                          _EncodeUTF8.lst                                    #
#    Object file        =  F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WS #
#                          N-CSิดย๋\ZStack-CC2530-2.5.1a\Projects\zstack\Util #
#                          ities\SerialApp\CC2530DB\CoordinatorEB\Obj\GUI_UC_ #
#                          EncodeUTF8.r51                                     #
#                                                                             #
#                                                                             #
###############################################################################

F:\นโลฬืสมฯ\ETC-WSNฮ๏มชอ๘นโลฬืสมฯ210\ZigBeeอ๘ย็\WSN-CSิดย๋\ZStack-CC2530-2.5.1a\Components\uCGUI\Core\GUI_UC_EncodeUTF8.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              ตC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_UC_EncodeUTF8.c
     16          Purpose     : Encoding routines
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "GUI_Protected.h"

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1
     21          
     22          /*********************************************************************
     23          *
     24          *       Static code
     25          *
     26          **********************************************************************
     27          */
     28          /*********************************************************************
     29          *
     30          *       _GetCharCode
     31          *
     32          * Purpose:
     33          *   Return the UNICODE character code of the current character.
     34          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     35          static U16 _GetCharCode(const char GUI_UNI_PTR * s) {
   \                     _GetCharCode:
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
     36            U16 r;
     37            U8 Char = *(const U8*)s;
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   F5..         MOV     ?V0 + 2,A
     38            if ((Char & 0x80) == 0) {                /* Single byte (ASCII)  */
   \   00000C   A2E7         MOV     C,0xE0 /* A   */.7
   \   00000E   4006         JC      ??_GetCharCode_0
     39              r = Char;
   \   000010   F582         MOV     DPL,A
   \   000012   AA82         MOV     R2,DPL
   \   000014   805B         SJMP    ??_GetCharCode_1
     40            } else if ((Char & 0xe0) == 0xc0) {      /* Double byte sequence */
   \                     ??_GetCharCode_0:
   \   000016   74E0         MOV     A,#-0x20
   \   000018   55..         ANL     A,?V0 + 2
   \   00001A   64C0         XRL     A,#0xc0
   \   00001C   701D         JNZ     ??_GetCharCode_2
     41              r = (Char & 0x1f) << 6;
     42              Char = *(++s);
     43              Char &= 0x3f;
     44              r |= Char;
   \   00001E   E5..         MOV     A,?V0 + 2
   \   000020   541F         ANL     A,#0x1f
   \   000022   F5..         MOV     ?V0 + 0,A
   \   000024   75..00       MOV     ?V0 + 1,#0x0
   \   000027   7406         MOV     A,#0x6
   \   000029   78..         MOV     R0,#?V0 + 0
   \   00002B   12....       LCALL   ?S_SHL
   \   00002E   A3           INC     DPTR
   \   00002F   E0           MOVX    A,@DPTR
   \   000030   543F         ANL     A,#0x3f
   \   000032   F8           MOV     R0,A
   \   000033   E5..         MOV     A,?V0 + 0
   \   000035   48           ORL     A,R0
   \   000036   FA           MOV     R2,A
   \   000037   AB..         MOV     R3,?V0 + 1
   \   000039   8038         SJMP    ??_GetCharCode_3
     45            } else if ((Char & 0xf0) == 0xe0) {      /* 3 byte sequence      */
   \                     ??_GetCharCode_2:
   \   00003B   74F0         MOV     A,#-0x10
   \   00003D   55..         ANL     A,?V0 + 2
   \   00003F   64E0         XRL     A,#0xe0
   \   000041   702C         JNZ     ??_GetCharCode_4
     46              r = (Char & 0x0f) << 12;
     47              Char = *(++s);
   \   000043   A3           INC     DPTR
     48              Char &= 0x3f;
     49              r |= (Char << 6);
     50              Char = *(++s);
     51              Char &= 0x3f;
     52              r |= Char;
   \   000044   75..00       MOV     ?V0 + 3,#0x0
   \   000047   740C         MOV     A,#0xc
   \   000049   78..         MOV     R0,#?V0 + 2
   \   00004B   12....       LCALL   ?S_SHL
   \   00004E   E0           MOVX    A,@DPTR
   \   00004F   543F         ANL     A,#0x3f
   \   000051   F5..         MOV     ?V0 + 0,A
   \   000053   75..00       MOV     ?V0 + 1,#0x0
   \   000056   7406         MOV     A,#0x6
   \   000058   78..         MOV     R0,#?V0 + 0
   \   00005A   12....       LCALL   ?S_SHL
   \   00005D   E5..         MOV     A,?V0 + 3
   \   00005F   45..         ORL     A,?V0 + 1
   \   000061   F9           MOV     R1,A
   \   000062   A3           INC     DPTR
   \   000063   E0           MOVX    A,@DPTR
   \   000064   543F         ANL     A,#0x3f
   \   000066   FA           MOV     R2,A
   \   000067   E5..         MOV     A,?V0 + 0
   \   000069   4A           ORL     A,R2
   \   00006A   FA           MOV     R2,A
   \   00006B   E9           MOV     A,R1
   \   00006C   FB           MOV     R3,A
   \   00006D   8004         SJMP    ??_GetCharCode_3
     53            } else {
     54              GUI_DEBUG_ERROROUT("Illegal character during UTF-8 decoding!");
     55              r = 1;       /* Illegal character. To avoid endless loops in upper layers, we return 1 rather than 0. */
   \                     ??_GetCharCode_4:
   \   00006F   7A01         MOV     R2,#0x1
   \                     ??_GetCharCode_1:
   \   000071   7B00         MOV     R3,#0x0
     56            }
     57            return r;
   \                     ??_GetCharCode_3:
   \   000073                REQUIRE ?Subroutine0
   \   000073                ; // Fall through to label ?Subroutine0
     58          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
     59          
     60          /*********************************************************************
     61          *
     62          *       _GetCharSize
     63          *
     64          * Purpose:
     65          *   Return the number of bytes of the current character.
     66          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     67          static int _GetCharSize(const char GUI_UNI_PTR * s) {
   \                     _GetCharSize:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     68            U8 Char = *s;
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   E0           MOVX    A,@DPTR
   \   000009   F8           MOV     R0,A
     69            if ((Char & 0x80) == 0) {
   \   00000A   A2E7         MOV     C,0xE0 /* A   */.7
   \   00000C   4004         JC      ??_GetCharSize_0
     70              return 1;
   \                     ??_GetCharSize_1:
   \   00000E   7A01         MOV     R2,#0x1
   \   000010   8014         SJMP    ??_GetCharSize_2
     71            } else if ((Char & 0xe0) == 0xc0) {
   \                     ??_GetCharSize_0:
   \   000012   74E0         MOV     A,#-0x20
   \   000014   58           ANL     A,R0
   \   000015   64C0         XRL     A,#0xc0
   \   000017   7004         JNZ     ??_GetCharSize_3
     72              return 2;
   \   000019   7A02         MOV     R2,#0x2
   \   00001B   8009         SJMP    ??_GetCharSize_2
     73            } else if ((Char & 0xf0) == 0xe0) {
   \                     ??_GetCharSize_3:
   \   00001D   74F0         MOV     A,#-0x10
   \   00001F   58           ANL     A,R0
   \   000020   64E0         XRL     A,#0xe0
   \   000022   70EA         JNZ     ??_GetCharSize_1
     74              return 3;
   \   000024   7A03         MOV     R2,#0x3
   \                     ??_GetCharSize_2:
   \   000026   7B00         MOV     R3,#0x0
     75            }
   \   000028                REQUIRE ?Subroutine1
   \   000028                ; // Fall through to label ?Subroutine1
     76            GUI_DEBUG_ERROROUT("Illegal character during UTF-8 decoding!");
     77            return 1;       /* Illegal character. To avoid endless loops in upper layers, we return 1 rather than 0. */
     78          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
     79          
     80          /*********************************************************************
     81          *
     82          *       _CalcSizeOfChar
     83          *
     84          * Purpose:
     85          *   Return the number of bytes needed for the given character.
     86          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     87          static int _CalcSizeOfChar(U16 Char) {
   \                     _CalcSizeOfChar:
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     88            int r;
     89            if (Char & 0xF800) {                /* Single byte (ASCII)  */
   \   000000   EB           MOV     A,R3
   \   000001   54F8         ANL     A,#0xf8
   \   000003   6004         JZ      ??_CalcSizeOfChar_0
     90              r = 3;
   \   000005   7A03         MOV     R2,#0x3
   \   000007   8010         SJMP    ??_CalcSizeOfChar_1
     91            } else if (Char & 0xFF80) {         /* Double byte sequence */
   \                     ??_CalcSizeOfChar_0:
   \   000009   EA           MOV     A,R2
   \   00000A   5480         ANL     A,#0x80
   \   00000C   F8           MOV     R0,A
   \   00000D   EB           MOV     A,R3
   \   00000E   F9           MOV     R1,A
   \   00000F   E8           MOV     A,R0
   \   000010   49           ORL     A,R1
   \   000011   6004         JZ      ??_CalcSizeOfChar_2
     92              r = 2;
   \   000013   7A02         MOV     R2,#0x2
   \   000015   8002         SJMP    ??_CalcSizeOfChar_1
     93            } else {                            /* 3 byte sequence      */
     94              r = 1;
   \                     ??_CalcSizeOfChar_2:
   \   000017   7A01         MOV     R2,#0x1
   \                     ??_CalcSizeOfChar_1:
   \   000019   7B00         MOV     R3,#0x0
     95            }
     96            return r;
   \   00001B   02....       LJMP    ?BRET
     97          }
     98          
     99          /*********************************************************************
    100          *
    101          *       _Encode
    102          *
    103          * Purpose:
    104          *   Encode character into 1/2/3 bytes.
    105          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    106          static int _Encode(char *s, U16 Char) {
   \                     _Encode:
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 0,R4
   \   00000B   8D..         MOV     ?V0 + 1,R5
    107            int r;
    108            r = _CalcSizeOfChar(Char);
   \   00000D                ; Setup parameters for call to function _CalcSizeOfChar
   \   00000D   AA..         MOV     R2,?V0 + 0
   \   00000F   AB..         MOV     R3,?V0 + 1
   \   000011   12....       LCALL   ??_CalcSizeOfChar?relay
   \   000014   8A..         MOV     ?V0 + 2,R2
   \   000016   8B..         MOV     ?V0 + 3,R3
    109            switch (r) {
   \   000018   78..         MOV     R0,#?V0 + 2
   \   00001A   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for _Encode>_0`:
   \   00001D   0100         DW        1
   \   00001F   02           DB        2
   \   000020   ....         DW        ??_Encode_0
   \   000022   ....         DW        ??_Encode_1
   \   000024   ....         DW        ??_Encode_2
   \   000026   ....         DW        ??_Encode_3
    110            case 1:
    111              *s = (char)Char;
   \                     ??_Encode_1:
   \   000028   8E82         MOV     DPL,R6
   \   00002A   8F83         MOV     DPH,R7
   \   00002C   E5..         MOV     A,?V0 + 0
   \   00002E   8049         SJMP    ??_Encode_4
    112              break;
    113            case 2:
    114              *s++ = 0xC0 | (Char >> 6);
   \                     ??_Encode_2:
   \   000030   85....       MOV     ?V0 + 2,?V0 + 0
   \   000033   85....       MOV     ?V0 + 3,?V0 + 1
   \   000036   7406         MOV     A,#0x6
   \   000038   78..         MOV     R0,#?V0 + 2
   \   00003A   12....       LCALL   ?US_SHR
   \   00003D   E5..         MOV     A,?V0 + 2
   \   00003F   44C0         ORL     A,#0xc0
   \   000041   8E82         MOV     DPL,R6
   \   000043   8F83         MOV     DPH,R7
   \   000045   802A         SJMP    ??_Encode_5
    115              *s   = 0x80 | (Char & 0x3F);
    116              break;
    117            case 3:
    118              *s++ = 0xE0 | (Char >> 12);
   \                     ??_Encode_3:
   \   000047   85....       MOV     ?V0 + 2,?V0 + 0
   \   00004A   85....       MOV     ?V0 + 3,?V0 + 1
   \   00004D   740C         MOV     A,#0xc
   \   00004F   78..         MOV     R0,#?V0 + 2
   \   000051   12....       LCALL   ?US_SHR
   \   000054   E5..         MOV     A,?V0 + 2
   \   000056   44E0         ORL     A,#0xe0
   \   000058   8E82         MOV     DPL,R6
   \   00005A   8F83         MOV     DPH,R7
   \   00005C   F0           MOVX    @DPTR,A
   \   00005D   A3           INC     DPTR
    119              *s++ = 0x80 | ((Char >> 6) & 0x3F);
   \   00005E   85....       MOV     ?V0 + 2,?V0 + 0
   \   000061   85....       MOV     ?V0 + 3,?V0 + 1
   \   000064   7406         MOV     A,#0x6
   \   000066   78..         MOV     R0,#?V0 + 2
   \   000068   12....       LCALL   ?US_SHR
   \   00006B   E5..         MOV     A,?V0 + 2
   \   00006D   543F         ANL     A,#0x3f
   \   00006F   4480         ORL     A,#0x80
   \                     ??_Encode_5:
   \   000071   F0           MOVX    @DPTR,A
   \   000072   A3           INC     DPTR
    120              *s   = 0x80 | (Char & 0x3F);
   \   000073   E5..         MOV     A,?V0 + 0
   \   000075   543F         ANL     A,#0x3f
   \   000077   4480         ORL     A,#0x80
   \                     ??_Encode_4:
   \   000079   F0           MOVX    @DPTR,A
    121              break;
    122            }
    123            return r;
   \                     ??_Encode_0:
   \   00007A   02....       LJMP    ?Subroutine0 & 0xFFFF
    124          }
    125          
    126          /*********************************************************************
    127          *
    128          *       _API_Table
    129          */

   \                                 In  segment XDATA_ROM_C, align 1
    130          static const GUI_UC_ENC_APILIST _API_Table = {
   \                     _API_Table:
   \   000000   ....         DW ??_GetCharCode?relay
   \   000002   ....         DW ??_GetCharSize?relay
   \   000004   ....         DW ??_CalcSizeOfChar?relay
   \   000006   ....         DW ??_Encode?relay
    131            _GetCharCode,     /*  return character code as U16 (Unicode) */
    132            _GetCharSize,     /*  return size of character: 1/2/3        */
    133            _CalcSizeOfChar,  /*  return size of character: 1/2/3        */
    134            _Encode           /*  Encode character into 1/2/3 bytes      */
    135          };
    136          
    137          /*********************************************************************
    138          *
    139          *       Exported code
    140          *
    141          **********************************************************************
    142          */
    143          /*********************************************************************
    144          *
    145          *       GUI_UC_SetEncodeUTF8
    146          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    147          void GUI_UC_SetEncodeUTF8(void) {
   \                     GUI_UC_SetEncodeUTF8:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    148            halIntState_t state;  
    149            GUI_LOCK(state);
   \   000004   E5A8         MOV     A,0xa8
   \   000006   F8           MOV     R0,A
   \   000007   C2AF         CLR     0xa8.7
    150            GUI_Context.pUC_API = &_API_Table;
   \   000009   90....       MOV     DPTR,#GUI_Context + 23
   \   00000C   74..         MOV     A,#_API_Table & 0xff
   \   00000E   F0           MOVX    @DPTR,A
   \   00000F   A3           INC     DPTR
   \   000010   74..         MOV     A,#(_API_Table >> 8) & 0xff
   \   000012   F0           MOVX    @DPTR,A
    151            GUI_UNLOCK(state);
   \   000013   E8           MOV     A,R0
   \   000014   A2E7         MOV     C,0xE0 /* A   */.7
   \   000016   92AF         MOV     0xa8.7,C
    152          }
   \   000018   02....       LJMP    ?Subroutine1 & 0xFFFF
   \   00001B                REQUIRE _A_IEN0

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_GetCharCode?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _GetCharCode

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_GetCharSize?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _GetCharSize

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_CalcSizeOfChar?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _CalcSizeOfChar

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_Encode?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _Encode

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GUI_UC_SetEncodeUTF8?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GUI_UC_SetEncodeUTF8
    153          
    154          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function             ISTACK PSTACK XSTACK
     --------             ------ ------ ------
     GUI_UC_SetEncodeUTF8     2      0      0
     _CalcSizeOfChar          0      0     12
     _Encode                  1      0     12
       -> _CalcSizeOfChar     0      0     24
     _GetCharCode             0      0     12
     _GetCharSize             2      0      0


   Segment part sizes:

     Function/Label               Bytes
     --------------               -----
     _A_IEN0                         1
     _GetCharCode                  115
     ?Subroutine0                    5
     _GetCharSize                   40
     ?Subroutine1                    7
     _CalcSizeOfChar                30
     _Encode                       125
     _API_Table                      8
     GUI_UC_SetEncodeUTF8           27
     ??_GetCharCode?relay            6
     ??_GetCharSize?relay            6
     ??_CalcSizeOfChar?relay         6
     ??_Encode?relay                 6
     ??GUI_UC_SetEncodeUTF8?relay    6

 
 349 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
   1 byte  in segment SFR_AN
   8 bytes in segment XDATA_ROM_C
 
 379 bytes of CODE  memory
   8 bytes of CONST memory
   0 bytes of DATA  memory (+ 1 byte shared)

Errors: none
Warnings: none
